{"version":3,"sources":["components/CreateSession.tsx","components/Footer.tsx","security/mail.js","components/JoinSession.tsx","components/UnknownPage.tsx","components/Collapsible.tsx","components/Game.tsx","components/DraggableGame.tsx","components/GamesList.tsx","components/Button.tsx","components/Invite.tsx","components/Loading.tsx","components/UserHeader.tsx","components/GroupHeader.tsx","components/Friend.tsx","components/FriendsList.tsx","components/Switch.tsx","components/Settings.tsx","components/Matching.tsx","components/Error.tsx","components/ErrorList.tsx","App.tsx","index.tsx"],"names":["CreateSession","props","useState","steamId","setSteamId","history","useHistory","handleSubmit","event","a","preventDefault","onSubmit","push","className","htmlFor","type","name","id","onChange","target","value","defaultValue","placeholder","required","to","Footer","href","rel","title","onClick","encrypted","decrypted","i","length","charCodeAt","String","fromCharCode","charAt","window","open","toMail","src","packageJSON","subUrl","alt","height","width","JoinSession","sessionId","setSessionId","UnknownPage","Collapsible","collapsed","setCollapsed","hideContent","setHideContent","undefined","lastTimeout","setLastTimeout","content","children","clearTimeout","timeout","setTimeout","header","Game","playtimeText","appid","playtime","Math","round","game","playtime_forever","Number","EPSILON","playtime2weeks","playtime_2weeks","weight","getImage","img_icon_url","loading","hash","DraggableGame","draggableId","index","provided","ref","innerRef","draggableProps","dragHandleProps","GamesList","dndListRef","createRef","useEffect","gameSearch","current","console","log","pos","search","similarities","games","map","similarity","compareTwoStrings","largest","indexOfLargest","forEach","entry","searchGamePosition","scrollTo","top","behavior","droppableId","onDragEnd","droppableProps","onlyCommonGames","commonAppIds","filter","includes","InnerList","React","memo","list","Button","danger","Invite","invite","location","origin","encodeURIComponent","readOnly","onFocus","select","navigator","clipboard","writeText","openFriendsList","Loading","centerInner","center","UserHeader","showSubheader","onSearch","onSortByTotal","onSortByLastTwoWeeks","subheader","user","profileurl","avatarmedium","preferences","GroupHeader","gamesCount","commonGames","Friend","friend","personaname","realname","FriendsList","friends","setFriends","setFilter","setList","listRef","socket","on","msg","emit","removeAllListeners","mapToJSXElement","filterSimilarity","sort","b","warn","closeFriendsList","Switch","checked","Settings","settings","setSettings","reorder","startIndex","endIndex","result","Array","from","splice","removed","getCommonAppIds","users","appOwners","maxOwners","findIndex","elem","owners","Matching","setUsers","self","setSelf","matchedGames","setMatchedGames","preferencesChanged","setPreferencesChanged","setSocket","showFriendslist","setShowFriendslist","setCommonAppIds","setGameSearch","concat","error","err","addError","status","disconnect","replace","session","ownSteamId","you","newUsers","newSelf","find","data","changedUserIndex","query","io","reconnectionAttempts","initiateSocket","attempt","appIds","Map","maxGames","max","pref","matchedGame","isNaN","getWeight","has","get","img_logo_url","has_community_visible_stats","set","values","calculatePreferences","sortPreferences","sortBy","sortFunc","aPlaytime","bPlaytime","destination","source","Error","timer","removeError","ErrorList","getRemoveErrorFnc","setErrors","errors","App","encodedSteamId","URLSearchParams","decodeURIComponent","sessionStorage","setItem","cachedSteamId","getItem","getSteamId","encodedSessionId","cachedSessionId","getSessionId","joinSessionId","setJoinSessionId","switchToJoinPage","pathname","matching","basename","path","exact","canAutoJoin","removeItem","urlParams","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4dced7dc.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom';\n\nexport default function CreateSession(props: {\n  steamId?: string,\n  onSubmit: (steamId: string) => void,\n}) {\n  const [steamId, setSteamId] = useState<string>(props.steamId ?? \"\");\n  const history = useHistory();\n\n  const handleSteamIdChange = (event: any) => {\n    setSteamId(event.target.value);\n  }\n\n  const handleSubmit = async (event: any) => {\n    event.preventDefault();\n    props.onSubmit(steamId);\n    history.push(\"/matching\");\n  }\n\n  return (\n    <div className=\"user-forms\">\n      <div className=\"create-session\">\n        <h2>Create a new Session</h2>\n        <form onSubmit={handleSubmit}>\n          <label htmlFor=\"createSessionSteamId\">Steam ID or Profile URL:</label>\n          <div className=\"steamId-input input-margin\">\n            <span className=\"profile-url\">https://steamcommunity.com/id/</span>\n            <input\n              type=\"text\"\n              name=\"steamId\"\n              id=\"createSessionSteamId\"\n              onChange={handleSteamIdChange}\n              className=\"d-table-cell\"\n              defaultValue={steamId}\n              placeholder=\"Steam ID or Profile URL\"\n              required\n            />\n          </div>\n          <input type=\"submit\" value=\"Create New Session\" className=\"btn\" />\n        </form>\n        <p className=\"t-center\">\n          Or <Link to=\"/join\">join a existing session</Link>\n        </p>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport packageJSON from \"../../package.json\"\nimport toMail from \"../security/mail\"\nimport \"../styles/footer.css\"\n\nexport default function Footer() {\n  return (\n    <div className=\"footer\">\n      <div className=\"f-left\">\n        This project is not affiliated with Valve or Steam\n      </div>\n      <div className=\"f-right\">\n        <a\n          className=\"impressum\"\n          href=\"https://aliebald.github.io/impressum/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          title=\"Impressum gemäß § 5 TMG\"\n        >\n          Impressum\n        </a>\n        <div title=\"Send me a mail\" onClick={() => toMail(\"𝕔𝕠𝕟𝕥𝕒𝕔𝕥.𝕝𝕚𝕖𝕓𝕒𝕝𝕕@𝕘𝕞𝕒𝕚𝕝.𝕔𝕠𝕞\")}>\n          <img src={`${packageJSON.subUrl}/email.svg`} alt=\"contact\" height=\"20px\" width=\"20px\" className=\"contact\" />\n        </div>\n        <a\n          href=\"https://github.com/aliebald/common-steam-games\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          title=\"GitHub Repository\"\n        >\n          <img src={`${packageJSON.subUrl}/github.svg`} alt=\"github\" height=\"18px\" width=\"18px\" className=\"github\" />\n        </a>\n      </div>\n    </div>\n  )\n}\n","/**\n * Takes an \"encrypted\" mail address, converts it to a real mail address\n * and opens the mailto link if possible\n * @param {string} encrypted - encrypted mail address written in\n *   lower-case mathematical double struck letters (𝕒-𝕫) and \"normal\"\n *   characters (all characters with character codes under 122)\n * @returns {void}\n * @author Leonard Goldstein\n * @see {@link https://github.com/goldst/goldst.github.io/blob/7d7e3c3c5eb9563fe83a47f62460e4536b9a3159/js/safety/safety.js}\n */\nexport default function toMail(encrypted) {\n  let decrypted = \"\";\n  for (let i = 0; i < encrypted.length; i++) {\n    if (encrypted.charCodeAt(i) > 122) {\n      decrypted += String.fromCharCode(\n        encrypted.charCodeAt(i + 1) - 56561\n      );\n\n      i++;\n    } else {\n      decrypted += encrypted.charAt(i);\n    }\n  }\n  window.open(\"mailto:\" + decrypted, \"_self\");\n};\n","import React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom';\n\nexport default function JoinSession(props: {\n  sessionId?: string,\n  steamId?: string,\n  onSubmit: (steamId: string, sessionId: string) => void,\n  id?: string\n}) {\n  const [steamId, setSteamId] = useState<string>(props.steamId ?? \"\");\n  const [sessionId, setSessionId] = useState<string>(props.sessionId ?? \"\");\n  const history = useHistory();\n  const handleSteamIdChange = (event: any) => {\n    setSteamId(event.target.value);\n  }\n\n  const handleSessionIdChange = (event: any) => {\n    setSessionId(event.target.value);\n  }\n\n  const handleSubmit = async (event: any) => {\n    event.preventDefault();\n    props.onSubmit(steamId, sessionId);\n    history.push(\"/matching\");\n  }\n\n  return (\n    <div className=\"user-forms\">\n      <div className=\"join-session\">\n        <h2>Join a Session</h2>\n        <form className=\"d-table\" onSubmit={handleSubmit}>\n          <div className=\"d-table-row\">\n            <label htmlFor=\"joinSessionSteamId\" className=\"d-table-cell\">Steam ID or Profile URL:</label>\n            <div className=\"steamId-input input-margin\">\n              <span className=\"profile-url\">https://steamcommunity.com/id/</span>\n              <input\n                type=\"text\"\n                name=\"steamId\"\n                id=\"joinSessionSteamId\"\n                onChange={handleSteamIdChange}\n                className=\"d-table-cell\"\n                defaultValue={steamId}\n                placeholder=\"Steam ID or Profile URL\"\n                required\n              />\n            </div>\n          </div>\n          <div className=\"d-table-row\">\n            <label htmlFor=\"sessionId\" className=\"d-table-cell\">Session ID:&nbsp;</label>\n            <input type=\"text\"\n              name=\"sessionId\"\n              id=\"sessionId\"\n              onChange={handleSessionIdChange}\n              className=\"d-table-cell input-margin\"\n              defaultValue={sessionId}\n              placeholder=\"Session ID\"\n              required\n            />\n          </div>\n          <div className=\"d-table-row\">\n            <div className=\"d-table-cell\"></div>\n            <div className=\"d-table-cell\">\n              <input type=\"submit\" value=\"Join Session\" className=\"btn\" />\n            </div>\n          </div>\n        </form>\n        <p className=\"t-center\">\n          Or <Link to=\"/\">create a new session</Link>\n        </p>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport \"../styles/unknownPage.css\"\n\n/**\n * Simple page for 404 errors\n */\nexport default function UnknownPage() {\n  return (\n    <div className=\"unknown-page\">\n      <p>The page you are looking for was not found.</p>\n      <p>You can <Link to=\"/create\">create a new session</Link> or <Link to=\"/join\">join an existing session</Link>.</p>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\n\nexport default function Collapsible(props: {\n  header?: string | JSX.Element,\n  title?: string,\n  children?: JSX.Element\n}) {\n  const [collapsed, setCollapsed] = useState(true);\n  const [hideContent, setHideContent] = useState(true);\n  const [lastTimeout, setLastTimeout] = useState<NodeJS.Timeout | undefined>(undefined);\n\n  const toggle = () => {\n    // Abort last timeout to avoid setting hideContent true,\n    // if the content was collapsed and opened again immediately \n    if (lastTimeout) {\n      clearTimeout(lastTimeout);\n      setLastTimeout(undefined);\n    }\n\n    // Toggle collapsed state. Hide content after animation delay\n    if (collapsed) {\n      setHideContent(false);\n    } else {\n      const timeout = setTimeout(() => setHideContent(true), 500);\n      setLastTimeout(timeout);\n    }\n    setCollapsed(!collapsed);\n  }\n\n  const content = props.children ?? \"No Content\";\n  return (\n    <>\n      <button type=\"button\"\n        className=\"collapsible\"\n        onClick={toggle}\n        title={props.title}\n      >\n        {props.header ?? \"Open\"}\n        <i className={collapsed ? \"arrow-down\" : \"arrow-up\"}></i>\n      </button>\n      <div className={`content ${collapsed ? \"content-collapsed\" : \"\"}`}>\n        {hideContent ? <></> : content}\n      </div>\n    </>\n  )\n}\n","import React from 'react'\r\nimport '../styles/game.css'\r\n\r\n\r\nexport default function Game(props: { game: Game | MatchedGame }) {\r\n  const playtime = Math.round(((props.game.playtime_forever / 60) + Number.EPSILON) * 100) / 100\r\n  const playtime2weeks = props.game.playtime_2weeks ? Math.round(((props.game.playtime_2weeks / 60) + Number.EPSILON) * 100) / 100 : 0\r\n\r\n  let playtimeText: string;\r\n  if ((props.game as MatchedGame).weight) {\r\n    playtimeText = `Average Playtime ${playtime}h - w: ${(props.game as MatchedGame).weight}`;\r\n  } else {\r\n    playtimeText = playtime2weeks > 0 ? `Playtime: ${playtime}h / ${playtime2weeks}h` : `Playtime: ${playtime}h`\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <a href={getStorePage(props.game.appid)} target=\"_blank\" rel=\"noopener noreferrer\" title={`${props.game.name} steam page`}>\r\n        <img\r\n          src={getImage(props.game.appid, props.game.img_icon_url)}\r\n          width=\"32\"\r\n          height=\"32\"\r\n          alt=\"icon\"\r\n          loading=\"lazy\"\r\n        />\r\n      </a>\r\n      <div className=\"game-info\">\r\n        <div className=\"title\">{props.game.name}</div>\r\n        <div className=\"playtime\">{playtimeText}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction getImage(appid: number | string, hash: number | string): string {\r\n  return `https://media.steampowered.com/steamcommunity/public/images/apps/${appid}/${hash}.jpg`\r\n}\r\n\r\nfunction getStorePage(appid: number | string): string {\r\n  return `https://store.steampowered.com/app/${appid}`\r\n}\r\n","import React from 'react'\nimport { Draggable } from 'react-beautiful-dnd'\nimport Game from './Game'\n\n\nexport default function DraggableGame(props: { game: Game, index: number, className?: string }) {\n  return (\n    <Draggable draggableId={`${props.game.appid}`} index={props.index}>\n      {provided => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          className={props.className}\n        >\n          <Game game={props.game} />\n        </div>\n      )}\n    </Draggable>\n\n  )\n}\n","import { DragDropContext, Droppable, DropResult, ResponderProvided } from \"react-beautiful-dnd\";\r\nimport React, { createRef, RefObject, useEffect } from \"react\"\r\nimport { compareTwoStrings } from \"string-similarity\";\r\nimport DraggableGame from \"./DraggableGame\";\r\nimport Game from \"./Game\";\r\n\r\n\r\nexport default function GamesList(props: {\r\n  games: Game[] | MatchedGame[],\r\n  onlyCommonGames?: boolean,\r\n  commonAppIds: number[],\r\n  droppableId?: string, // If this is given, the output list will be a drag & drop list\r\n  onDragEnd?: (result: DropResult, provided: ResponderProvided) => void,\r\n  header?: JSX.Element,\r\n  gameSearch?: string,\r\n  className?: string\r\n}) {\r\n  const header = props.header ?? \"\";\r\n  const dndListRef: RefObject<HTMLDivElement> = createRef();\r\n\r\n  useEffect(() => {\r\n    /** Finds the index of the game in games with the highest similarity with a search query */\r\n    const searchGamePosition = (search: string): number => {\r\n      // Keeps the name for debugging purposes.\r\n      const similarities = props.games.map(game => ({\r\n        name: game.name,\r\n        similarity: compareTwoStrings(game.name, search)\r\n      }));\r\n      let largest = 0;\r\n      let indexOfLargest = 0;\r\n      similarities.forEach((entry, index) => {\r\n        if (entry.similarity > largest) {\r\n          largest = entry.similarity;\r\n          indexOfLargest = index;\r\n        }\r\n      });\r\n      console.log(`Best match for game search (\"${search}\"): ${similarities[indexOfLargest].name}. Similarity: ${largest}`);\r\n      return indexOfLargest;\r\n    }\r\n\r\n    if (props.gameSearch && props.gameSearch.length > 1 && dndListRef.current) {\r\n      console.log(\"scrolling\");\r\n      const pos = searchGamePosition(props.gameSearch) * 60;\r\n      dndListRef.current.scrollTo({ top: pos, behavior: \"smooth\" });\r\n    }\r\n  }, [dndListRef, props.games, props.gameSearch])\r\n\r\n  // Return games as drag & drop list\r\n  if (props.droppableId && props.onDragEnd) {\r\n    return (\r\n      <div className={`games-list ${props.className ?? \"\"}`}>\r\n        <DragDropContext onDragEnd={props.onDragEnd}>\r\n          {header}\r\n          <div className=\"scroll-container\" ref={dndListRef}>\r\n            <Droppable droppableId={props.droppableId}>\r\n              {provided => (\r\n                <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                  <InnerList\r\n                    games={props.games}\r\n                    onlyCommonGames={props.onlyCommonGames ?? false}\r\n                    commonAppIds={props.commonAppIds}\r\n                  />\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n        </DragDropContext>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // Return games as static list if droppableId or onDragEnd is not defined in props\r\n  const games = props.onlyCommonGames ? props.games.filter(game => props.commonAppIds.includes(game.appid)) : props.games;\r\n  return (\r\n    <div className={`games-list ${props.className ?? \"\"}`}>\r\n      {header}\r\n      <div className=\"scroll-container\">\r\n        {games.map((game, index) => <Game game={game} key={index} />)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// do not re-render if the games list reference has not changed\r\nconst InnerList = React.memo(function InnerList(props: { games: Game[], commonAppIds: number[], onlyCommonGames: boolean }) {\r\n  const list = props.games.map((game: Game, index: number) => {\r\n    if (!props.onlyCommonGames || props.commonAppIds.includes(game.appid)) {\r\n      return <DraggableGame key={game.appid} game={game} index={index} />\r\n    } else {\r\n      return <DraggableGame key={game.appid} game={game} index={index} className=\"d-none\" />\r\n    }\r\n  })\r\n  return <>{list}</>\r\n});\r\n","import React from 'react'\n\nexport default function Button(props: {\n  className?: string,\n  onClick?: React.MouseEventHandler<HTMLButtonElement>,\n  danger?: boolean,\n  title?: string,\n  children?: JSX.Element | string\n}) {\n  const danger = props.danger ? \" danger\" : \"\"\n  return (\n    <button\n      className={`btn${danger} ${props.className ?? \"\"}`}\n      onClick={props.onClick}\n      title={props.title}\n    >\n      {props.children ?? \"\"}\n    </button>\n  )\n}\n","import React from \"react\"\nimport packageJSON from \"../../package.json\"\nimport Button from \"./Button\";\nimport \"../styles/invite.css\"\n\nexport default function Invite(props: {\n  sessionId: string,\n  className?: string,\n  openFriendsList: () => void;\n}) {\n  const invite = `${window.location.origin}${packageJSON.subUrl}/join?sessionId=${encodeURIComponent(props.sessionId)}`;\n  const copyInvite = () => {\n    navigator.clipboard.writeText(invite);\n  }\n  const handleFocus = (event: any) => {\n    event.target.select()\n  }\n\n  return (\n    <div className={`invite-box ${props.className ?? \"\"}`}>\n      <label>Invite your friends</label>\n      <div className=\"invite-row\">\n        <input className=\"invite-input\"\n          type=\"text\"\n          value={invite}\n          readOnly\n          onFocus={handleFocus}\n          title=\"Invite link. Click 'Copy Invite' to copy this link\"\n        />\n        <Button onClick={copyInvite} title=\"Copy invite link\">\n          Copy&nbsp;Invite\n        </Button>\n        <Button\n          onClick={props.openFriendsList}\n          title={\"Open your friends list and create personalized invites. \"\n            + \"This allows your friends to directly join you without looking up their steamId.\"}\n        >\n          Open&nbsp;Friends&nbsp;List\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport \"../styles/loading.css\"\n\nexport default function Loading(props: {\n  className?: string,\n  center?: boolean\n}) {\n  // Loading animation from https://loading.io/css/\n  const centerInner = props.center ? \" v-centered\" : \"\"\n  const content = (\n    <div className={`lds-roller${centerInner} ${props.className ?? \"\"}`}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  )\n\n  if (props.center) {\n    return <div className=\"flex-center\">{content}</div>;\n  }\n\n  return content;\n}\n","import React from \"react\"\r\nimport Button from \"./Button\"\r\nimport \"../styles/headers.css\"\r\n\r\nexport default function UserHeader(props: {\r\n  title: string,\r\n  user: User,\r\n  className?: string,\r\n  onSearch?: (filter: string) => void,\r\n  onSortByTotal?: () => void,\r\n  onSortByLastTwoWeeks?: () => void\r\n}) {\r\n  const showSubheader = typeof props.onSearch !== \"undefined\"\r\n    && typeof props.onSortByTotal !== \"undefined\"\r\n    && typeof props.onSortByLastTwoWeeks !== \"undefined\";\r\n\r\n  const handleSearchInput = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (typeof props.onSearch !== \"undefined\") {\r\n      props.onSearch(event.target.value);\r\n    }\r\n  }\r\n\r\n  const subheader = (\r\n    <div className=\"sub-header\">\r\n      <input type=\"text\"\r\n        placeholder=\"Search Game\"\r\n        onChange={handleSearchInput}\r\n        title=\"Search for a game in your games\"\r\n      />\r\n      <span title=\"Sorts your games according to your total playtime or playtime in the last two weeks\">\r\n        Sort&nbsp;by:\r\n      </span>\r\n      <Button onClick={props.onSortByLastTwoWeeks} title=\"Sorts your games according to your playtime in the last two weeks\">\r\n        Last&nbsp;2&nbsp;Weeks\r\n      </Button>\r\n      <Button onClick={props.onSortByTotal} title=\"Sorts your games according to your total playtime\">\r\n        Total\r\n      </Button>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <div className={`user-header ${showSubheader ? \"has-subheader\" : \"\"} ${props.className ?? \"\"}`}>\r\n        <a href={props.user.profileurl} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Steam profile\">\r\n          <img\r\n            src={props.user.avatarmedium}\r\n            width=\"45\"\r\n            height=\"45\"\r\n            alt=\"avatar\"\r\n          />\r\n        </a>\r\n        <div className=\"user-details\">\r\n          <h2>{props.title}</h2>\r\n          {props.user.preferences ? <div>{props.user.preferences.length}&nbsp;Games</div> : \"\"}\r\n        </div>\r\n      </div>\r\n      {showSubheader ? subheader : <></>}\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\"\nimport \"../styles/headers.css\"\n\nexport default function GroupHeader(props: {\n  title: string,\n  gamesCount: number,\n  commonGames: boolean,\n  className?: string\n}) {\n  return (\n    <div className={`group-header ${props.className ?? \"\"}`}>\n      <div className=\"group-details\">\n        <h2>{props.title}</h2>\n        <div>{props.gamesCount}&nbsp;{props.commonGames ? \"Common Games\" : \"Games\"}</div>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport packageJSON from \"../../package.json\"\nimport Button from \"./Button\";\n\nimport \"../styles/friend.css\"\n\nexport default function Friend(props: {\n  friend: Friend,\n  sessionId: string\n}) {\n  const friend = props.friend;\n  const personaname = (friend.personaname ?? friend.realname) ?? \"\";\n  const invite = `${window.location.origin}${packageJSON.subUrl}/join?sessionId=${encodeURIComponent(props.sessionId)}&steamId=${props.friend.steamId}`;\n  const copyInvite = () => {\n    navigator.clipboard.writeText(invite);\n  }\n  const openSteamChat = () => {\n    window.open(`steam://friends/message/${friend.steamId}`)\n  }\n\n  return (\n    <div className=\"friend\">\n      <div className=\"friend-info\">\n        <a href={friend.profileurl} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Steam profile\">\n          <img\n            src={friend.avatarmedium}\n            width=\"45\"\n            height=\"45\"\n            alt=\"avatar\"\n          />\n        </a>\n        <div className=\"friend-personal\">\n          <div>{friend.personaname ?? \"\"}</div>\n          <div>{friend.realname ? <span>(<em>{friend.realname}</em>)</span> : \"\"}</div>\n        </div>\n      </div>\n      <div className=\"buttons\">\n        <Button\n          onClick={openSteamChat}\n          title={`Opens the steam chat with ${personaname}, if steam is installed.`}\n        >\n          Steam&nbsp;Chat\n        </Button>\n        <Button\n          onClick={copyInvite}\n          title={`Copies a personalized invite for ${personaname}. This allows ${personaname} to join without entering a steamId`}\n        >\n          Copy&nbsp;Invite\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React, { RefObject, useEffect, useState } from \"react\"\r\nimport { Socket } from \"socket.io-client\";\r\nimport Friend from \"./Friend\";\r\nimport Loading from \"./Loading\";\r\nimport { compareTwoStrings } from \"string-similarity\";\r\nimport \"../styles/friendslist.css\"\r\nimport Button from \"./Button\";\r\n\r\nexport default function FriendsList(props: {\r\n  socket: Socket,\r\n  sessionId: string,\r\n  closeFriendsList: () => void;\r\n}) {\r\n  const [friends, setFriends] = useState<Friend[]>([]);\r\n  const [filter, setFilter] = useState<string>(\"\");\r\n  const [list, setList] = useState<JSX.Element[]>([]);\r\n  const listRef: RefObject<HTMLDivElement> = React.createRef();\r\n\r\n  useEffect(() => {\r\n    // set listener and request data\r\n    props.socket.on(\"friendsList\", (msg: any) => {\r\n      console.log(\"friendsList\", msg);\r\n      setFriends(msg as Friend[]);\r\n    });\r\n    props.socket.emit(\"getFriendsList\");\r\n\r\n    return () => {\r\n      props.socket.removeAllListeners(\"friendslist\");\r\n    }\r\n  }, [props.socket])\r\n\r\n  // Updates Friendslist when friends are loaded or the search is used\r\n  useEffect(() => {\r\n    const addSimilarity = (friend: Friend): Friend => {\r\n      let similarity = compareTwoStrings(friend.personaname, filter);\r\n      if (friend.realname) {\r\n        similarity += compareTwoStrings(friend.realname, filter);\r\n        similarity /= 2;\r\n      }\r\n      return { ...friend, filterSimilarity: similarity };\r\n    }\r\n\r\n    const sortBySimilarity = (a: Friend, b: Friend) => {\r\n      if (a.filterSimilarity === undefined || b.filterSimilarity === undefined) {\r\n        console.warn(\"filterSimilarity is not defined\");\r\n        return 0;\r\n      }\r\n      return b.filterSimilarity - a.filterSimilarity;\r\n    }\r\n\r\n    const mapToJSXElement = (friend: Friend) => (\r\n      <Friend friend={friend} key={friend.steamId} sessionId={props.sessionId} />\r\n    );\r\n\r\n    if (filter.length < 2) {\r\n      setList(friends.map(mapToJSXElement));\r\n    } else {\r\n      // Apply filter\r\n      setList(friends.map(addSimilarity).sort(sortBySimilarity).map(mapToJSXElement));\r\n    }\r\n  }, [filter, friends, props.sessionId])\r\n\r\n  const handleFilterChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    console.log(event.target.value);\r\n    setFilter(event.target.value);\r\n    if (listRef.current) listRef.current.scrollTo({ top: 0, behavior: 'smooth' });\r\n  }\r\n\r\n  return (\r\n    <div className=\"friendslist\">\r\n      <div className=\"blur-bg\" onClick={props.closeFriendsList}></div>\r\n      <div className=\"friends\">\r\n        <div className=\"friendslist-header\">\r\n          <input className=\"friend-search\" type=\"text\" onChange={handleFilterChange} placeholder=\"Search Friends\" />\r\n          <Button onClick={props.closeFriendsList} danger>&nbsp;Close&nbsp;Friends&nbsp;</Button>\r\n        </div>\r\n        <div className=\"list\" ref={listRef}>\r\n          {friends.length === 0 ? <Loading center /> : list}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\nimport \"../styles/switch.css\"\n\nexport default function Switch(props: {\n  onChange: (onlyCommonGames: boolean) => void,\n  checked?: boolean,\n  className?: string\n}) {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    props.onChange(event.target.checked);\n  }\n\n  const content = (\n    <div className=\"switch\">\n      <input type=\"checkbox\" onChange={handleChange} checked={props.checked} />\n      <span className=\"slider\"></span>\n    </div>\n  )\n\n  if (props.className) {\n    return <div className={props.className}>{content}</div>;\n  }\n  return content;\n}\n","import React from \"react\"\nimport Switch from \"./Switch\"\nimport \"../styles/settings.css\"\n\nexport default function Settings(props: {\n  settings: Settings,\n  setSettings: (settings: Settings) => void\n}) {\n  const setOnlyCommonGames = (onlyCommonGames: boolean) => {\n    const settings = { ...props.settings };\n    settings.onlyCommonGames = onlyCommonGames;\n    props.setSettings(settings);\n  }\n\n  return (\n    <div className=\"settings\">\n      <label>Only&nbsp;Common&nbsp;Games\n        <Switch className=\"padding-switch\" onChange={setOnlyCommonGames} checked={props.settings.onlyCommonGames} />\n      </label>\n    </div>\n  )\n}\n","import { useEffect, useState } from \"react\";\r\nimport { DropResult } from \"react-beautiful-dnd\";\r\nimport { io, Socket } from \"socket.io-client\";\r\nimport { useHistory } from \"react-router\";\r\nimport Collapsible from \"./Collapsible\";\r\nimport GamesList from \"./GamesList\";\r\nimport Invite from \"./Invite\";\r\nimport Loading from \"./Loading\";\r\nimport UserHeader from \"./UserHeader\";\r\nimport GroupHeader from \"./GroupHeader\";\r\nimport FriendsList from \"./FriendsList\";\r\nimport Settings from \"./Settings\";\r\n\r\nfunction initiateSocket(steamId: string, sessionId?: string) {\r\n  let query;\r\n  if (sessionId) {\r\n    query = { steamId: steamId, sessionId: sessionId };\r\n  } else {\r\n    query = { steamId: steamId };\r\n  }\r\n  const url = process.env.NODE_ENV === \"production\" ? \"https://common-steam-games.herokuapp.com/\" : \"http://localhost:3030\";\r\n  return io(url, {\r\n    query: query,\r\n    reconnectionAttempts: 4\r\n  });\r\n}\r\n\r\nfunction Matching(props: {\r\n  steamId: string,\r\n  sessionId?: string,\r\n  addError: (error: ErrorType) => void\r\n}) {\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [self, setSelf] = useState<User>({ steamId: props.steamId });\r\n  const [matchedGames, setMatchedGames] = useState<MatchedGame[]>([]);\r\n  const [sessionId, setSessionId] = useState<string>(\"\");\r\n  const [preferencesChanged, setPreferencesChanged] = useState(false);\r\n  const [socket, setSocket] = useState<Socket | undefined>(undefined);\r\n  const [showFriendslist, setShowFriendslist] = useState<boolean>(false);\r\n  const [settings, setSettings] = useState<Settings>({ onlyCommonGames: true });\r\n  const [commonAppIds, setCommonAppIds] = useState<number[]>([]);\r\n  const [gameSearch, setGameSearch] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  /** updates settings (state) and sends updateSettings event to backend */\r\n  const updateSettings = (settings: Settings) => {\r\n    if (socket) {\r\n      console.log(\"Sending settings\");\r\n      socket.emit(\"updateSettings\", settings);\r\n    }\r\n    setSettings(settings);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setCommonAppIds(getCommonAppIds(users.concat(self)));\r\n  }, [users, self])\r\n\r\n  useEffect(() => {\r\n    const handleSession = (msg: any) => {\r\n      console.log(\"Received session:\", msg);\r\n      if (!msg) return;\r\n      if (users.length > 0) {\r\n        console.warn(\"Received session but already is part of a session\");\r\n        return;\r\n      }\r\n\r\n      const session = msg as Session;\r\n      const ownSteamId = session.you ?? self.steamId;\r\n      const newUsers = session.users.filter(user => user.steamId !== ownSteamId);\r\n      const newSelf = session.users.find(user => user.steamId === ownSteamId);\r\n      if (!newSelf) {\r\n        props.addError({ status: 400, msg: \"Failed to connect to session. Did not find self.\" });\r\n        if (socket) socket.disconnect();\r\n        history.replace(\"/create\");\r\n        return;\r\n      }\r\n\r\n      setSessionId(session.sessionId);\r\n      setSelf(newSelf);\r\n      setUsers(newUsers);\r\n      if (session.settings) {\r\n        setSettings(session.settings);\r\n      }\r\n    }\r\n\r\n    const handleUserJoined = (msg: any) => {\r\n      console.log(\"Received handleUserJoined:\", msg, \"users:\", users);\r\n      const newUsers = [...users];\r\n      newUsers.push(msg as User);\r\n      setUsers(newUsers);\r\n    }\r\n\r\n    const handleUserDisconnect = (msg: any) => {\r\n      console.log(\"Received handleUserDisconnect:\", msg, \"users:\", users);\r\n      const newUsers = users.filter(user => user.steamId !== msg as string);\r\n      setUsers(newUsers);\r\n    }\r\n\r\n    const handleUpdateSettings = (msg: any) => {\r\n      console.log(\"Received settings:\", msg);\r\n      setSettings(msg as Settings);\r\n    }\r\n\r\n    const handleUpdatePreferences = (msg: any) => {\r\n      console.log(\"Received updatePreferences:\", msg);\r\n      const data = msg as PreferencesUpdate;\r\n      // TODO check data\r\n\r\n      const newUsers = [...users];\r\n      const changedUserIndex = newUsers.findIndex(user => user.steamId === data.steamId);\r\n      if (changedUserIndex !== -1) {\r\n        console.log(`Updating preferences for ${newUsers[changedUserIndex].personaname} (${data.steamId})`, changedUserIndex);\r\n        newUsers[changedUserIndex].preferences = data.preferences;\r\n        setUsers(newUsers);\r\n      } else {\r\n        console.log(`Tried to update preferences for ${data.steamId} but did not find user`);\r\n      }\r\n    }\r\n\r\n    const handleError = (error: any) => {\r\n      const err = error as ErrorType;\r\n      err.timeout = 15000;\r\n      props.addError(err);\r\n      if (err.status === 550) {\r\n        setShowFriendslist(false);\r\n        return;\r\n      }\r\n      if (socket) socket.disconnect();\r\n      history.replace(\"/create\");\r\n    }\r\n\r\n    if (socket) {\r\n      socket.removeAllListeners(\"error\");\r\n      socket.removeAllListeners(\"session\");\r\n      socket.removeAllListeners(\"userJoined\");\r\n      socket.removeAllListeners(\"userDisconnect\");\r\n      socket.removeAllListeners(\"updateSettings\");\r\n      socket.removeAllListeners(\"updatePreferences\");\r\n\r\n      socket.on(\"error\", handleError);\r\n      socket.on(\"session\", handleSession);\r\n      socket.on(\"userJoined\", handleUserJoined);\r\n      socket.on(\"userDisconnect\", handleUserDisconnect);\r\n      socket.on(\"updateSettings\", handleUpdateSettings);\r\n      socket.on(\"updatePreferences\", handleUpdatePreferences);\r\n    }\r\n  }, [self.steamId, users, socket, props, history]);\r\n\r\n  useEffect(() => {\r\n    const socket = initiateSocket(props.steamId, props.sessionId);\r\n    setSocket(socket);\r\n\r\n    socket.io.on(\"reconnect_failed\", () => {\r\n      console.log(\"Failed to reconnect\");\r\n      props.addError({ status: 500, msg: \"Lost connection to server\", timeout: 15000 });\r\n      history.push(\"/create\");\r\n    });\r\n    socket.io.on(\"reconnect_attempt\", (attempt) => {\r\n      const msg = `Lost connection to server, attempting to reconnect. Attempt (${attempt}/${socket.io.reconnectionAttempts()})`\r\n      console.log(msg);\r\n      props.addError({ status: 500, msg: msg, timeout: 6000 });\r\n    });\r\n\r\n    return () => {\r\n      console.log(\"#### disconnecting ###\");\r\n      if (socket) socket.disconnect();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.sessionId, props.steamId]);\r\n\r\n  // Update group preferences\r\n  useEffect(() => {\r\n    console.log(\"calculatePreferences\");\r\n    const appIds = settings.onlyCommonGames ? commonAppIds : [];\r\n    setMatchedGames(calculatePreferences(users.concat(self), appIds));\r\n  }, [users, self, settings.onlyCommonGames, commonAppIds]);\r\n\r\n  // Send preferences to backend when changed\r\n  useEffect(() => {\r\n    if (!preferencesChanged || !self.preferences) return;\r\n    if (!socket) {\r\n      console.error(\"Socket is not defined\");\r\n      return;\r\n    }\r\n    console.log(\"Sending preferences\");\r\n    socket.emit(\"updatePreferences\", self.preferences);\r\n    setPreferencesChanged(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [self.preferences, preferencesChanged])\r\n\r\n  const onDragEnd = (result: DropResult): void => {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n    const newSelf: User = { ...self } as User;\r\n    newSelf.preferences = reorder(\r\n      (self as User).preferences ?? [],\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n    if (gameSearch.length > 0) {\r\n      // Reset game search to avoid unwanted scrolling after changing preferences.\r\n      // Does not update value in UserHeader so the user can build upon the old search query.\r\n      setGameSearch(\"\");\r\n    }\r\n    setSelf(newSelf);\r\n    setPreferencesChanged(true);\r\n  }\r\n\r\n  const sortPreferences = (sortBy: \"total\" | \"recent\") => {\r\n    // select the correct sort function dependant on the sortBy argument\r\n    let sortFunc: (a: Game, b: Game) => number;\r\n    if (sortBy === \"total\") {\r\n      sortFunc = (a: Game, b: Game) => b.playtime_forever - a.playtime_forever\r\n    } else {\r\n      sortFunc = (a: Game, b: Game) => {\r\n        const aPlaytime = a.playtime_2weeks ?? 0;\r\n        const bPlaytime = b.playtime_2weeks ?? 0;\r\n        if (aPlaytime === bPlaytime) {\r\n          // Fallback if playtime in the last two weeks is equal\r\n          return b.playtime_forever - a.playtime_forever;\r\n        }\r\n        return bPlaytime - aPlaytime;\r\n      }\r\n    }\r\n    // Sort preferences using sortFunc\r\n    const newSelf: User = { ...self };\r\n    if (newSelf.preferences) {\r\n      newSelf.preferences = newSelf.preferences.sort(sortFunc);\r\n      setSelf(newSelf);\r\n      setPreferencesChanged(true);\r\n    }\r\n  }\r\n\r\n  // loading \r\n  if (!self.preferences) {\r\n    return <Loading className=\"v-centered\" center />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {showFriendslist && socket ? <FriendsList socket={socket} sessionId={sessionId} closeFriendsList={() => setShowFriendslist(false)} /> : \"\"}\r\n      <header className=\"app-header\">\r\n        <h1 className=\"title\">Common Steam Games</h1>\r\n        <Settings settings={settings} setSettings={updateSettings} />\r\n      </header>\r\n      <div className=\"container\">\r\n        <GamesList\r\n          games={self.preferences ?? []}\r\n          onlyCommonGames={settings.onlyCommonGames}\r\n          commonAppIds={commonAppIds}\r\n          onDragEnd={onDragEnd}\r\n          droppableId={`${self.personaname}'s Preferences`}\r\n          gameSearch={gameSearch}\r\n          header={\r\n            <UserHeader\r\n              title=\"Your Preferences\"\r\n              user={self}\r\n              onSearch={setGameSearch}\r\n              onSortByTotal={() => sortPreferences(\"total\")}\r\n              onSortByLastTwoWeeks={() => sortPreferences(\"recent\")}\r\n            />\r\n          }\r\n          className=\"col\"\r\n        />\r\n        <GamesList\r\n          games={matchedGames}\r\n          onlyCommonGames={settings.onlyCommonGames}\r\n          commonAppIds={commonAppIds}\r\n          header={<GroupHeader title=\"Group Preferences\" gamesCount={matchedGames.length} commonGames={settings.onlyCommonGames} />}\r\n          className=\"col\"\r\n        />\r\n        <div className=\"col mb-0\">\r\n          <Invite sessionId={sessionId} className=\"no-br-bottom\" openFriendsList={() => setShowFriendslist(true)} />\r\n          {users.map((user, index) =>\r\n            <Collapsible\r\n              header={<UserHeader title={`${user.personaname}'s preferences`} user={user} className=\"no-br no-bg\" />}\r\n              key={`${index}-${user.steamId}`}\r\n              title={`Show ${user.personaname ?? user.realname}'s' preferences`}\r\n            >\r\n              <GamesList\r\n                games={user.preferences ?? []}\r\n                onlyCommonGames={settings.onlyCommonGames}\r\n                commonAppIds={commonAppIds}\r\n                key={index}\r\n                className=\"no-br-top\"\r\n              />\r\n            </Collapsible>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction calculatePreferences(users: User[], commonAppIds: number[]): MatchedGame[] {\r\n  const matchedGames: Map<number, MatchedGame> = new Map();\r\n  const maxGames = commonAppIds.length > 0 ? commonAppIds.length : (\r\n    Math.max(...users.map(user => user.preferences ? user.preferences.length : 0)));\r\n\r\n  users.forEach(user => {\r\n    if (user.preferences) {\r\n      const preferences = commonAppIds.length > 0 ? (\r\n        user.preferences.filter(pref => commonAppIds.includes(pref.appid))\r\n      ) : user.preferences;\r\n\r\n      preferences.forEach((game, index) => {\r\n        const weight = getWeight(index, maxGames - 1);\r\n        let matchedGame: MatchedGame;\r\n        // Check if the game already exists. Otherwise add it to matchedGames.\r\n        if (matchedGames.has(game.appid)) {\r\n          matchedGame = matchedGames.get(game.appid)!;\r\n          matchedGame.weight += weight;\r\n          matchedGame.playtime_forever += game.playtime_forever / users.length;\r\n        } else {\r\n          matchedGame = {\r\n            appid: game.appid,\r\n            name: game.name,\r\n            img_icon_url: game.img_icon_url,\r\n            img_logo_url: game.img_logo_url,\r\n            has_community_visible_stats: game.has_community_visible_stats ?? undefined,\r\n            playtime_2weeks: game.playtime_2weeks ? (game.playtime_2weeks / users.length) : undefined,\r\n            playtime_forever: game.playtime_forever / users.length,\r\n            weight: weight\r\n          };\r\n        }\r\n        matchedGames.set(game.appid, matchedGame);\r\n      });\r\n    }\r\n  });\r\n  const result = Array.from(matchedGames.values());\r\n  result.sort((a, b) => {\r\n    return b.weight - a.weight;\r\n  });\r\n\r\n  return result\r\n}\r\n\r\nfunction getWeight(index: number, maxGames: number): number {\r\n  const weight = (maxGames - index) / maxGames;\r\n  return (!isNaN(weight) && weight >= 0) ? weight * weight : 0;\r\n}\r\n\r\nconst reorder = (games: Game[], startIndex: number, endIndex: number) => {\r\n  const result = Array.from(games);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n  return result;\r\n};\r\n\r\n/** Gets a list with appids for games owned by all users (incl. self) */\r\nconst getCommonAppIds = (users: User[]) => {\r\n  const appOwners: { appid: number, owners: number }[] = [];\r\n  let maxOwners = users.length;\r\n  for (const user of users) {\r\n    if (!user.preferences) {\r\n      maxOwners--;\r\n      continue;\r\n    }\r\n    for (const game of user.preferences) {\r\n      const index = appOwners.findIndex(elem => elem.appid === game.appid);\r\n      if (index >= 0) {\r\n        appOwners[index].owners++;\r\n      } else {\r\n        appOwners.push({ appid: game.appid, owners: 1 });\r\n      }\r\n    }\r\n  }\r\n  const ids = appOwners.filter(elem => elem.owners >= maxOwners).map(elem => elem.appid);\r\n  return ids;\r\n}\r\n\r\nexport default Matching;\r\n","import React, { useEffect } from 'react'\nimport \"../styles/error.css\"\n\nexport default function Error(props: {\n  error: ErrorType\n  removeError: () => void\n}) {\n  useEffect(() => {\n    const timeout = props.error.timeout;\n    let timer: NodeJS.Timeout | undefined;\n    if (timeout) {\n      timer = setTimeout(() => {\n        props.removeError();\n      }, timeout);\n    }\n    return () => {\n      if (timer) clearTimeout(timer);\n    };\n  }, [props]);\n\n  return (\n    <div className=\"error-popup\">\n      {props.error.msg}\n      <div className=\"error-close\" onClick={props.removeError}></div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Error from \"./Error\"\nimport \"../styles/error.css\"\n\nexport default function ErrorList(props: {\n  errors: ErrorType[],\n  setErrors: (err: ErrorType[]) => void\n}) {\n  const getRemoveErrorFnc = (error: ErrorType) => {\n    return () => props.setErrors(props.errors.filter(err => err !== error));\n  }\n\n  return (\n    <div className=\"error-popup-list\">\n      <div>\n        {props.errors.map((error, index) => <Error removeError={getRemoveErrorFnc(error)} error={error} key={index} />)}\n      </div>\n    </div>\n  )\n}\n","import { useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport CreateSession from \"./components/CreateSession\";\r\nimport Footer from \"./components/Footer\";\r\nimport JoinSession from \"./components/JoinSession\";\r\nimport UnknownPage from \"./components/UnknownPage\";\r\nimport Matching from \"./components/Matching\";\r\nimport ErrorList from \"./components/ErrorList\"\r\nimport packageJSON from \"../package.json\"\r\nimport \"./styles/app.css\";\r\n\r\nexport default function App(this: any) {\r\n  const [steamId, setSteamId] = useState<string | undefined>(getSteamId());\r\n  const [joinSessionId, setJoinSessionId] = useState<string | undefined>(getSessionId());\r\n  const [errors, setErrors] = useState<ErrorType[]>([]);\r\n\r\n  const addError = (error: ErrorType) => {\r\n    setErrors(errors.concat(error));\r\n  }\r\n\r\n  const createNewSession = (steamId: string) => {\r\n    sessionStorage.setItem(\"steamId\", steamId);\r\n    sessionStorage.removeItem(\"sessionId\");\r\n\r\n    setSteamId(steamId);\r\n    setJoinSessionId(undefined);\r\n  }\r\n\r\n  const joinSession = (steamId: string, sessionId: string) => {\r\n    sessionStorage.setItem(\"steamId\", steamId);\r\n    sessionStorage.setItem(\"sessionId\", sessionId);\r\n\r\n    setSteamId(steamId);\r\n    setJoinSessionId(sessionId);\r\n  }\r\n\r\n  const switchToJoinPage = joinSessionId && window.location.pathname !== `${packageJSON.subUrl}/join`;\r\n  const matching = steamId ? <Matching steamId={steamId} sessionId={joinSessionId} addError={addError} /> : <Redirect to=\"/\" />\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <ErrorList errors={errors} setErrors={setErrors} />\r\n      <Router basename={packageJSON.subUrl}>\r\n        <Switch>\r\n          <Route path=\"/matching\" exact>\r\n            {matching}\r\n          </Route>\r\n          <Route path=\"/join\" exact>\r\n            {canAutoJoin() ? <Redirect to=\"/matching\" push /> :\r\n              <JoinSession onSubmit={joinSession} sessionId={joinSessionId} steamId={steamId} />}\r\n          </Route>\r\n          <Route path=\"/create\" exact>\r\n            {switchToJoinPage ? <Redirect to=\"/join\" /> : <CreateSession onSubmit={createNewSession} steamId={steamId} />}\r\n          </Route>\r\n          <Route path=\"/\" exact>\r\n            <Redirect to=\"/create\" />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <UnknownPage />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n      <Footer />\r\n      <div className=\"background\" />\r\n    </div>\r\n  )\r\n}\r\n\r\n/**\r\n * Checks if a session id was passed in the url or is cached in the sessionStorage\r\n * @returns sessionId (string) or undefined\r\n */\r\nfunction getSessionId(): string | undefined {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const encodedSessionId = urlParams.get(\"sessionId\");\r\n  if (encodedSessionId) {\r\n    const sessionId = decodeURIComponent(encodedSessionId)\r\n    sessionStorage.setItem(\"sessionId\", sessionId);\r\n    return sessionId;\r\n  }\r\n  const cachedSessionId = sessionStorage.getItem(\"sessionId\");\r\n  if (cachedSessionId) {\r\n    return cachedSessionId;\r\n  }\r\n  return undefined;\r\n}\r\n\r\n/**\r\n * Checks if a steam id was passed in the url or is cached in the sessionStorage\r\n * @returns steamId (string) or undefined\r\n */\r\nfunction getSteamId(): string | undefined {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const encodedSteamId = urlParams.get(\"steamId\");\r\n  if (encodedSteamId) {\r\n    const steamId = decodeURIComponent(encodedSteamId);\r\n    sessionStorage.setItem(\"steamId\", steamId);\r\n    return steamId;\r\n  }\r\n  const cachedSteamId = sessionStorage.getItem(\"steamId\");\r\n  if (cachedSteamId) {\r\n    return cachedSteamId;\r\n  }\r\n  return undefined;\r\n}\r\n\r\nconst canAutoJoin = () => {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  return urlParams.has(\"steamId\") && urlParams.has(\"sessionId\");\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}