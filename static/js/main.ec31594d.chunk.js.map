{"version":3,"sources":["components/CreateSession.tsx","components/Footer.tsx","security/mail.js","components/JoinSession.tsx","components/UnknownPage.tsx","components/Collapsible.tsx","components/Tooltip.tsx","components/Button.tsx","components/UserCard.tsx","components/Game.tsx","components/DraggableGame.tsx","components/GamesList.tsx","components/Invite.tsx","components/Loading.tsx","components/SearchBar.tsx","components/UserHeader.tsx","components/GroupHeader.tsx","components/Friend.tsx","components/FriendsList.tsx","components/Switch.tsx","components/Settings.tsx","components/Tabs.tsx","components/Container.tsx","components/Matching.tsx","components/Error.tsx","components/ErrorList.tsx","App.tsx","index.tsx"],"names":["CreateSession","props","useState","steamId","setSteamId","history","useHistory","handleSubmit","event","a","preventDefault","onSubmit","push","className","htmlFor","type","name","id","onChange","target","value","defaultValue","placeholder","required","to","Footer","href","rel","title","onClick","encrypted","decrypted","i","length","charCodeAt","String","fromCharCode","charAt","window","open","toMail","src","packageJSON","subUrl","alt","height","width","JoinSession","sessionId","setSessionId","UnknownPage","Collapsible","collapsed","setCollapsed","hideContent","setHideContent","undefined","lastTimeout","setLastTimeout","clearTimeout","timeout","setTimeout","header","children","Tooltip","show","setShow","onMouseEnter","onMouseLeave","position","tooltip","Button","danger","UserCard","user","profileurl","avatarmedium","personaname","realname","Game","playtimeText","icon","playtime","Math","round","game","playtime_forever","Number","EPSILON","playtime2weeks","playtime_2weeks","isMatchedGame","weightPercentage","weight","num","toFixed","parseFloat","convertWeightToPercentage","appid","hash","hasImage","img_icon_url","loading","getStorePage","style","textDecoration","isDnD","showOwners","Owners","owners","gameTitle","DnDHighlight","map","owner","index","avatar","DraggableGame","draggableId","provided","ref","innerRef","draggableProps","dragHandleProps","GamesList","dndListRef","createRef","onlyCommonGames","useEffect","gameSearch","current","pos","depth","scrollHeight","getDepthForGame","search","match","similarity","games","forEach","commonAppIds","includes","compareTwoStrings","toLowerCase","console","log","searchGamePosition","scrollTo","top","behavior","droppableId","onDragEnd","droppableProps","filter","InnerList","React","memo","highlightDnd","setHighlightDnd","timeoutStart","timeoutEnd","list","Invite","invite","location","origin","encodeURIComponent","readOnly","onFocus","select","navigator","clipboard","writeText","openFriendsList","Loading","centerInner","center","content","SearchBar","UserHeader","showSubheader","onSearch","onSortByTotal","onSortByLastTwoWeeks","subheader","query","preferences","GroupHeader","gamesCount","commonGames","Friend","friend","FriendsList","friends","setFriends","setFilter","setList","listRef","socket","on","msg","emit","removeAllListeners","mapToJSXElement","filterSimilarity","sort","b","warn","closeFriendsList","Switch","checked","Settings","settings","setSettings","Tabs","activeChild","setActiveChild","titles","Container","isDesktop","useMediaQuery","minTitles","reorder","startIndex","endIndex","result","Array","from","splice","removed","getCommonAppIds","users","appOwners","maxOwners","findIndex","elem","Matching","setUsers","self","setSelf","matchedGames","setMatchedGames","preferencesChanged","setPreferencesChanged","setSocket","showFriendslist","setShowFriendslist","setCommonAppIds","setGameSearch","showFullName","concat","error","err","addError","status","disconnect","replace","session","ownSteamId","you","newUsers","newSelf","find","sessionStorage","setItem","data","changedUserIndex","io","reconnectionAttempts","initiateSocket","attempt","appIds","Map","maxGames","max","pref","matchedGame","isNaN","getWeight","has","get","img_logo_url","has_community_visible_stats","set","values","calculatePreferences","sortPreferences","sortBy","sortFunc","aPlaytime","bPlaytime","destination","source","Error","timer","removeError","ErrorList","getRemoveErrorFnc","setErrors","errors","App","encodedSteamId","URLSearchParams","decodeURIComponent","cachedSteamId","getItem","getSteamId","encodedSessionId","cachedSessionId","getSessionId","joinSessionId","setJoinSessionId","matching","basename","path","exact","canAutoJoin","removeItem","urlParams","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec31594d.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom';\n\nexport default function CreateSession(props: {\n  steamId?: string,\n  onSubmit: (steamId: string) => void,\n}) {\n  const [steamId, setSteamId] = useState<string>(props.steamId ?? \"\");\n  const history = useHistory();\n\n  const handleSteamIdChange = (event: any) => {\n    setSteamId(event.target.value);\n  }\n\n  const handleSubmit = async (event: any) => {\n    event.preventDefault();\n    props.onSubmit(steamId);\n    history.push(\"/matching\");\n  }\n\n  return (\n    <div className=\"user-forms\">\n      <div className=\"create-session\">\n        <h2>Create a new Session</h2>\n        <form onSubmit={handleSubmit}>\n          <label htmlFor=\"createSessionSteamId\">Steam ID or Profile URL:</label>\n          <div className=\"steamId-input input-margin\">\n            <span className=\"profile-url\">https://steamcommunity.com/id/</span>\n            <input\n              type=\"text\"\n              name=\"steamId\"\n              id=\"createSessionSteamId\"\n              onChange={handleSteamIdChange}\n              className=\"d-table-cell\"\n              defaultValue={steamId}\n              placeholder=\"Steam ID or Profile URL\"\n              required\n            />\n          </div>\n          <input type=\"submit\" value=\"Create New Session\" className=\"btn\" />\n        </form>\n        <p className=\"t-center\">\n          Or <Link to=\"/join\">join a existing session</Link>\n        </p>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport packageJSON from \"../../package.json\"\nimport toMail from \"../security/mail\"\nimport \"../styles/footer.css\"\n\nexport default function Footer() {\n  return (\n    <div className=\"footer\">\n      <div className=\"f-left\">\n        This project is not affiliated with Valve or Steam\n      </div>\n      <div className=\"f-right\">\n        <a\n          className=\"impressum\"\n          href=\"https://aliebald.github.io/impressum/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          title=\"Impressum gemäß § 5 TMG\"\n        >\n          Impressum\n        </a>\n        <div title=\"Send me a mail\" onClick={() => toMail(\"𝕔𝕠𝕟𝕥𝕒𝕔𝕥.𝕝𝕚𝕖𝕓𝕒𝕝𝕕@𝕘𝕞𝕒𝕚𝕝.𝕔𝕠𝕞\")}>\n          <img src={`${packageJSON.subUrl}/email.svg`} alt=\"contact\" height=\"20px\" width=\"20px\" className=\"contact\" />\n        </div>\n        <a\n          href=\"https://github.com/aliebald/common-steam-games\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          title=\"GitHub Repository\"\n        >\n          <img src={`${packageJSON.subUrl}/github.svg`} alt=\"github\" height=\"18px\" width=\"18px\" className=\"github\" />\n        </a>\n      </div>\n    </div>\n  )\n}\n","/**\n * Takes an \"encrypted\" mail address, converts it to a real mail address\n * and opens the mailto link if possible\n * @param {string} encrypted - encrypted mail address written in\n *   lower-case mathematical double struck letters (𝕒-𝕫) and \"normal\"\n *   characters (all characters with character codes under 122)\n * @returns {void}\n * @author Leonard Goldstein\n * @see {@link https://github.com/goldst/goldst.github.io/blob/7d7e3c3c5eb9563fe83a47f62460e4536b9a3159/js/safety/safety.js}\n */\nexport default function toMail(encrypted) {\n  let decrypted = \"\";\n  for (let i = 0; i < encrypted.length; i++) {\n    if (encrypted.charCodeAt(i) > 122) {\n      decrypted += String.fromCharCode(\n        encrypted.charCodeAt(i + 1) - 56561\n      );\n\n      i++;\n    } else {\n      decrypted += encrypted.charAt(i);\n    }\n  }\n  window.open(\"mailto:\" + decrypted, \"_self\");\n};\n","import React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom';\n\nexport default function JoinSession(props: {\n  sessionId?: string,\n  steamId?: string,\n  onSubmit: (steamId: string, sessionId: string) => void,\n  id?: string\n}) {\n  const [steamId, setSteamId] = useState<string>(props.steamId ?? \"\");\n  const [sessionId, setSessionId] = useState<string>(props.sessionId ?? \"\");\n  const history = useHistory();\n  const handleSteamIdChange = (event: any) => {\n    setSteamId(event.target.value);\n  }\n\n  const handleSessionIdChange = (event: any) => {\n    setSessionId(event.target.value);\n  }\n\n  const handleSubmit = async (event: any) => {\n    event.preventDefault();\n    props.onSubmit(steamId, sessionId);\n    history.push(\"/matching\");\n  }\n\n  return (\n    <div className=\"user-forms\">\n      <div className=\"join-session\">\n        <h2>Join a Session</h2>\n        <form className=\"d-table\" onSubmit={handleSubmit}>\n          <div className=\"d-table-row\">\n            <label htmlFor=\"joinSessionSteamId\" className=\"d-table-cell\">Steam ID or Profile URL:</label>\n            <div className=\"steamId-input input-margin\">\n              <span className=\"profile-url\">https://steamcommunity.com/id/</span>\n              <input\n                type=\"text\"\n                name=\"steamId\"\n                id=\"joinSessionSteamId\"\n                onChange={handleSteamIdChange}\n                className=\"d-table-cell\"\n                defaultValue={steamId}\n                placeholder=\"Steam ID or Profile URL\"\n                required\n              />\n            </div>\n          </div>\n          <div className=\"d-table-row\">\n            <label htmlFor=\"sessionId\" className=\"d-table-cell\">Session ID:&nbsp;</label>\n            <input type=\"text\"\n              name=\"sessionId\"\n              id=\"sessionId\"\n              onChange={handleSessionIdChange}\n              className=\"d-table-cell input-margin\"\n              defaultValue={sessionId}\n              placeholder=\"Session ID\"\n              required\n            />\n          </div>\n          <div className=\"d-table-row\">\n            <div className=\"d-table-cell\"></div>\n            <div className=\"d-table-cell\">\n              <input type=\"submit\" value=\"Join Session\" className=\"btn\" />\n            </div>\n          </div>\n        </form>\n        <p className=\"t-center\">\n          Or <Link to=\"/\">create a new session</Link>\n        </p>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport \"../styles/unknownPage.css\"\n\n/**\n * Simple page for 404 errors\n */\nexport default function UnknownPage() {\n  return (\n    <div className=\"unknown-page\">\n      <p>The page you are looking for was not found.</p>\n      <p>You can <Link to=\"/create\">create a new session</Link> or <Link to=\"/join\">join an existing session</Link>.</p>\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\nimport \"./../styles/collapsible.css\"\n\nexport default function Collapsible(props: {\n  header?: string | JSX.Element,\n  title?: string,\n  children: JSX.Element\n}) {\n  const [collapsed, setCollapsed] = useState(true);\n  const [hideContent, setHideContent] = useState(true);\n  const [lastTimeout, setLastTimeout] = useState<NodeJS.Timeout | undefined>(undefined);\n\n  const toggle = () => {\n    // Abort last timeout to avoid setting hideContent true,\n    // if the content was collapsed and opened again immediately \n    if (lastTimeout) {\n      clearTimeout(lastTimeout);\n      setLastTimeout(undefined);\n    }\n\n    // Toggle collapsed state. Hide content after animation delay\n    if (collapsed) {\n      setHideContent(false);\n    } else {\n      const timeout = setTimeout(() => setHideContent(true), 500);\n      setLastTimeout(timeout);\n    }\n    setCollapsed(!collapsed);\n  }\n\n  return (\n    <>\n      <button type=\"button\"\n        className=\"collapsible\"\n        onClick={toggle}\n        title={props.title}\n      >\n        {props.header ?? \"Open\"}\n        <div className={collapsed ? \"arrow-down\" : \"arrow-up\"}>\n          <div className=\"arrow-l\"></div>\n          <div className=\"arrow-r\"></div>\n        </div>\n      </button>\n      <div className={`content ${collapsed ? \"content-collapsed\" : \"\"}`}>\n        {hideContent ? <></> : props.children}\n      </div>\n    </>\n  )\n}\n","import React, { useState } from \"react\"\nimport \"../styles/tooltip.css\"\n\nexport default function Tooltip(props: {\n  children: JSX.Element,\n  tooltip: JSX.Element,\n  position: \"bottom\" | \"right\" | \"left\" | \"bottom-left\"\n}) {\n  const [show, setShow] = useState(false);\n\n  if (!show) {\n    return (\n      <div onMouseEnter={() => setShow(true)} onMouseLeave={() => setShow(false)}>\n        {props.children}\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"tooltip-wrapper\" onMouseEnter={() => setShow(true)} onMouseLeave={() => setShow(false)}>\n      <div className={`tooltip-popup ${props.position}`}>\n        {props.tooltip}\n      </div>\n      {props.children}\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function Button(props: {\n  className?: string,\n  onClick?: React.MouseEventHandler<HTMLButtonElement>,\n  danger?: boolean,\n  title?: string,\n  children?: JSX.Element | string\n}) {\n  const danger = props.danger ? \" danger\" : \"\"\n  return (\n    <button\n      className={`btn${danger} ${props.className ?? \"\"}`}\n      onClick={props.onClick}\n      title={props.title}\n    >\n      {props.children ?? \"\"}\n    </button>\n  )\n}\n","import React from \"react\"\nimport Button from \"./Button\"\nimport \"../styles/userCard.css\"\n\nexport default function UserCard(props: {\n  user: User,\n  className?: string\n}) {\n  const openSteamChat = () => {\n    window.open(`steam://friends/message/${props.user.steamId}`);\n  }\n\n  return (\n    <div className={`user-card ${props.className ?? \"\"}`}>\n      <a href={props.user.profileurl} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Steam profile\">\n        <img src={props.user.avatarmedium} alt=\"avatar\" height=\"64px\" width=\"64px\" />\n      </a>\n      <div className=\"user-details\">\n        <h3>{props.user.personaname}</h3>\n        <span className=\"realname\">{props.user.realname}</span>\n        <br />\n      </div>\n      <Button onClick={openSteamChat}>\n        Chat\n      </Button>\n    </div>\n  )\n}\n","import React from 'react'\r\nimport Tooltip from './Tooltip'\r\nimport UserCard from './UserCard'\r\nimport '../styles/game.css'\r\n\r\n\r\nexport default function Game(props: {\r\n  game: Game | MatchedGame,\r\n  showOwners?: boolean,\r\n  isDnD?: boolean,\r\n  DnDHighlight?: boolean // Increases brightness of dnd icon for a few seconds after first render\r\n}) {\r\n  const playtime = Math.round(((props.game.playtime_forever / 60) + Number.EPSILON) * 100) / 100\r\n  const playtime2weeks = props.game.playtime_2weeks ? Math.round(((props.game.playtime_2weeks / 60) + Number.EPSILON) * 100) / 100 : 0\r\n  const isMatchedGame = \"weight\" in (props.game as MatchedGame)\r\n\r\n  let playtimeText: string;\r\n  let weightPercentage = \"\";\r\n  if (isMatchedGame) {\r\n    weightPercentage = convertWeightToPercentage((props.game as MatchedGame).weight);\r\n    playtimeText = `Average Playtime: ${playtime}h`;\r\n  } else {\r\n    playtimeText = playtime2weeks > 0 ? `Playtime: ${playtime}h / ${playtime2weeks}h` : `Playtime: ${playtime}h`\r\n  }\r\n\r\n  let icon: JSX.Element;\r\n  const hasImage = props.game.img_icon_url.length > 0\r\n  if (hasImage) {\r\n    icon = <img\r\n      src={getImage(props.game.appid, props.game.img_icon_url)}\r\n      width=\"32\"\r\n      height=\"32\"\r\n      alt=\"icon\"\r\n      loading=\"lazy\"\r\n    />\r\n  } else {\r\n    icon = <div className=\"no-icon\"><span>?</span></div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <a\r\n        className=\"img-link\"\r\n        href={getStorePage(props.game.appid)}\r\n        title={`${props.game.name} steam page`}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        style={hasImage ? {} : { textDecoration: \"none\" }}\r\n      >\r\n        {icon}\r\n      </a>\r\n      <div className={isMatchedGame || props.isDnD ? \"game-info no-br\" : \"game-info\"}>\r\n        <div className=\"title\">{props.game.name}</div>\r\n        <div className=\"playtime\">{playtimeText}</div>\r\n      </div>\r\n      {isMatchedGame ?\r\n        <div className=\"match-info\">\r\n          {props.showOwners ? <Owners owners={(props.game as MatchedGame).owners} gameTitle={props.game.name} /> : <></>}\r\n          <div className=\"weight\">Match:&nbsp;{weightPercentage}</div>\r\n        </div>\r\n        : <></>}\r\n      {props.isDnD ? <div className=\"dnd-icon\">\r\n        <img src=\"dnd_icon.svg\" alt=\"\" width=\"17\" height=\"32\" className={props.DnDHighlight ? \"highlight\" : \"\"} />\r\n      </div> : <></>}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Owners(props: { owners: User[], gameTitle: string }) {\r\n  return (\r\n    <>\r\n      {props.owners.map((owner, index) =>\r\n        <Tooltip position=\"bottom-left\" tooltip={<UserCard user={owner} />} key={index}>\r\n          <img\r\n            src={owner.avatar}\r\n            alt=\"\"\r\n            height=\"16px\"\r\n            width=\"16px\"\r\n            className=\"owner\"\r\n            loading=\"lazy\"\r\n          />\r\n        </Tooltip>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction getImage(appid: number | string, hash: number | string): string {\r\n  return `https://media.steampowered.com/steamcommunity/public/images/apps/${appid}/${hash}.jpg`;\r\n}\r\n\r\nfunction getStorePage(appid: number | string): string {\r\n  return `https://store.steampowered.com/app/${appid}`;\r\n}\r\n\r\nfunction convertWeightToPercentage(weight: number): string {\r\n  // Get weight as rounded percentage with 2 trailing decimals\r\n  const num = (Math.round(weight * 10000) / 100).toFixed(2);\r\n  // remove trailing zeros using parseFloat\r\n  return `${parseFloat(num)}%`;\r\n}\r\n","import React from 'react'\nimport { Draggable } from 'react-beautiful-dnd'\nimport Game from './Game'\n\n\nexport default function DraggableGame(props: {\n  game: Game,\n  index: number,\n  className?: string,\n  DnDHighlight?: boolean\n}) {\n  return (\n    <Draggable draggableId={`${props.game.appid}`} index={props.index}>\n      {provided => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          className={props.className}\n        >\n          <Game game={props.game} isDnD DnDHighlight={props.DnDHighlight} />\n        </div>\n      )}\n    </Draggable>\n\n  )\n}\n","import { DragDropContext, Droppable, DropResult, ResponderProvided } from \"react-beautiful-dnd\";\r\nimport React, { createRef, RefObject, useEffect, useState } from \"react\"\r\nimport { compareTwoStrings } from \"string-similarity\";\r\nimport DraggableGame from \"./DraggableGame\";\r\nimport Game from \"./Game\";\r\n\r\n\r\nexport default function GamesList(props: {\r\n  games: Game[] | MatchedGame[],\r\n  onlyCommonGames?: boolean,\r\n  commonAppIds: number[],\r\n  droppableId?: string, // If this is given, the output list will be a drag & drop list\r\n  onDragEnd?: (result: DropResult, provided: ResponderProvided) => void,\r\n  header?: JSX.Element,\r\n  gameSearch?: string,\r\n  className?: string\r\n}) {\r\n  const header = props.header ?? \"\";\r\n  const dndListRef: RefObject<HTMLDivElement> = createRef();\r\n  const onlyCommonGames = props.onlyCommonGames ?? false;\r\n\r\n  useEffect(() => {\r\n    /** Finds the index of the game in games with the highest similarity with a search query */\r\n    const searchGamePosition = (search: string): number => {\r\n      let match = {\r\n        similarity: 0,\r\n        index: 0,\r\n        name: \"\"\r\n      };\r\n      props.games.forEach((game, index) => {\r\n        if (!props.onlyCommonGames || props.commonAppIds.includes(game.appid)) {\r\n          const similarity = compareTwoStrings(game.name.toLowerCase(), search.toLowerCase());\r\n          if (similarity > match.similarity) {\r\n            match = {\r\n              similarity: similarity,\r\n              index: index,\r\n              name: game.name\r\n            }\r\n          }\r\n        }\r\n      });\r\n      console.log(`Best match for game search (\"${search}\"): ${match.name}. Similarity: ${match.similarity}`);\r\n      return match.index;\r\n    }\r\n\r\n    /** Finds the depth in px of the game with the given index. Used for scrollTo() */\r\n    const getDepthForGame = (index: number) => {\r\n      if (!dndListRef.current) {\r\n        return 0;\r\n      }\r\n      let depth = 0;\r\n      for (let i = 0; i < index; i++) {\r\n        depth += dndListRef.current.children[0].children[i].scrollHeight;\r\n      }\r\n      return depth;\r\n    }\r\n\r\n    if (props.gameSearch && props.gameSearch.length > 1 && dndListRef.current) {\r\n      const index = searchGamePosition(props.gameSearch);\r\n      const pos = getDepthForGame(index);\r\n      dndListRef.current.scrollTo({ top: pos, behavior: \"smooth\" });\r\n    }\r\n  }, [dndListRef, props.games, props.gameSearch, props.commonAppIds, props.onlyCommonGames])\r\n\r\n  // Return games as drag & drop list\r\n  if (props.droppableId && props.onDragEnd) {\r\n    return (\r\n      <div className={`games-list ${props.className ?? \"\"}`}>\r\n        <DragDropContext onDragEnd={props.onDragEnd}>\r\n          {header}\r\n          <div className=\"scroll-container\" ref={dndListRef}>\r\n            <Droppable droppableId={props.droppableId}>\r\n              {provided => (\r\n                <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                  <InnerList\r\n                    games={props.games}\r\n                    onlyCommonGames={onlyCommonGames}\r\n                    commonAppIds={props.commonAppIds}\r\n                  />\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n        </DragDropContext>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // Return games as static list if droppableId or onDragEnd is not defined in props\r\n  const games = onlyCommonGames ? props.games.filter(game => props.commonAppIds.includes(game.appid)) : props.games;\r\n  return (\r\n    <div className={`games-list ${props.className ?? \"\"}`}>\r\n      {header}\r\n      <div className=\"scroll-container\">\r\n        {games.map((game, index) => <Game game={game} key={index} showOwners={!onlyCommonGames} />)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// do not re-render if the games list reference has not changed\r\nconst InnerList = React.memo(function InnerList(props: { games: Game[], commonAppIds: number[], onlyCommonGames: boolean }) {\r\n  const [highlightDnd, setHighlightDnd] = useState(false);\r\n\r\n  // Increases brightness of dnd icon for a few seconds after first render\r\n  useEffect(() => {\r\n    const timeoutStart = setTimeout(() => {\r\n      setHighlightDnd(true);\r\n    }, 1000);\r\n\r\n    const timeoutEnd = setTimeout(() => {\r\n      setHighlightDnd(false);\r\n    }, 6000);\r\n\r\n    return () => {\r\n      clearTimeout(timeoutStart);\r\n      clearTimeout(timeoutEnd);\r\n    }\r\n  }, []);\r\n\r\n  const list = props.games.map((game: Game, index: number) => {\r\n    if (!props.onlyCommonGames || props.commonAppIds.includes(game.appid)) {\r\n      return <DraggableGame key={game.appid} game={game} index={index} DnDHighlight={highlightDnd} />\r\n    } else {\r\n      return <DraggableGame key={game.appid} game={game} index={index} className=\"d-none\" DnDHighlight={highlightDnd} />\r\n    }\r\n  })\r\n  return <>{list}</>\r\n});\r\n","import React from \"react\"\nimport packageJSON from \"../../package.json\"\nimport Button from \"./Button\";\nimport \"../styles/invite.css\"\n\nexport default function Invite(props: {\n  sessionId: string,\n  className?: string,\n  openFriendsList: () => void;\n}) {\n  const invite = `${window.location.origin}${packageJSON.subUrl}/join?sessionId=${encodeURIComponent(props.sessionId)}`;\n  const copyInvite = () => {\n    navigator.clipboard.writeText(invite);\n  }\n  const handleFocus = (event: any) => {\n    event.target.select()\n  }\n\n  return (\n    <div className={`invite-box ${props.className ?? \"\"}`}>\n      <label>Invite your friends</label>\n      <div className=\"invite-row\">\n        <input className=\"invite-input\"\n          type=\"text\"\n          value={invite}\n          readOnly\n          onFocus={handleFocus}\n          title=\"Invite link. Click 'Copy Invite' to copy this link\"\n        />\n        <Button onClick={copyInvite} title=\"Copy invite link\">\n          Copy&nbsp;Invite\n        </Button>\n        <Button\n          onClick={props.openFriendsList}\n          title={\"Open your friends list and create personalized invites. \"\n            + \"This allows your friends to directly join you without looking up their steamId.\"}\n        >\n          Open&nbsp;Friends&nbsp;List\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport \"../styles/loading.css\"\n\nexport default function Loading(props: {\n  className?: string,\n  center?: boolean\n}) {\n  // Loading animation from https://loading.io/css/\n  const centerInner = props.center ? \" v-centered\" : \"\"\n  const content = (\n    <div className={`lds-roller${centerInner} ${props.className ?? \"\"}`}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  )\n\n  if (props.center) {\n    return <div className=\"flex-center\">{content}</div>;\n  }\n\n  return content;\n}\n","import React from \"react\"\nimport \"./../styles/searchBar.css\"\n\nexport default function SearchBar(props: {\n  onChange: (str: string) => void,\n  className?: string,\n  title?: string,\n  placeholder?: string\n}) {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    props.onChange(event.target.value);\n  }\n\n  const handleSubmit = (event: any) => {\n    event.preventDefault();\n    props.onChange(event.target[0].value);\n  }\n\n  return (\n    <form className={`search-bar-form ${props.className ?? \"\"}`} onSubmit={handleSubmit}>\n      <input type=\"text\"\n        onChange={handleChange}\n        placeholder={props.placeholder}\n        title={props.title}\n      />\n      <button type=\"reset\">&times;</button>\n    </form>\n  )\n}\n","import React from \"react\"\r\nimport Button from \"./Button\"\r\nimport SearchBar from \"./SearchBar\";\r\nimport \"../styles/headers.css\"\r\n\r\nexport default function UserHeader(props: {\r\n  title: string,\r\n  user: User,\r\n  className?: string,\r\n  onSearch?: (filter: string) => void,\r\n  onSortByTotal?: () => void,\r\n  onSortByLastTwoWeeks?: () => void\r\n}) {\r\n  const showSubheader = typeof props.onSearch !== \"undefined\"\r\n    && typeof props.onSortByTotal !== \"undefined\"\r\n    && typeof props.onSortByLastTwoWeeks !== \"undefined\";\r\n\r\n  const handleSearchInput = (query: string) => {\r\n    if (typeof props.onSearch !== \"undefined\") {\r\n      props.onSearch(query);\r\n    }\r\n  }\r\n\r\n  const subheader = (\r\n    <div className=\"sub-header\">\r\n      <SearchBar\r\n        placeholder=\"Search Game\"\r\n        onChange={handleSearchInput}\r\n        title=\"Search for a game in your games\"\r\n      />\r\n      <span title=\"Sorts your games according to your total playtime or playtime in the last two weeks\">\r\n        Sort&nbsp;by:\r\n      </span>\r\n      <Button onClick={props.onSortByLastTwoWeeks} title=\"Sorts your games according to your playtime in the last two weeks\">\r\n        Last&nbsp;2&nbsp;Weeks\r\n      </Button>\r\n      <Button onClick={props.onSortByTotal} title=\"Sorts your games according to your total playtime\">\r\n        Total\r\n      </Button>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <div className={`user-header ${showSubheader ? \"has-subheader\" : \"\"} ${props.className ?? \"\"}`}>\r\n        <a href={props.user.profileurl} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Steam profile\">\r\n          <img\r\n            src={props.user.avatarmedium}\r\n            width=\"45\"\r\n            height=\"45\"\r\n            alt=\"avatar\"\r\n          />\r\n        </a>\r\n        <div className=\"user-details\">\r\n          <h2>{props.title}</h2>\r\n          {props.user.preferences ? <div>{props.user.preferences.length}&nbsp;Games</div> : \"\"}\r\n        </div>\r\n      </div>\r\n      {showSubheader ? subheader : <></>}\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\"\nimport \"../styles/headers.css\"\n\nexport default function GroupHeader(props: {\n  title: string,\n  gamesCount: number,\n  commonGames: boolean,\n  className?: string\n}) {\n  return (\n    <div className={`group-header ${props.className ?? \"\"}`}>\n      <div className=\"group-details\">\n        <h2>{props.title}</h2>\n        <div>{props.gamesCount}&nbsp;{props.commonGames ? \"Common Games\" : \"Games\"}</div>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport packageJSON from \"../../package.json\"\nimport Button from \"./Button\";\n\nimport \"../styles/friend.css\"\n\nexport default function Friend(props: {\n  friend: Friend,\n  sessionId: string\n}) {\n  const friend = props.friend;\n  const personaname = (friend.personaname ?? friend.realname) ?? \"\";\n  const invite = `${window.location.origin}${packageJSON.subUrl}/join?sessionId=${encodeURIComponent(props.sessionId)}&steamId=${props.friend.steamId}`;\n  const copyInvite = () => {\n    navigator.clipboard.writeText(invite);\n  }\n  const openSteamChat = () => {\n    window.open(`steam://friends/message/${friend.steamId}`)\n  }\n\n  return (\n    <div className=\"friend\">\n      <div className=\"friend-info\">\n        <a href={friend.profileurl} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Steam profile\">\n          <img\n            src={friend.avatarmedium}\n            width=\"45\"\n            height=\"45\"\n            alt=\"avatar\"\n          />\n        </a>\n        <div className=\"friend-personal\">\n          <div>{friend.personaname ?? \"\"}</div>\n          <div>{friend.realname ? <span>(<em>{friend.realname}</em>)</span> : \"\"}</div>\n        </div>\n      </div>\n      <div className=\"buttons\">\n        <Button\n          onClick={openSteamChat}\n          title={`Opens the steam chat with ${personaname}, if steam is installed.`}\n        >\n          Steam&nbsp;Chat\n        </Button>\n        <Button\n          onClick={copyInvite}\n          title={`Copies a personalized invite for ${personaname}. This allows ${personaname} to join without entering a steamId`}\n        >\n          Copy&nbsp;Invite\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React, { RefObject, useEffect, useState } from \"react\"\r\nimport { compareTwoStrings } from \"string-similarity\";\r\nimport { Socket } from \"socket.io-client\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport Loading from \"./Loading\";\r\nimport Friend from \"./Friend\";\r\nimport Button from \"./Button\";\r\nimport \"../styles/friendslist.css\"\r\n\r\nexport default function FriendsList(props: {\r\n  socket: Socket,\r\n  sessionId: string,\r\n  closeFriendsList: () => void;\r\n}) {\r\n  const [friends, setFriends] = useState<Friend[]>([]);\r\n  const [filter, setFilter] = useState<string>(\"\");\r\n  const [list, setList] = useState<JSX.Element[]>([]);\r\n  const listRef: RefObject<HTMLDivElement> = React.createRef();\r\n\r\n  useEffect(() => {\r\n    // set listener and request data\r\n    props.socket.on(\"friendsList\", (msg: any) => {\r\n      console.log(\"friendsList\", msg);\r\n      setFriends(msg as Friend[]);\r\n    });\r\n    props.socket.emit(\"getFriendsList\");\r\n\r\n    return () => {\r\n      props.socket.removeAllListeners(\"friendslist\");\r\n    }\r\n  }, [props.socket])\r\n\r\n  // Updates Friendslist when friends are loaded or the search is used\r\n  useEffect(() => {\r\n    const addSimilarity = (friend: Friend): Friend => {\r\n      let similarity = compareTwoStrings(friend.personaname, filter);\r\n      if (friend.realname) {\r\n        similarity += compareTwoStrings(friend.realname, filter);\r\n        similarity /= 2;\r\n      }\r\n      return { ...friend, filterSimilarity: similarity };\r\n    }\r\n\r\n    const sortBySimilarity = (a: Friend, b: Friend) => {\r\n      if (a.filterSimilarity === undefined || b.filterSimilarity === undefined) {\r\n        console.warn(\"filterSimilarity is not defined\");\r\n        return 0;\r\n      }\r\n      return b.filterSimilarity - a.filterSimilarity;\r\n    }\r\n\r\n    const mapToJSXElement = (friend: Friend) => (\r\n      <Friend friend={friend} key={friend.steamId} sessionId={props.sessionId} />\r\n    );\r\n\r\n    if (filter.length < 2) {\r\n      setList(friends.map(mapToJSXElement));\r\n    } else {\r\n      // Apply filter\r\n      setList(friends.map(addSimilarity).sort(sortBySimilarity).map(mapToJSXElement));\r\n    }\r\n  }, [filter, friends, props.sessionId])\r\n\r\n  const handleSearch = (query: string) => {\r\n    setFilter(query);\r\n    if (listRef.current) {\r\n      listRef.current.scrollTo({ top: 0, behavior: 'smooth' });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"friendslist\">\r\n      <div className=\"blur-bg\" onClick={props.closeFriendsList}></div>\r\n      <div className=\"friends\">\r\n        <div className=\"friendslist-header\">\r\n          <SearchBar className=\"friend-search\" onChange={handleSearch} placeholder=\"Search Friends\" />\r\n          <Button onClick={props.closeFriendsList} danger>&nbsp;Close&nbsp;Friends&nbsp;</Button>\r\n        </div>\r\n        <div className=\"list\" ref={listRef}>\r\n          {friends.length === 0 ? <Loading center /> : list}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\nimport \"../styles/switch.css\"\n\nexport default function Switch(props: {\n  onChange: (onlyCommonGames: boolean) => void,\n  checked?: boolean,\n  className?: string\n}) {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    props.onChange(event.target.checked);\n  }\n\n  const content = (\n    <div className=\"switch\">\n      <input type=\"checkbox\" onChange={handleChange} checked={props.checked} />\n      <span className=\"slider\"></span>\n    </div>\n  )\n\n  if (props.className) {\n    return <div className={props.className}>{content}</div>;\n  }\n  return content;\n}\n","import React from \"react\"\nimport Switch from \"./Switch\"\nimport \"../styles/settings.css\"\n\nexport default function Settings(props: {\n  settings: Settings,\n  setSettings: (settings: Settings) => void\n}) {\n  const setOnlyCommonGames = (onlyCommonGames: boolean) => {\n    const settings = { ...props.settings };\n    settings.onlyCommonGames = onlyCommonGames;\n    props.setSettings(settings);\n  }\n\n  return (\n    <div className=\"settings\">\n      <label>Only&nbsp;Common&nbsp;Games\n        <Switch className=\"padding-switch\" onChange={setOnlyCommonGames} checked={props.settings.onlyCommonGames} />\n      </label>\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\nimport Button from \"./Button\";\nimport \"./../styles/tabs.css\"\n\nexport default function Tabs(props: {\n  children: JSX.Element[],\n  titles: string[],\n  className?: string\n}) {\n  const [activeChild, setActiveChild] = useState(0);\n\n  return (\n    <div className={props.className}>\n      <ul className=\"tabs\">\n        {props.titles.map((title, index) => (\n          <li key={index}\n            className={`tabs-item ${activeChild === index ? \" active\" : \"\"}`}\n          >\n            <Button onClick={() => setActiveChild(index)}>\n              {title}\n            </Button>\n          </li>\n        ))}\n      </ul>\n      {props.children[activeChild]}\n    </div >\n  )\n}\n","import React from \"react\"\nimport { useMediaQuery } from \"react-responsive\"\nimport Tabs from \"./Tabs\";\nimport \"./../styles/container.css\"\n\nexport default function Container(props: {\n  children: JSX.Element[],\n  titles: string[],\n  minTitles: string[]\n}) {\n  const isDesktop = useMediaQuery({ query: '(min-width: 1100px)' });\n  const showMinTitles = useMediaQuery({ query: '(max-width: 450px)' });\n  const titles = showMinTitles ? props.minTitles : props.titles;\n\n  if (!isDesktop) {\n    return (\n      <Tabs titles={titles} className=\"container-tabs\">\n        {props.children}\n      </Tabs>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      {props.children}\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\r\nimport { DropResult } from \"react-beautiful-dnd\";\r\nimport { io, Socket } from \"socket.io-client\";\r\nimport { useHistory } from \"react-router\";\r\nimport Collapsible from \"./Collapsible\";\r\nimport GamesList from \"./GamesList\";\r\nimport Invite from \"./Invite\";\r\nimport Loading from \"./Loading\";\r\nimport UserHeader from \"./UserHeader\";\r\nimport GroupHeader from \"./GroupHeader\";\r\nimport FriendsList from \"./FriendsList\";\r\nimport Settings from \"./Settings\";\r\nimport Container from \"./Container\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nfunction initiateSocket(steamId: string, sessionId?: string) {\r\n  let query;\r\n  if (sessionId) {\r\n    query = { steamId: steamId, sessionId: sessionId };\r\n  } else {\r\n    query = { steamId: steamId };\r\n  }\r\n  const url = process.env.NODE_ENV === \"production\" ? \"https://common-steam-games.herokuapp.com/\" : \"http://localhost:3030\";\r\n  return io(url, {\r\n    query: query,\r\n    reconnectionAttempts: 4\r\n  });\r\n}\r\n\r\nfunction Matching(props: {\r\n  steamId: string,\r\n  sessionId?: string,\r\n  addError: (error: ErrorType) => void\r\n}) {\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [self, setSelf] = useState<User>({ steamId: props.steamId });\r\n  const [matchedGames, setMatchedGames] = useState<MatchedGame[]>([]);\r\n  const [sessionId, setSessionId] = useState<string>(\"\");\r\n  const [preferencesChanged, setPreferencesChanged] = useState(false);\r\n  const [socket, setSocket] = useState<Socket | undefined>(undefined);\r\n  const [showFriendslist, setShowFriendslist] = useState<boolean>(false);\r\n  const [settings, setSettings] = useState<Settings>({ onlyCommonGames: true });\r\n  const [commonAppIds, setCommonAppIds] = useState<number[]>([]);\r\n  const [gameSearch, setGameSearch] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n  const showFullName = useMediaQuery({ query: '(min-width: 530px)' });\r\n\r\n  /** updates settings (state) and sends updateSettings event to backend */\r\n  const updateSettings = (settings: Settings) => {\r\n    if (socket) {\r\n      console.log(\"Sending settings\");\r\n      socket.emit(\"updateSettings\", settings);\r\n    }\r\n    setSettings(settings);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setCommonAppIds(getCommonAppIds(users.concat(self)));\r\n  }, [users, self])\r\n\r\n  useEffect(() => {\r\n    const handleSession = (msg: any) => {\r\n      console.log(\"Received session:\", msg);\r\n      if (!msg) return;\r\n      if (users.length > 0) {\r\n        console.warn(\"Received session but already is part of a session\");\r\n        return;\r\n      }\r\n\r\n      const session = msg as Session;\r\n      const ownSteamId = session.you ?? self.steamId;\r\n      const newUsers = session.users.filter(user => user.steamId !== ownSteamId);\r\n      const newSelf = session.users.find(user => user.steamId === ownSteamId);\r\n      if (!newSelf) {\r\n        props.addError({ status: 400, msg: \"Failed to connect to session. Did not find self.\" });\r\n        if (socket) socket.disconnect();\r\n        history.replace(\"/create\");\r\n        return;\r\n      }\r\n\r\n      sessionStorage.setItem(\"sessionId\", session.sessionId);\r\n      setSessionId(session.sessionId);\r\n      setSelf(newSelf);\r\n      setUsers(newUsers);\r\n      if (session.settings) {\r\n        setSettings(session.settings);\r\n      }\r\n    }\r\n\r\n    const handleUserJoined = (msg: any) => {\r\n      console.log(\"Received handleUserJoined:\", msg, \"users:\", users);\r\n      const newUsers = [...users];\r\n      newUsers.push(msg as User);\r\n      setUsers(newUsers);\r\n    }\r\n\r\n    const handleUserDisconnect = (msg: any) => {\r\n      console.log(\"Received handleUserDisconnect:\", msg, \"users:\", users);\r\n      const newUsers = users.filter(user => user.steamId !== msg as string);\r\n      setUsers(newUsers);\r\n    }\r\n\r\n    const handleUpdateSettings = (msg: any) => {\r\n      console.log(\"Received settings:\", msg);\r\n      setSettings(msg as Settings);\r\n    }\r\n\r\n    const handleUpdatePreferences = (msg: any) => {\r\n      console.log(\"Received updatePreferences:\", msg);\r\n      const data = msg as PreferencesUpdate;\r\n      // TODO check data\r\n\r\n      const newUsers = [...users];\r\n      const changedUserIndex = newUsers.findIndex(user => user.steamId === data.steamId);\r\n      if (changedUserIndex !== -1) {\r\n        console.log(`Updating preferences for ${newUsers[changedUserIndex].personaname} (${data.steamId})`, changedUserIndex);\r\n        newUsers[changedUserIndex].preferences = data.preferences;\r\n        setUsers(newUsers);\r\n      } else {\r\n        console.log(`Tried to update preferences for ${data.steamId} but did not find user`);\r\n      }\r\n    }\r\n\r\n    const handleError = (error: any) => {\r\n      const err = error as ErrorType;\r\n      err.timeout = 15000;\r\n      props.addError(err);\r\n      if (err.status === 550) {\r\n        setShowFriendslist(false);\r\n        return;\r\n      }\r\n      if (socket) socket.disconnect();\r\n      history.replace(\"/create\");\r\n    }\r\n\r\n    if (socket) {\r\n      socket.removeAllListeners(\"error\");\r\n      socket.removeAllListeners(\"session\");\r\n      socket.removeAllListeners(\"userJoined\");\r\n      socket.removeAllListeners(\"userDisconnect\");\r\n      socket.removeAllListeners(\"updateSettings\");\r\n      socket.removeAllListeners(\"updatePreferences\");\r\n\r\n      socket.on(\"error\", handleError);\r\n      socket.on(\"session\", handleSession);\r\n      socket.on(\"userJoined\", handleUserJoined);\r\n      socket.on(\"userDisconnect\", handleUserDisconnect);\r\n      socket.on(\"updateSettings\", handleUpdateSettings);\r\n      socket.on(\"updatePreferences\", handleUpdatePreferences);\r\n    }\r\n  }, [self.steamId, users, socket, props, history]);\r\n\r\n  useEffect(() => {\r\n    const socket = initiateSocket(props.steamId, props.sessionId);\r\n    setSocket(socket);\r\n\r\n    socket.io.on(\"reconnect_failed\", () => {\r\n      console.log(\"Failed to reconnect\");\r\n      props.addError({ status: 500, msg: \"Lost connection to server\", timeout: 15000 });\r\n      history.push(\"/create\");\r\n    });\r\n    socket.io.on(\"reconnect_attempt\", (attempt) => {\r\n      const msg = `Lost connection to server, attempting to reconnect. Attempt (${attempt}/${socket.io.reconnectionAttempts()})`\r\n      console.log(msg);\r\n      props.addError({ status: 500, msg: msg, timeout: 6000 });\r\n    });\r\n\r\n    return () => {\r\n      console.log(\"#### disconnecting ###\");\r\n      if (socket) socket.disconnect();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.sessionId, props.steamId]);\r\n\r\n  // Update group preferences\r\n  useEffect(() => {\r\n    console.log(\"calculatePreferences\");\r\n    const appIds = settings.onlyCommonGames ? commonAppIds : [];\r\n    setMatchedGames(calculatePreferences(users.concat(self), appIds));\r\n  }, [users, self, settings.onlyCommonGames, commonAppIds]);\r\n\r\n  // Send preferences to backend when changed\r\n  useEffect(() => {\r\n    if (!preferencesChanged || !self.preferences) return;\r\n    if (!socket) {\r\n      console.error(\"Socket is not defined\");\r\n      return;\r\n    }\r\n    console.log(\"Sending preferences\");\r\n    socket.emit(\"updatePreferences\", self.preferences);\r\n    setPreferencesChanged(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [self.preferences, preferencesChanged])\r\n\r\n  const onDragEnd = (result: DropResult): void => {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n    const newSelf: User = { ...self } as User;\r\n    newSelf.preferences = reorder(\r\n      (self as User).preferences ?? [],\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n    if (gameSearch.length > 0) {\r\n      // Reset game search to avoid unwanted scrolling after changing preferences.\r\n      // Does not update value in UserHeader so the user can build upon the old search query.\r\n      setGameSearch(\"\");\r\n    }\r\n    setSelf(newSelf);\r\n    setPreferencesChanged(true);\r\n  }\r\n\r\n  const sortPreferences = (sortBy: \"total\" | \"recent\") => {\r\n    // select the correct sort function dependant on the sortBy argument\r\n    let sortFunc: (a: Game, b: Game) => number;\r\n    if (sortBy === \"total\") {\r\n      sortFunc = (a: Game, b: Game) => b.playtime_forever - a.playtime_forever\r\n    } else {\r\n      sortFunc = (a: Game, b: Game) => {\r\n        const aPlaytime = a.playtime_2weeks ?? 0;\r\n        const bPlaytime = b.playtime_2weeks ?? 0;\r\n        if (aPlaytime === bPlaytime) {\r\n          // Fallback if playtime in the last two weeks is equal\r\n          return b.playtime_forever - a.playtime_forever;\r\n        }\r\n        return bPlaytime - aPlaytime;\r\n      }\r\n    }\r\n    // Sort preferences using sortFunc\r\n    const newSelf: User = { ...self };\r\n    if (newSelf.preferences) {\r\n      newSelf.preferences = newSelf.preferences.sort(sortFunc);\r\n      setSelf(newSelf);\r\n      setPreferencesChanged(true);\r\n    }\r\n  }\r\n\r\n  // loading \r\n  if (!self.preferences) {\r\n    return <Loading className=\"v-centered\" center />\r\n  }\r\n  return (\r\n    <>\r\n      {showFriendslist && socket ? <FriendsList socket={socket} sessionId={sessionId} closeFriendsList={() => setShowFriendslist(false)} /> : \"\"}\r\n      <header className=\"app-header\">\r\n        <h1 className=\"title\">{showFullName ? \"Common Steam Games\" : \"C.S.G.\"}</h1>\r\n        <Settings settings={settings} setSettings={updateSettings} />\r\n      </header>\r\n      <Container\r\n        titles={[\"Your Preferences\", \"Group Preferences\", \"Peers Preferences\"]}\r\n        minTitles={[\"You\", \"Group\", \"Peers\"]}\r\n      >\r\n        <GamesList\r\n          games={self.preferences ?? []}\r\n          onlyCommonGames={settings.onlyCommonGames}\r\n          commonAppIds={commonAppIds}\r\n          onDragEnd={onDragEnd}\r\n          droppableId={`${self.personaname}'s Preferences`}\r\n          gameSearch={gameSearch}\r\n          header={\r\n            <UserHeader\r\n              title=\"Your Preferences\"\r\n              user={self}\r\n              onSearch={setGameSearch}\r\n              onSortByTotal={() => sortPreferences(\"total\")}\r\n              onSortByLastTwoWeeks={() => sortPreferences(\"recent\")}\r\n            />\r\n          }\r\n        />\r\n        <GamesList\r\n          games={matchedGames}\r\n          onlyCommonGames={settings.onlyCommonGames}\r\n          commonAppIds={commonAppIds}\r\n          header={<GroupHeader title=\"Group Preferences\" gamesCount={matchedGames.length} commonGames={settings.onlyCommonGames} />}\r\n        />\r\n        <div className=\"peers\">\r\n          <Invite sessionId={sessionId} className=\"no-br-bottom\" openFriendsList={() => setShowFriendslist(true)} />\r\n          {users.map((user, index) =>\r\n            <Collapsible\r\n              header={<UserHeader title={`${user.personaname}'s preferences`} user={user} className=\"no-br no-bg\" />}\r\n              key={`${index}-${user.steamId}`}\r\n              title={`Show ${user.personaname ?? user.realname}'s' preferences`}\r\n            >\r\n              <GamesList\r\n                games={user.preferences ?? []}\r\n                onlyCommonGames={settings.onlyCommonGames}\r\n                commonAppIds={commonAppIds}\r\n                key={index}\r\n                className=\"no-br-top\"\r\n              />\r\n            </Collapsible>\r\n          )}\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction calculatePreferences(users: User[], commonAppIds: number[]): MatchedGame[] {\r\n  const matchedGames: Map<number, MatchedGame> = new Map();\r\n  const maxGames = commonAppIds.length > 0 ? commonAppIds.length : (\r\n    Math.max(...users.map(user => user.preferences ? user.preferences.length : 0)));\r\n\r\n  users.forEach(user => {\r\n    if (user.preferences) {\r\n      const preferences = commonAppIds.length > 0 ? (\r\n        user.preferences.filter(pref => commonAppIds.includes(pref.appid))\r\n      ) : user.preferences;\r\n\r\n      preferences.forEach((game, index) => {\r\n        const weight = getWeight(index, maxGames - 1);\r\n        let matchedGame: MatchedGame;\r\n        // Check if the game already exists. Otherwise add it to matchedGames.\r\n        if (matchedGames.has(game.appid)) {\r\n          matchedGame = matchedGames.get(game.appid)!;\r\n          matchedGame.weight += weight / users.length;\r\n          matchedGame.playtime_forever += game.playtime_forever / users.length;\r\n          if (matchedGame.owners) {\r\n            matchedGame.owners.push(user)\r\n          }\r\n        } else {\r\n          matchedGame = {\r\n            appid: game.appid,\r\n            name: game.name,\r\n            img_icon_url: game.img_icon_url,\r\n            img_logo_url: game.img_logo_url,\r\n            has_community_visible_stats: game.has_community_visible_stats ?? undefined,\r\n            playtime_2weeks: game.playtime_2weeks ? (game.playtime_2weeks / users.length) : undefined,\r\n            playtime_forever: game.playtime_forever / users.length,\r\n            weight: weight / users.length,\r\n            owners: [user]\r\n          };\r\n        }\r\n        matchedGames.set(game.appid, matchedGame);\r\n      });\r\n    }\r\n  });\r\n  const result = Array.from(matchedGames.values());\r\n  result.sort((a, b) => b.weight - a.weight);\r\n\r\n  return result\r\n}\r\n\r\nfunction getWeight(index: number, maxGames: number): number {\r\n  const weight = (maxGames - index) / maxGames;\r\n  return (!isNaN(weight) && weight >= 0) ? weight * weight : 0;\r\n}\r\n\r\nconst reorder = (games: Game[], startIndex: number, endIndex: number) => {\r\n  const result = Array.from(games);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n  return result;\r\n};\r\n\r\n/** Gets a list with appids for games owned by all users (incl. self) */\r\nconst getCommonAppIds = (users: User[]) => {\r\n  const appOwners: { appid: number, owners: number }[] = [];\r\n  let maxOwners = users.length;\r\n  for (const user of users) {\r\n    if (!user.preferences) {\r\n      maxOwners--;\r\n      continue;\r\n    }\r\n    for (const game of user.preferences) {\r\n      const index = appOwners.findIndex(elem => elem.appid === game.appid);\r\n      if (index >= 0) {\r\n        appOwners[index].owners++;\r\n      } else {\r\n        appOwners.push({ appid: game.appid, owners: 1 });\r\n      }\r\n    }\r\n  }\r\n  const ids = appOwners.filter(elem => elem.owners >= maxOwners).map(elem => elem.appid);\r\n  return ids;\r\n}\r\n\r\nexport default Matching;\r\n","import React, { useEffect } from 'react'\nimport \"../styles/error.css\"\n\nexport default function Error(props: {\n  error: ErrorType\n  removeError: () => void\n}) {\n  useEffect(() => {\n    const timeout = props.error.timeout;\n    let timer: NodeJS.Timeout | undefined;\n    if (timeout) {\n      timer = setTimeout(() => {\n        props.removeError();\n      }, timeout);\n    }\n    return () => {\n      if (timer) clearTimeout(timer);\n    };\n  }, [props]);\n\n  return (\n    <div className=\"error-popup\">\n      {props.error.msg}\n      <div className=\"error-close\" onClick={props.removeError}></div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Error from \"./Error\"\nimport \"../styles/error.css\"\n\nexport default function ErrorList(props: {\n  errors: ErrorType[],\n  setErrors: (err: ErrorType[]) => void\n}) {\n  const getRemoveErrorFnc = (error: ErrorType) => {\n    return () => props.setErrors(props.errors.filter(err => err !== error));\n  }\n\n  return (\n    <div className=\"error-popup-list\">\n      <div>\n        {props.errors.map((error, index) => <Error removeError={getRemoveErrorFnc(error)} error={error} key={index} />)}\n      </div>\n    </div>\n  )\n}\n","import { useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport CreateSession from \"./components/CreateSession\";\r\nimport Footer from \"./components/Footer\";\r\nimport JoinSession from \"./components/JoinSession\";\r\nimport UnknownPage from \"./components/UnknownPage\";\r\nimport Matching from \"./components/Matching\";\r\nimport ErrorList from \"./components/ErrorList\"\r\nimport packageJSON from \"../package.json\"\r\nimport \"./styles/app.css\";\r\n\r\nexport default function App(this: any) {\r\n  const [steamId, setSteamId] = useState<string | undefined>(getSteamId());\r\n  const [joinSessionId, setJoinSessionId] = useState<string | undefined>(getSessionId());\r\n  const [errors, setErrors] = useState<ErrorType[]>([]);\r\n\r\n  const addError = (error: ErrorType) => {\r\n    setErrors(errors.concat(error));\r\n  }\r\n\r\n  const createNewSession = (steamId: string) => {\r\n    sessionStorage.setItem(\"steamId\", steamId);\r\n    sessionStorage.removeItem(\"sessionId\");\r\n\r\n    setSteamId(steamId);\r\n    setJoinSessionId(undefined);\r\n  }\r\n\r\n  const joinSession = (steamId: string, sessionId: string) => {\r\n    sessionStorage.setItem(\"steamId\", steamId);\r\n    sessionStorage.setItem(\"sessionId\", sessionId);\r\n\r\n    setSteamId(steamId);\r\n    setJoinSessionId(sessionId);\r\n  }\r\n\r\n  const matching = steamId ? <Matching steamId={steamId} sessionId={joinSessionId} addError={addError} /> : <Redirect to=\"/\" />\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <ErrorList errors={errors} setErrors={setErrors} />\r\n      <Router basename={packageJSON.subUrl}>\r\n        <Switch>\r\n          <Route path=\"/matching\" exact>\r\n            {matching}\r\n          </Route>\r\n          <Route path=\"/join\" exact>\r\n            {canAutoJoin() ? <Redirect to=\"/matching\" push /> :\r\n              <JoinSession onSubmit={joinSession} sessionId={joinSessionId} steamId={steamId} />}\r\n          </Route>\r\n          <Route path=\"/create\" exact>\r\n            <CreateSession onSubmit={createNewSession} steamId={steamId} />\r\n          </Route>\r\n          <Route path=\"/\" exact>\r\n            <Redirect to=\"/create\" />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <UnknownPage />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n      <Footer />\r\n      <div className=\"background\" />\r\n    </div>\r\n  )\r\n}\r\n\r\n/**\r\n * Checks if a session id was passed in the url or is cached in the sessionStorage\r\n * @returns sessionId (string) or undefined\r\n */\r\nfunction getSessionId(): string | undefined {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const encodedSessionId = urlParams.get(\"sessionId\");\r\n  if (encodedSessionId) {\r\n    const sessionId = decodeURIComponent(encodedSessionId)\r\n    sessionStorage.setItem(\"sessionId\", sessionId);\r\n    return sessionId;\r\n  }\r\n  const cachedSessionId = sessionStorage.getItem(\"sessionId\");\r\n  if (cachedSessionId) {\r\n    return cachedSessionId;\r\n  }\r\n  return undefined;\r\n}\r\n\r\n/**\r\n * Checks if a steam id was passed in the url or is cached in the sessionStorage\r\n * @returns steamId (string) or undefined\r\n */\r\nfunction getSteamId(): string | undefined {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const encodedSteamId = urlParams.get(\"steamId\");\r\n  if (encodedSteamId) {\r\n    const steamId = decodeURIComponent(encodedSteamId);\r\n    sessionStorage.setItem(\"steamId\", steamId);\r\n    return steamId;\r\n  }\r\n  const cachedSteamId = sessionStorage.getItem(\"steamId\");\r\n  if (cachedSteamId) {\r\n    return cachedSteamId;\r\n  }\r\n  return undefined;\r\n}\r\n\r\nconst canAutoJoin = () => {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  return urlParams.has(\"steamId\") && urlParams.has(\"sessionId\");\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}