{"version":3,"sources":["components/collapsible/Collapsible.tsx","components/aboutTeaser/AboutTeaser.tsx","components/button/Button.tsx","components/tabs/Tabs.tsx","components/container/Container.tsx","components/buttonGroup/ButtonGroup.tsx","components/settings/Settings.tsx","pages/createSession/CreateSession.tsx","components/footer/Footer.tsx","security/mail.js","pages/joinSession/JoinSession.tsx","pages/unknownPage/UnknownPage.tsx","components/tooltip/Tooltip.tsx","components/userCard/UserCard.tsx","components/game/Game.tsx","components/game/util.ts","components/draggableGame/DraggableGame.tsx","Logger.ts","components/gamesList/GamesList.tsx","components/invite/Invite.tsx","components/loading/Loading.tsx","components/searchBar/SearchBar.tsx","components/userHeader/UserHeader.tsx","components/addButton/AddButton.tsx","components/groupHeader/GroupHeader.tsx","components/friend/Friend.tsx","components/friendsList/FriendsList.tsx","components/modal/Modal.tsx","components/confirmation/Confirmation.tsx","components/customGameInput/CustomGameInput.tsx","pages/matching/util.ts","pages/matching/Matching.tsx","components/error/Error.tsx","components/errorList/ErrorList.tsx","pages/about/About.tsx","App.tsx","index.tsx"],"names":["Collapsible","props","useState","collapsed","setCollapsed","hideContent","setHideContent","undefined","lastTimeout","setLastTimeout","type","className","btnClassName","onClick","clearTimeout","timeout","setTimeout","title","header","children","AboutTeaser","to","Button","appearance","disabled","Tabs","activeChild","setActiveChild","titles","map","index","Container","minTitles","MatchingContainer","isDesktop","useMediaQuery","query","ButtonGroup","getClass","options","length","option","activeIndex","setActive","Settings","name","settings","onlyCommonGames","newValue","setSettings","allCanAddCustomGames","isHost","defaultSort","handleSortInput","CreateSession","steamId","setSteamId","history","useHistory","handleSubmit","event","a","preventDefault","onSubmit","push","htmlFor","id","onChange","target","value","defaultValue","placeholder","required","Footer","href","rel","encrypted","decrypted","i","charCodeAt","String","fromCharCode","charAt","window","open","toMail","src","packageJSON","subUrl","alt","height","width","JoinSession","sessionId","setSessionId","UnknownPage","Tooltip","show","setShow","onMouseEnter","onMouseLeave","position","tooltip","UserCard","user","profileurl","avatarmedium","personaname","realname","Game","playtimeText","icon","playtime","Math","round","game","playtime_forever","Number","EPSILON","playtime2weeks","playtime_2weeks","isMatchedGame","isCustom","weightPercentage","weight","num","toFixed","parseFloat","convertWeightToPercentage","appid","hash","hasImage","img_icon_url","loading","char","optionalAProps","isDnD","tabIndex","storePageLink","getStorePage","style","textDecoration","showOwners","Owners","owners","gameTitle","DnDHighlight","owner","avatar","DraggableGame","draggableId","provided","ref","innerRef","draggableProps","dragHandleProps","hide","areEqual","prevProps","nextProps","memo","Logger","SHOW_LOG","sessionStorage","getItem","message","this","optionalParams","console","log","warn","error","group","groupEnd","LoggerContext","React","createContext","LoggerProvider","Provider","Consumer","GamesList","dndListRef","createRef","logger","useContext","useEffect","gameSearch","current","pos","depth","scrollHeight","getDepthForGame","search","match","similarity","games","forEach","commonAppIds","includes","compareTwoStrings","toLowerCase","searchGamePosition","scrollTo","top","behavior","droppableId","onDragEnd","droppableProps","filter","InnerList","highlightDnd","setHighlightDnd","timeoutStart","timeoutEnd","list","Invite","invite","location","origin","encodeURIComponent","readOnly","onFocus","select","navigator","clipboard","writeText","openFriendsList","Loading","centerInner","center","content","SearchBar","UserHeader","showSubheader","onSearch","onSortByTotal","onSortByLastTwoWeeks","subheader","preferences","AddButton","GroupHeader","gamesCount","commonGames","canAddCustomGames","addCustomGame","Friend","friend","FriendsList","friends","setFriends","setFilter","setList","listRef","socket","on","msg","setItem","JSON","stringify","cacheFriendsList","cached","parsed","parse","emit","loadFriendsList","removeAllListeners","mapToJSXElement","filterSimilarity","sort","b","closeFriendsList","Modal","listener","code","setVisible","document","addEventListener","removeEventListener","visible","Confirmation","onConfirm","onAbort","text","abortText","confirmText","CustomGameInput","setGame","confirm","errorMsg","validateGame","addError","status","addGame","close","newGame","trim","calculatePreferences","users","matchedGames","Map","maxGames","max","pref","isNaN","getWeight","matchedGame","get","set","result","Array","from","values","Matching","setUsers","self","setSelf","initiatorId","setInitiatorId","setMatchedGames","customGames","setCustomGames","preferencesChanged","setPreferencesChanged","setSocket","showFriendslist","setShowFriendslist","showLeaveModal","setShowLeaveModal","showCustomGameInput","setShowCustomGameInput","showSettingsModal","setShowSettingsModal","setCommonAppIds","setGameSearch","showFullName","appOwners","maxOwners","findIndex","elem","getCommonAppIds","concat","err","disconnect","replace","session","Object","entries","key","ownSteamId","you","newUsers","newSelf","find","unshift","data","changedUserIndex","io","reconnectionAttempts","initiateSocket","attempt","appIds","sortPreferences","sortBy","sortFunc","aPlaytime","bPlaytime","existingGame","destination","startIndex","endIndex","splice","removed","reorderGames","source","Error","timer","removeError","ErrorList","getRemoveErrorFnc","setErrors","errors","About","goBack","App","encodedSteamId","URLSearchParams","decodeURIComponent","localStorage","cachedSteamId","getSteamId","encodedSessionId","cachedSessionId","getSessionId","joinSessionId","setJoinSessionId","path","exact","canAutoJoin","removeItem","urlParams","has","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4bd292d5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./collapsible.css\";\n\nexport default function Collapsible(props: {\n  header?: string | JSX.Element;\n  title?: string;\n  btnClassName?: string;\n  children: JSX.Element;\n}) {\n  const [collapsed, setCollapsed] = useState(true);\n  const [hideContent, setHideContent] = useState(true);\n  const [lastTimeout, setLastTimeout] = useState<NodeJS.Timeout | undefined>(undefined);\n\n  /* This component uses css transition to animate opening and closing.\n   * To remove the content after closing, we need to wait until the transition is finished.\n   * This is handled by \"toggle\"\n   */\n  const toggle = () => {\n    // Abort last timeout to avoid setting hideContent true,\n    // if the content was collapsed and opened again immediately\n    if (lastTimeout) {\n      clearTimeout(lastTimeout);\n      setLastTimeout(undefined);\n    }\n\n    // Toggle collapsed state. Hide content after animation delay\n    if (collapsed) {\n      setHideContent(false);\n    } else {\n      const timeout = setTimeout(() => setHideContent(true), 500);\n      setLastTimeout(timeout);\n    }\n    setCollapsed(!collapsed);\n  };\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        className={`collapsible${hideContent ? \" collapsed\" : \"\"} ${props.btnClassName}`}\n        onClick={toggle}\n        title={props.title}\n      >\n        {props.header ?? \"Open\"}\n        <div className={collapsed ? \"arrow-down\" : \"arrow-up\"}>\n          <div className=\"arrow-l\"></div>\n          <div className=\"arrow-r\"></div>\n        </div>\n      </button>\n      <div className={`content ${collapsed ? \"content-collapsed\" : \"\"}`}>{hideContent ? <></> : props.children}</div>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Collapsible from \"../collapsible/Collapsible\";\nimport \"./aboutTeaser.css\";\n\nexport default function AboutTeaser() {\n  return (\n    <div className=\"about-teaser\">\n      <Collapsible btnClassName=\"about-teaser-header\" header={<h2>About</h2>}>\n        <div className=\"about-teaser-content\">\n          <h3>What Is Common Steam Games?</h3>\n          <p>\n            Common Steam Games is a web application that enables groups of users to discover common games regarding\n            their steam accounts and vote on games to find common preferences.\n          </p>\n          <p>\n            <Link to=\"about\">Read more</Link>\n          </p>\n        </div>\n      </Collapsible>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./button.css\";\n\nexport default function Button(props: {\n  className?: string;\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n  appearance?: \"default\" | \"danger\" | \"confirm\" | \"outline\";\n  title?: string;\n  type?: \"button\" | \"submit\" | \"reset\";\n  children?: JSX.Element | string;\n  disabled?: boolean;\n}) {\n  return (\n    <button\n      className={`btn ${props.appearance ?? \"default\"} ${props.className ?? \"\"}`}\n      onClick={props.onClick}\n      title={props.title}\n      type={props.type}\n      disabled={props.disabled}\n    >\n      {props.children ?? \"\"}\n    </button>\n  );\n}\n","import React, { useState } from \"react\";\nimport Button from \"../button/Button\";\nimport \"./tabs.css\";\n\nexport default function Tabs(props: { children: JSX.Element[]; titles: string[]; className?: string }) {\n  const [activeChild, setActiveChild] = useState(0);\n\n  return (\n    <div className={props.className}>\n      <ul className=\"tabs\">\n        {props.titles.map((title, index) => (\n          <li key={index} className={`tabs-item ${activeChild === index ? \" active\" : \"\"}`}>\n            <Button onClick={() => setActiveChild(index)}>{title}</Button>\n          </li>\n        ))}\n      </ul>\n      {props.children[activeChild]}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport Tabs from \"../tabs/Tabs\";\nimport \"./container.css\";\n\nexport default function Container(props: {\n  children: JSX.Element[] | JSX.Element;\n  className?: string;\n  titles?: string[];\n  minTitles?: string[];\n}) {\n  // Container for Matching page\n  if (props.titles && props.minTitles) {\n    return (\n      <MatchingContainer titles={props.titles} minTitles={props.minTitles}>\n        {props.children as JSX.Element[]}\n      </MatchingContainer>\n    );\n  }\n\n  // Simple - single column - container\n  return (\n    <div className=\"container-single\">\n      <div className={`container-single-inner ${props.className ?? \"\"}`}>{props.children}</div>\n    </div>\n  );\n}\n\nfunction MatchingContainer(props: {\n  children: JSX.Element[];\n  className?: string;\n  titles: string[];\n  minTitles: string[];\n}) {\n  const isDesktop = useMediaQuery({ query: \"(min-width: 1100px)\" });\n  const showMinTitles = useMediaQuery({ query: \"(max-width: 450px)\" });\n  const titles = showMinTitles ? props.minTitles : props.titles;\n\n  // Desktop version with 3 tabs used by Matching\n  if (isDesktop) {\n    return <div className={`container ${props.className ?? \"\"}`}>{props.children}</div>;\n  }\n\n  // Mobile version\n  return (\n    <Tabs titles={titles} className={`container-tabs ${props.className ?? \"\"}`}>\n      {props.children}\n    </Tabs>\n  );\n}\n","import React from \"react\";\nimport Button from \"../button/Button\";\nimport \"./buttonGroup.css\";\n\nexport default function ButtonGroup(props: {\n  name: string;\n  options: string[];\n  activeIndex: number;\n  setActive: (index: number) => void;\n  disabled?: boolean;\n}) {\n  const getClass = (index: number) => {\n    if (props.options.length === 1) {\n      return \"btn-group-btn\";\n    }\n    if (index === props.options.length - 1) {\n      return \"btn-group-btn no-br-left\";\n    }\n    if (index === 0) {\n      return \"btn-group-btn no-br-right\";\n    }\n    return \"btn-group-btn no-br\";\n  };\n\n  return (\n    <div className=\"btn-group\">\n      {props.options.map((option, index) => (\n        <Button\n          key={index}\n          type=\"button\"\n          className={getClass(index)}\n          appearance={index === props.activeIndex ? \"confirm\" : undefined}\n          onClick={() => props.setActive(index)}\n          disabled={props.disabled}\n        >\n          {option}\n        </Button>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ButtonGroup from \"../buttonGroup/ButtonGroup\";\nimport \"./settings.css\";\n\nexport default function Settings(props: {\n  className?: string;\n  isHost: boolean;\n  settings: Settings;\n  setSettings: (settings: Settings) => void;\n}) {\n  function handleOnlyCommonGamesInput(index: number) {\n    const newValue = index === 1;\n    // Only update settings if value has changed\n    if (props.settings.onlyCommonGames !== newValue) {\n      const settings = { ...props.settings };\n      settings.onlyCommonGames = newValue;\n      props.setSettings(settings);\n    }\n  }\n\n  function handleAllCanAddCustomGamesInput(index: number) {\n    const newValue = index === 0;\n    // Only update settings if value has changed\n    if (props.settings.allCanAddCustomGames !== newValue) {\n      const settings = { ...props.settings };\n      settings.allCanAddCustomGames = newValue;\n      props.setSettings(settings);\n    }\n  }\n\n  function handleSortInput(index: number) {\n    const newValue = index === 0 ? \"total\" : \"last2Weeks\";\n    // Only update settings if value has changed\n    if (props.settings.defaultSort !== newValue) {\n      const settings = { ...props.settings };\n      settings.defaultSort = newValue;\n      props.setSettings(settings);\n    }\n  }\n\n  return (\n    <div className={props.className}>\n      <div className=\"settings-section\">\n        <label className=\"settings-label\">What games should be matched:</label>\n        <ButtonGroup\n          name=\"CGOptions\"\n          options={[\"All Games\", \"Only Common Games\"]}\n          activeIndex={props.settings.onlyCommonGames ? 1 : 0}\n          setActive={handleOnlyCommonGamesInput}\n        />\n      </div>\n      <div className=\"settings-section\">\n        <label className=\"settings-label\">Who can add custom games: *</label>\n        <ButtonGroup\n          name=\"CGOptions\"\n          options={[\"Everyone\", \"Only Host\"]}\n          activeIndex={props.settings.allCanAddCustomGames ? 0 : 1}\n          setActive={handleAllCanAddCustomGamesInput}\n          disabled={!props.isHost}\n        />\n      </div>\n      <div className=\"settings-section\">\n        <label className=\"settings-label\">Default game sort for new users: *</label>\n        <ButtonGroup\n          name=\"CGOptions\"\n          options={[\"Total Playtime\", \"Playtime Last 2 Weeks\"]}\n          activeIndex={props.settings.defaultSort === \"total\" ? 0 : 1}\n          setActive={(index) => handleSortInput(index)}\n          disabled={!props.isHost}\n        />\n      </div>\n      <p className=\"settings-hint\">Settings marked with * can only be edited by the session host.</p>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport AboutTeaser from \"../../components/aboutTeaser/AboutTeaser\";\nimport Container from \"../../components/container/Container\";\nimport Settings from \"../../components/settings/Settings\";\nimport \"./createSession.css\";\n\nexport default function CreateSession(props: {\n  steamId?: string;\n  settings: Settings;\n  setSettings: (settings: Settings) => void;\n  onSubmit: (steamId: string) => void;\n}) {\n  const [steamId, setSteamId] = useState<string>(props.steamId ?? \"\");\n  const history = useHistory();\n\n  const handleSteamIdChange = (event: any) => {\n    setSteamId(event.target.value);\n  };\n\n  const handleSubmit = async (event: any) => {\n    event.preventDefault();\n    props.onSubmit(steamId);\n    history.push(\"/matching\");\n  };\n\n  return (\n    <Container className=\"create-session\">\n      <h1 className=\"title\">Common Steam Games</h1>\n      <h2 className=\"subtitle\">Create new Session</h2>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"createSessionSteamId\">Steam ID or Profile URL:</label>\n        <div className=\"steamId-input input-margin\">\n          <span className=\"profile-url\">https://steamcommunity.com/id/</span>\n          <input\n            type=\"text\"\n            name=\"steamId\"\n            id=\"createSessionSteamId\"\n            onChange={handleSteamIdChange}\n            className=\"d-table-cell\"\n            defaultValue={steamId}\n            placeholder=\"Steam ID or Profile URL\"\n            required\n          />\n        </div>\n        <Settings\n          isHost\n          settings={props.settings}\n          setSettings={props.setSettings}\n          className=\"create-session-settings\"\n        />\n        <input type=\"submit\" value=\"Create New Session\" className=\"btn default\" />\n      </form>\n      <p className=\"link-join\">\n        Or <Link to=\"/join\">join existing session</Link>\n      </p>\n      <AboutTeaser />\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport packageJSON from \"../../../package.json\";\nimport toMail from \"../../security/mail\";\nimport \"./footer.css\";\n\nexport default function Footer() {\n  return (\n    <div className=\"footer\">\n      <div className=\"f-left\">This project is not affiliated with Valve or Steam</div>\n      <div className=\"f-right\">\n        <Link to=\"about\" className=\"footer-link\">\n          About\n        </Link>\n        <a\n          className=\"footer-link\"\n          href=\"https://aliebald.github.io/impressum/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          title=\"Impressum gemäß § 5 TMG\"\n        >\n          Impressum\n        </a>\n        <div title=\"Send me a mail\" onClick={() => toMail(\"𝕔𝕠𝕟𝕥𝕒𝕔𝕥.𝕝𝕚𝕖𝕓𝕒𝕝𝕕@𝕘𝕞𝕒𝕚𝕝.𝕔𝕠𝕞\")}>\n          <img src={`${packageJSON.subUrl}/email.svg`} alt=\"contact\" height=\"20px\" width=\"20px\" className=\"contact\" />\n        </div>\n        <a\n          href=\"https://github.com/aliebald/common-steam-games\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          title=\"GitHub Repository\"\n        >\n          <img src={`${packageJSON.subUrl}/github.svg`} alt=\"github\" height=\"18px\" width=\"18px\" className=\"github\" />\n        </a>\n      </div>\n    </div>\n  );\n}\n","/**\n * Takes an \"encrypted\" mail address, converts it to a real mail address\n * and opens the mailto link if possible\n * @param {string} encrypted - encrypted mail address written in\n *   lower-case mathematical double struck letters (𝕒-𝕫) and \"normal\"\n *   characters (all characters with character codes under 122)\n * @returns {void}\n * @author Leonard Goldstein\n * @see {@link https://github.com/goldst/goldst.github.io/blob/7d7e3c3c5eb9563fe83a47f62460e4536b9a3159/js/safety/safety.js}\n */\nexport default function toMail(encrypted) {\n  let decrypted = \"\";\n  for (let i = 0; i < encrypted.length; i++) {\n    if (encrypted.charCodeAt(i) > 122) {\n      decrypted += String.fromCharCode(encrypted.charCodeAt(i + 1) - 56561);\n      i++;\n    } else {\n      decrypted += encrypted.charAt(i);\n    }\n  }\n  window.open(\"mailto:\" + decrypted, \"_self\");\n}\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport AboutTeaser from \"../../components/aboutTeaser/AboutTeaser\";\nimport Container from \"../../components/container/Container\";\n\nexport default function JoinSession(props: {\n  sessionId?: string;\n  steamId?: string;\n  onSubmit: (steamId: string, sessionId: string) => void;\n  id?: string;\n}) {\n  const [steamId, setSteamId] = useState<string>(props.steamId ?? \"\");\n  const [sessionId, setSessionId] = useState<string>(props.sessionId ?? \"\");\n  const history = useHistory();\n  const handleSteamIdChange = (event: any) => {\n    setSteamId(event.target.value);\n  };\n\n  const handleSessionIdChange = (event: any) => {\n    setSessionId(event.target.value);\n  };\n\n  const handleSubmit = async (event: any) => {\n    event.preventDefault();\n    props.onSubmit(steamId, sessionId);\n    history.push(\"/matching\");\n  };\n\n  return (\n    <Container className=\"join-session\">\n      <h1 className=\"title\">Common Steam Games</h1>\n      <h2 className=\"subtitle\">Join Session</h2>\n      <form className=\"d-table\" onSubmit={handleSubmit}>\n        <div className=\"d-table-row\">\n          <label htmlFor=\"joinSessionSteamId\" className=\"d-table-cell\">\n            Steam ID or Profile URL:\n          </label>\n          <div className=\"steamId-input input-margin\">\n            <span className=\"profile-url\">https://steamcommunity.com/id/</span>\n            <input\n              type=\"text\"\n              name=\"steamId\"\n              id=\"joinSessionSteamId\"\n              onChange={handleSteamIdChange}\n              className=\"d-table-cell\"\n              defaultValue={steamId}\n              placeholder=\"Steam ID or Profile URL\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"d-table-row\">\n          <label htmlFor=\"sessionId\" className=\"d-table-cell\">\n            Session ID:&nbsp;\n          </label>\n          <input\n            type=\"text\"\n            name=\"sessionId\"\n            id=\"sessionId\"\n            onChange={handleSessionIdChange}\n            className=\"d-table-cell input-margin\"\n            defaultValue={sessionId}\n            placeholder=\"Session ID\"\n            required\n          />\n        </div>\n        <div className=\"d-table-row\">\n          <div className=\"d-table-cell\"></div>\n          <div className=\"d-table-cell\">\n            <input type=\"submit\" value=\"Join Session\" className=\"btn default\" />\n          </div>\n        </div>\n      </form>\n      <p className=\"link-create\">\n        Or <Link to=\"/create\">create new session</Link>\n      </p>\n      <AboutTeaser />\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./unknownPage.css\";\n\n/**\n * Simple page for 404 errors\n */\nexport default function UnknownPage() {\n  return (\n    <div className=\"unknown-page\">\n      <p>The page you are looking for was not found.</p>\n      <p>\n        You can <Link to=\"/create\">create a new session</Link> or <Link to=\"/join\">join an existing session</Link>.\n      </p>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./tooltip.css\";\n\nexport default function Tooltip(props: {\n  children: JSX.Element;\n  tooltip: JSX.Element;\n  position: \"bottom\" | \"right\" | \"left\" | \"bottom-left\";\n}) {\n  const [show, setShow] = useState(false);\n\n  if (!show) {\n    return (\n      <div onMouseEnter={() => setShow(true)} onMouseLeave={() => setShow(false)}>\n        {props.children}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"tooltip-wrapper\" onMouseEnter={() => setShow(true)} onMouseLeave={() => setShow(false)}>\n      <div className={`tooltip-popup ${props.position}`}>{props.tooltip}</div>\n      {props.children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport Button from \"../button/Button\";\nimport \"./userCard.css\";\n\nexport default function UserCard(props: { user: User; className?: string }) {\n  const openSteamChat = () => {\n    window.open(`steam://friends/message/${props.user.steamId}`);\n  };\n\n  return (\n    <div className={`user-card ${props.className ?? \"\"}`}>\n      <a href={props.user.profileurl} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Steam profile\">\n        <img src={props.user.avatarmedium} alt=\"avatar\" height=\"64px\" width=\"64px\" />\n      </a>\n      <div className=\"user-details\">\n        <h3>{props.user.personaname}</h3>\n        <span className=\"realname\">{props.user.realname}</span>\n        <br />\n      </div>\n      <Button onClick={openSteamChat}>Chat</Button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Tooltip from \"../tooltip/Tooltip\";\nimport UserCard from \"../userCard/UserCard\";\nimport packageJSON from \"../../../package.json\";\nimport { convertWeightToPercentage, getImage, getStorePage } from \"./util\";\nimport \"./game.css\";\n\nexport default function Game(props: {\n  game: Game | MatchedGame;\n  showOwners?: boolean;\n  isDnD?: boolean;\n  DnDHighlight?: boolean; // Increases brightness of dnd icon for a few seconds after first render\n}) {\n  const playtime = Math.round((props.game.playtime_forever / 60 + Number.EPSILON) * 100) / 100;\n  const playtime2weeks = props.game.playtime_2weeks\n    ? Math.round((props.game.playtime_2weeks / 60 + Number.EPSILON) * 100) / 100\n    : 0;\n  const isMatchedGame = \"weight\" in (props.game as MatchedGame);\n  const isCustom = props.game.isCustom ?? false;\n\n  let playtimeText: string;\n  const weightPercentage = isMatchedGame ? convertWeightToPercentage((props.game as MatchedGame).weight) : \"\";\n  if (isCustom) {\n    playtimeText = \"Custom Game\";\n  } else if (isMatchedGame) {\n    playtimeText = `Average Playtime: ${playtime}h`;\n  } else {\n    playtimeText = playtime2weeks > 0 ? `Playtime: ${playtime}h / ${playtime2weeks}h` : `Playtime: ${playtime}h`;\n  }\n\n  let icon: JSX.Element;\n  const hasImage = props.game.img_icon_url.length > 0;\n  if (hasImage) {\n    icon = (\n      <img src={getImage(props.game.appid, props.game.img_icon_url)} width=\"32\" height=\"32\" alt=\"icon\" loading=\"lazy\" />\n    );\n  } else {\n    const char = props.game.name.length > 0 ? props.game.name.charAt(0) : \"?\";\n    icon = (\n      <div className={`no-icon${isCustom ? \" custom\" : \"\"}`}>\n        <span>{char}</span>\n      </div>\n    );\n  }\n\n  const optionalAProps = props.isDnD ? { tabIndex: -1 } : {};\n  const storePageLink = getStorePage(props.game.appid);\n\n  return (\n    <div className=\"game\">\n      {!isCustom && storePageLink ? (\n        <a\n          className=\"img-link\"\n          href={storePageLink}\n          title={`${props.game.name} steam page`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={hasImage ? {} : { textDecoration: \"none\" }}\n          {...optionalAProps}\n        >\n          {icon}\n        </a>\n      ) : (\n        <div className=\"img-link no-select\">{icon}</div>\n      )}\n      <div className={isMatchedGame || props.isDnD ? \"game-info no-br\" : \"game-info\"}>\n        <div className=\"title\">{props.game.name}</div>\n        <div className=\"playtime\">{playtimeText}</div>\n      </div>\n      {isMatchedGame ? (\n        <div className=\"match-info\">\n          {props.showOwners ? (\n            <Owners owners={(props.game as MatchedGame).owners} gameTitle={props.game.name} />\n          ) : (\n            <></>\n          )}\n          <div className=\"weight\">Match:&nbsp;{weightPercentage}</div>\n        </div>\n      ) : (\n        <></>\n      )}\n      {props.isDnD ? (\n        <div className=\"dnd-icon\">\n          <img\n            src={`${packageJSON.subUrl}/dnd_icon.svg`}\n            alt=\"dnd\"\n            width=\"17\"\n            height=\"32\"\n            className={props.DnDHighlight ? \"highlight\" : \"\"}\n          />\n        </div>\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n}\n\nfunction Owners(props: { owners: User[]; gameTitle: string }) {\n  return (\n    <>\n      {props.owners.map((owner, index) => (\n        <Tooltip position=\"bottom-left\" tooltip={<UserCard user={owner} />} key={index}>\n          <img src={owner.avatar} alt=\"\" height=\"16px\" width=\"16px\" className=\"owner\" loading=\"lazy\" />\n        </Tooltip>\n      ))}\n    </>\n  );\n}\n","/**\n * Constructs an image url.\n *\n * @param appid Steam AppId\n * @param hash Steam Image Hash\n * @returns Image url\n */\nexport function getImage(appid: number | string, hash: number | string): string {\n  return `https://media.steampowered.com/steamcommunity/public/images/apps/${appid}/${hash}.jpg`;\n}\n\n/**\n * Converts an steam appId to its corresponding steam store url.\n *\n * @param appid Steam appId\n * @returns Steam store url for given appId\n */\nexport function getStorePage(appid: number | string): string {\n  return `https://store.steampowered.com/app/${appid}`;\n}\n\n/**\n * Converts a number between 0 and 1 to an percentage with zero to two decimals, removing trailing zeros.\n *\n * @param weight weight between 0 and 1\n * @returns Percentage with max two decimals\n */\nexport function convertWeightToPercentage(weight: number): string {\n  // Get weight as rounded percentage with 2 trailing decimals\n  const num = (Math.round(weight * 10000) / 100).toFixed(2);\n  // remove trailing zeros using parseFloat\n  return `${parseFloat(num)}%`;\n}\n","import React, { memo } from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport Game from \"../game/Game\";\n\ntype DraggableGameProps = {\n  game: Game;\n  index: number;\n  hide?: boolean;\n  DnDHighlight?: boolean;\n};\n\nfunction DraggableGame(props: DraggableGameProps) {\n  return (\n    <Draggable draggableId={`${props.game.appid}`} index={props.index}>\n      {(provided) => (\n        <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n          {props.hide ? <></> : <Game game={props.game} isDnD DnDHighlight={props.DnDHighlight} />}\n        </div>\n      )}\n    </Draggable>\n  );\n}\n\nfunction areEqual(prevProps: DraggableGameProps, nextProps: DraggableGameProps) {\n  return (\n    prevProps.game.appid === nextProps.game.appid &&\n    prevProps.index === nextProps.index &&\n    prevProps.hide === nextProps.hide &&\n    prevProps.DnDHighlight === nextProps.DnDHighlight\n  );\n}\n\nexport default memo(DraggableGame, areEqual);\n","import React from \"react\";\n\nexport class Logger {\n  // Enable logger in prod with (reload afterwards): sessionStorage.setItem(\"SHOW_LOG\", true);\n  private SHOW_LOG: boolean = process.env.NODE_ENV === \"development\" || sessionStorage.getItem(\"SHOW_LOG\") === \"true\";\n\n  /**\n   * Wrapper for console.log, Prints to `stdout` with `newline` if logging is enabled.\n   */\n  log(message?: any, ...optionalParams: any[]) {\n    if (this.SHOW_LOG) {\n      console.log(message, ...optionalParams);\n    }\n  }\n\n  /**\n   * Wrapper for console.warn, Prints to `stderr` with `newline` if logging is enabled.\n   */\n  warn(message?: any, ...optionalParams: any[]) {\n    if (this.SHOW_LOG) {\n      console.warn(message, ...optionalParams);\n    }\n  }\n\n  /**\n   * Wrapper for console.error, Prints to `stderr` with `newline` if logging is enabled.\n   */\n  error(message?: any, ...optionalParams: any[]) {\n    if (this.SHOW_LOG) {\n      console.error(message, ...optionalParams);\n    }\n  }\n\n  /**\n   * Wrapper for console.group.\n   * Increases indentation of subsequent lines by two spaces, if logging is enabled.\n   * If one or more labels are provided, those are printed first without the additional indentation.\n   */\n  group(...label: any[]) {\n    if (this.SHOW_LOG) {\n      console.group(...label);\n    }\n  }\n\n  /**\n   * Wrapper for console.groupEnd. Decreases indentation of subsequent lines by two spaces, if logging is enabled.\n   */\n  groupEnd() {\n    if (this.SHOW_LOG) {\n      console.groupEnd();\n    }\n  }\n}\n\nconst LoggerContext = React.createContext(new Logger());\n\nexport const LoggerProvider = LoggerContext.Provider;\nexport const LoggerConsumer = LoggerContext.Consumer;\n\nexport default LoggerContext;\n","import { DragDropContext, Droppable, DropResult, ResponderProvided } from \"react-beautiful-dnd\";\nimport React, { createRef, RefObject, useContext, useEffect, useState } from \"react\";\nimport { compareTwoStrings } from \"string-similarity\";\nimport DraggableGame from \"../draggableGame/DraggableGame\";\nimport Game from \"../game/Game\";\nimport LoggerContext from \"../../Logger\";\nimport \"./gamesList.css\";\n\nexport default function GamesList(props: {\n  games: Game[] | MatchedGame[];\n  onlyCommonGames?: boolean;\n  commonAppIds: number[];\n  droppableId?: string; // If this is given, the output list will be a drag & drop list\n  onDragEnd?: (result: DropResult, provided: ResponderProvided) => void;\n  header?: JSX.Element;\n  gameSearch?: string;\n  className?: string;\n}) {\n  const header = props.header ?? \"\";\n  const dndListRef: RefObject<HTMLDivElement> = createRef();\n  const onlyCommonGames = props.onlyCommonGames ?? false;\n  const logger = useContext(LoggerContext);\n\n  useEffect(() => {\n    /** Finds the index of the game in games with the highest similarity with a search query */\n    const searchGamePosition = (search: string): number => {\n      let match = {\n        similarity: 0,\n        index: 0,\n        name: \"\"\n      };\n      props.games.forEach((game, index) => {\n        if (!props.onlyCommonGames || props.commonAppIds.includes(game.appid)) {\n          const similarity = compareTwoStrings(game.name.toLowerCase(), search.toLowerCase());\n          if (similarity > match.similarity) {\n            match = {\n              similarity: similarity,\n              index: index,\n              name: game.name\n            };\n          }\n        }\n      });\n      logger.log(`Best match for game search (\"${search}\"): ${match.name}. Similarity: ${match.similarity}`);\n      return match.index;\n    };\n\n    /** Finds the depth in px of the game with the given index. Used for scrollTo() */\n    const getDepthForGame = (index: number) => {\n      if (!dndListRef.current) {\n        return 0;\n      }\n      let depth = 0;\n      for (let i = 0; i < index; i++) {\n        depth += dndListRef.current.children[0].children[i].scrollHeight;\n      }\n      return depth;\n    };\n\n    if (props.gameSearch && props.gameSearch.length > 1 && dndListRef.current) {\n      const index = searchGamePosition(props.gameSearch);\n      const pos = getDepthForGame(index);\n      dndListRef.current.scrollTo({ top: pos, behavior: \"smooth\" });\n    }\n  }, [dndListRef, props.games, props.gameSearch, props.commonAppIds, props.onlyCommonGames, logger]);\n\n  // Return games as drag & drop list\n  if (props.droppableId && props.onDragEnd) {\n    return (\n      <div className={`games-list ${props.className ?? \"\"}`}>\n        <DragDropContext onDragEnd={props.onDragEnd}>\n          {header}\n          <div className=\"scroll-container\" ref={dndListRef}>\n            <Droppable droppableId={props.droppableId}>\n              {(provided) => (\n                <div {...provided.droppableProps} ref={provided.innerRef}>\n                  <InnerList games={props.games} onlyCommonGames={onlyCommonGames} commonAppIds={props.commonAppIds} />\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </div>\n        </DragDropContext>\n      </div>\n    );\n  }\n\n  // Return games as static list if droppableId or onDragEnd is not defined in props\n  const games = onlyCommonGames ? props.games.filter((game) => props.commonAppIds.includes(game.appid)) : props.games;\n  return (\n    <div className={`games-list ${props.className ?? \"\"}`}>\n      {header}\n      <div className=\"scroll-container\">\n        {games.map((game, index) => (\n          <Game game={game} key={index} showOwners={!onlyCommonGames} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\n// do not re-render if the games list reference has not changed\nconst InnerList = React.memo(function InnerList(props: {\n  games: Game[];\n  commonAppIds: number[];\n  onlyCommonGames: boolean;\n}) {\n  const [highlightDnd, setHighlightDnd] = useState(false);\n\n  // Increases brightness of dnd icon for a few seconds after first render\n  useEffect(() => {\n    const timeoutStart = setTimeout(() => {\n      setHighlightDnd(true);\n    }, 1000);\n\n    const timeoutEnd = setTimeout(() => {\n      setHighlightDnd(false);\n    }, 6000);\n\n    return () => {\n      clearTimeout(timeoutStart);\n      clearTimeout(timeoutEnd);\n    };\n  }, []);\n\n  const list = props.games.map((game: Game, index: number) => {\n    if (!props.onlyCommonGames || props.commonAppIds.includes(game.appid)) {\n      return <DraggableGame key={game.appid} game={game} index={index} DnDHighlight={highlightDnd} />;\n    } else {\n      return <DraggableGame key={game.appid} game={game} index={index} hide DnDHighlight={highlightDnd} />;\n    }\n  });\n  return <>{list}</>;\n});\n","import React from \"react\";\nimport packageJSON from \"../../../package.json\";\nimport Button from \"../button/Button\";\nimport \"./invite.css\";\n\nexport default function Invite(props: { sessionId: string; className?: string; openFriendsList: () => void }) {\n  const invite = `${window.location.origin}${packageJSON.subUrl}/?sessionId=${encodeURIComponent(\n    props.sessionId\n  )}#/join`;\n  const copyInvite = () => {\n    navigator.clipboard.writeText(invite);\n  };\n  const handleFocus = (event: any) => {\n    event.target.select();\n  };\n\n  return (\n    <div className={`invite-box ${props.className ?? \"\"}`}>\n      <label>Invite your friends</label>\n      <div className=\"invite-row\">\n        <input\n          className=\"invite-input\"\n          type=\"text\"\n          value={invite}\n          readOnly\n          onFocus={handleFocus}\n          title=\"Invite link. Click 'Copy Invite' to copy this link\"\n        />\n        <Button onClick={copyInvite} title=\"Copy invite link\">\n          Copy&nbsp;Invite\n        </Button>\n        <Button\n          onClick={props.openFriendsList}\n          title={\n            \"Open your friends list and create personalized invites. \" +\n            \"This allows your friends to directly join you without looking up their steamId.\"\n          }\n        >\n          Open&nbsp;Friends&nbsp;List\n        </Button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./loading.css\";\n\nexport default function Loading(props: { className?: string; center?: boolean }) {\n  // Loading animation from https://loading.io/css/\n  const centerInner = props.center ? \" v-centered\" : \"\";\n  const content = (\n    <div className={`lds-roller${centerInner} ${props.className ?? \"\"}`}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n\n  if (props.center) {\n    return <div className=\"flex-center\">{content}</div>;\n  }\n\n  return content;\n}\n","import React from \"react\";\nimport \"./searchBar.css\";\n\nexport default function SearchBar(props: {\n  onChange: (str: string) => void;\n  className?: string;\n  title?: string;\n  placeholder?: string;\n}) {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    props.onChange(event.target.value);\n  };\n\n  const handleSubmit = (event: any) => {\n    event.preventDefault();\n    props.onChange(event.target[0].value);\n  };\n\n  return (\n    <form className={`search-bar-form ${props.className ?? \"\"}`} onSubmit={handleSubmit}>\n      <input type=\"text\" onChange={handleChange} placeholder={props.placeholder} title={props.title ?? \"button\"} />\n      <button type=\"reset\">&times;</button>\n    </form>\n  );\n}\n","import React from \"react\";\nimport Button from \"../button/Button\";\nimport SearchBar from \"../searchBar/SearchBar\";\nimport \"./userHeader.css\";\n\nexport default function UserHeader(props: {\n  title: string;\n  user: User;\n  className?: string;\n  onSearch?: (filter: string) => void;\n  onSortByTotal?: () => void;\n  onSortByLastTwoWeeks?: () => void;\n}) {\n  const showSubheader =\n    typeof props.onSearch !== \"undefined\" &&\n    typeof props.onSortByTotal !== \"undefined\" &&\n    typeof props.onSortByLastTwoWeeks !== \"undefined\";\n\n  const handleSearchInput = (query: string) => {\n    if (typeof props.onSearch !== \"undefined\") {\n      props.onSearch(query);\n    }\n  };\n\n  const subheader = (\n    <div className=\"sub-header\">\n      <SearchBar placeholder=\"Search Game\" onChange={handleSearchInput} title=\"Search for a game in your games\" />\n      <span title=\"Sorts your games according to your total playtime or playtime in the last two weeks\">\n        Sort&nbsp;by:\n      </span>\n      <Button\n        onClick={props.onSortByLastTwoWeeks}\n        title=\"Sorts your games according to your playtime in the last two weeks\"\n      >\n        Last&nbsp;2&nbsp;Weeks\n      </Button>\n      <Button onClick={props.onSortByTotal} title=\"Sorts your games according to your total playtime\">\n        Total\n      </Button>\n    </div>\n  );\n\n  return (\n    <>\n      <div className={`user-header ${showSubheader ? \"has-subheader\" : \"\"} ${props.className ?? \"\"}`}>\n        <a href={props.user.profileurl} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Steam profile\">\n          <img src={props.user.avatarmedium} width=\"45\" height=\"45\" alt=\"avatar\" />\n        </a>\n        <div className=\"user-details\">\n          <h2>{props.title}</h2>\n          {props.user.preferences ? <div>{props.user.preferences.length}&nbsp;Games</div> : \"\"}\n        </div>\n      </div>\n      {showSubheader ? subheader : <></>}\n    </>\n  );\n}\n","import React from \"react\";\nimport \"./addButton.css\";\n\nexport default function AddButton(props: {\n  className?: string;\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n  title?: string;\n}) {\n  return (\n    <button className={`add-btn ${props.className ?? \"\"}`} onClick={props.onClick} title={props.title}>\n      <div></div>\n      <div></div>\n    </button>\n  );\n}\n","import React from \"react\";\nimport AddButton from \"../addButton/AddButton\";\nimport \"./groupHeader.css\";\n\nexport default function GroupHeader(props: {\n  title: string;\n  gamesCount: number;\n  commonGames: boolean;\n  addCustomGame: () => void;\n  canAddCustomGames: boolean;\n  className?: string;\n}) {\n  return (\n    <div className={`group-header ${props.className ?? \"\"}`}>\n      <div className=\"group-details\">\n        <h2>{props.title}</h2>\n        <div>\n          {props.gamesCount}&nbsp;{props.commonGames ? \"Common Games\" : \"Games\"}\n        </div>\n      </div>\n      {props.canAddCustomGames ? <AddButton onClick={props.addCustomGame} title=\"Add Custom Games\" /> : <></>}\n    </div>\n  );\n}\n","import React from \"react\";\nimport packageJSON from \"../../../package.json\";\nimport Button from \"../button/Button\";\n\nimport \"./friend.css\";\n\nexport default function Friend(props: { friend: Friend; sessionId: string }) {\n  const friend = props.friend;\n  const personaname = friend.personaname ?? friend.realname ?? \"\";\n  const invite = `${window.location.origin}${packageJSON.subUrl}/?sessionId=${encodeURIComponent(\n    props.sessionId\n  )}&steamId=${props.friend.steamId}#join`;\n  const copyInvite = () => {\n    navigator.clipboard.writeText(invite);\n  };\n  const openSteamChat = () => {\n    window.open(`steam://friends/message/${friend.steamId}`);\n  };\n\n  return (\n    <div className=\"friend\">\n      <div className=\"friend-info\">\n        <a href={friend.profileurl} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Steam profile\">\n          <img src={friend.avatarmedium} width=\"45\" height=\"45\" alt=\"avatar\" />\n        </a>\n        <div className=\"friend-personal\">\n          <div>{friend.personaname ?? \"\"}</div>\n          {friend.realname ? <div className=\"realname\">{friend.realname}</div> : \"\"}\n        </div>\n      </div>\n      <div className=\"buttons\">\n        <Button onClick={openSteamChat} title={`Opens the steam chat with ${personaname}, if steam is installed.`}>\n          Steam&nbsp;Chat\n        </Button>\n        <Button\n          onClick={copyInvite}\n          title={`Copies a personalized invite for ${personaname}. This allows ${personaname} to join without entering a steamId`}\n        >\n          Copy&nbsp;Invite\n        </Button>\n      </div>\n    </div>\n  );\n}\n","import React, { RefObject, useContext, useEffect, useState } from \"react\";\nimport { compareTwoStrings } from \"string-similarity\";\nimport { Socket } from \"socket.io-client\";\nimport SearchBar from \"../searchBar/SearchBar\";\nimport Loading from \"../loading/Loading\";\nimport Friend from \"../friend/Friend\";\nimport Button from \"../button/Button\";\nimport LoggerContext from \"../../Logger\";\nimport \"./friendslist.css\";\n\nexport default function FriendsList(props: {\n  socket: Socket;\n  sessionId: string;\n  steamId: string;\n  closeFriendsList: () => void;\n}) {\n  const [friends, setFriends] = useState<Friend[]>([]);\n  const [filter, setFilter] = useState<string>(\"\");\n  const [list, setList] = useState<JSX.Element[]>([]);\n  const listRef: RefObject<HTMLDivElement> = React.createRef();\n  const logger = useContext(LoggerContext);\n\n  useEffect(() => {\n    const cacheFriendsList = (friends: Friend[]) => {\n      sessionStorage.setItem(\n        \"friends\",\n        JSON.stringify({\n          friends: friends,\n          steamId: props.steamId\n        })\n      );\n    };\n\n    const loadFriendsList = () => {\n      const cached = sessionStorage.getItem(\"friends\");\n      if (typeof cached === \"string\") {\n        const parsed = JSON.parse(cached);\n        if (parsed.steamId === props.steamId) {\n          logger.log(\"Loaded cached friendsList\");\n          setFriends(parsed.friends as Friend[]);\n          return;\n        }\n      }\n      // request from server if not cached\n      logger.log(\"Requesting friendsList\");\n      props.socket.emit(\"getFriendsList\");\n    };\n\n    // set listener and request data\n    props.socket.on(\"friendsList\", (msg: any) => {\n      logger.log(\"Received friendsList:\", msg);\n      cacheFriendsList(msg as Friend[]);\n      setFriends(msg as Friend[]);\n    });\n\n    loadFriendsList();\n\n    return () => {\n      props.socket.removeAllListeners(\"friendsList\");\n    };\n  }, [props.socket, props.steamId, logger]);\n\n  // Updates Friendslist when friends are loaded or the search is used\n  useEffect(() => {\n    const addSimilarity = (friend: Friend): Friend => {\n      let similarity = compareTwoStrings(friend.personaname.toLowerCase(), filter.toLowerCase());\n      if (friend.realname) {\n        similarity += compareTwoStrings(friend.realname.toLowerCase(), filter.toLowerCase());\n        similarity /= 2;\n      }\n      return { ...friend, filterSimilarity: similarity };\n    };\n\n    const sortBySimilarity = (a: Friend, b: Friend) => {\n      if (a.filterSimilarity === undefined || b.filterSimilarity === undefined) {\n        logger.warn(\"filterSimilarity is not defined\");\n        return 0;\n      }\n      return b.filterSimilarity - a.filterSimilarity;\n    };\n\n    const mapToJSXElement = (friend: Friend) => (\n      <Friend friend={friend} key={friend.steamId} sessionId={props.sessionId} />\n    );\n\n    if (filter.length < 2) {\n      setList(friends.map(mapToJSXElement));\n    } else {\n      setList(friends.map(addSimilarity).sort(sortBySimilarity).map(mapToJSXElement));\n    }\n  }, [filter, friends, props.sessionId, logger]);\n\n  const handleSearch = (query: string) => {\n    setFilter(query);\n    if (listRef.current) {\n      listRef.current.scrollTo({ top: 0, behavior: \"smooth\" });\n    }\n  };\n\n  return (\n    <div className=\"friends\">\n      <div className=\"friendslist-header\">\n        <SearchBar className=\"friend-search\" onChange={handleSearch} placeholder=\"Search Friends\" />\n        <Button onClick={props.closeFriendsList} appearance=\"danger\">\n          &nbsp;Close&nbsp;Friends&nbsp;\n        </Button>\n      </div>\n      <div className=\"list\" ref={listRef}>\n        {friends.length === 0 ? <Loading center /> : list}\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport \"./modal.css\";\n\nexport default function Modal(props: {\n  children: JSX.Element;\n  visible: boolean;\n  setVisible: (visible: boolean) => void;\n}) {\n  /* close if esc is pressed */\n  useEffect(() => {\n    const listener = (event: any) => {\n      if (event.code === \"Escape\") {\n        event.preventDefault();\n        props.setVisible(false);\n      }\n    };\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n  }, [props]);\n\n  if (!props.visible) {\n    return <></>;\n  }\n\n  const close = () => {\n    props.setVisible(false);\n  };\n\n  return (\n    <div className=\"modal\">\n      <div className=\"blur-bg\" onClick={close}></div>\n      {props.children}\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Button from \"../button/Button\";\nimport Modal from \"../modal/Modal\";\nimport \"./confirmation.css\";\n\nexport default function Confirmation(props: {\n  text: string;\n  abortText?: string;\n  confirmText?: string;\n  visible?: boolean;\n  onAbort: () => void;\n  onConfirm: () => void;\n}) {\n  const handleModal = (visible: boolean) => {\n    if (!visible) {\n      props.onAbort();\n    }\n  };\n\n  const confirm = (event: any) => {\n    event.preventDefault();\n    props.onConfirm();\n  };\n  const abort = (event: any) => {\n    event.preventDefault();\n    props.onAbort();\n  };\n\n  /* confirm if enter is pressed */\n  useEffect(() => {\n    const listener = (event: any) => {\n      if (props.visible && (event.code === \"Enter\" || event.code === \"NumpadEnter\")) {\n        event.preventDefault();\n        props.onConfirm();\n      }\n    };\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n  }, [props]);\n\n  return (\n    <Modal visible={props.visible ?? true} setVisible={handleModal}>\n      <div className=\"confirmation\">\n        <p className=\"text\">{props.text}</p>\n        <div className=\"confirmation-footer\">\n          <Button onClick={abort}>{props.abortText ? props.abortText : \"Abort\"}</Button>\n          <Button onClick={confirm} appearance=\"danger\">\n            {props.confirmText ? props.confirmText : \"Confirm\"}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport AddButton from \"../../components/addButton/AddButton\";\nimport Button from \"../button/Button\";\nimport Container from \"../container/Container\";\nimport Game from \"../game/Game\";\nimport Modal from \"../modal/Modal\";\nimport \"./customGameInput.css\";\n\nexport default function CustomGameInput(props: {\n  visible: boolean;\n  close: () => void;\n  addGame: (game: Game) => void;\n  validateGame: (game: Game) => string;\n  addError: (error: ErrorType) => void;\n}) {\n  const [game, setGame] = useState<Game>({\n    appid: 0,\n    name: \"\",\n    img_icon_url: \"\",\n    playtime_forever: 0,\n    isCustom: true\n  });\n\n  /* confirm if enter is pressed */\n  useEffect(() => {\n    const listener = (event: any) => {\n      if (props.visible && (event.code === \"Enter\" || event.code === \"NumpadEnter\")) {\n        event.preventDefault();\n        confirm();\n      }\n    };\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props]);\n\n  const handleModal = (visible: boolean) => {\n    if (!visible) {\n      props.close();\n    }\n  };\n\n  const confirm = () => {\n    const errorMsg = props.validateGame(game);\n    if (errorMsg.length > 0) {\n      props.addError({\n        status: 400,\n        msg: errorMsg,\n        timeout: 3000\n      });\n      return;\n    }\n    props.addGame(game);\n    props.close();\n  };\n\n  const handleNameChange = (event: any) => {\n    event.preventDefault();\n    const newGame = { ...game };\n    newGame.name = event.target.value.trim();\n    setGame(newGame);\n  };\n\n  return (\n    <Modal visible={props.visible} setVisible={handleModal}>\n      <Container className=\"custom-game-input\">\n        <div className=\"custom-game-input-header\">\n          <h3 className=\"title\">Add Custom Game</h3>\n          <AddButton onClick={props.close} className=\"close-btn\" />\n        </div>\n        <p className=\"description\">\n          Custom games are added to all users in this session. This can be used to add non-Steam games, e.g. games from\n          different platforms, browser games, or other activities.\n        </p>\n        <label htmlFor=\"customGameName\">Name: &nbsp; </label>\n        <input\n          type=\"text\"\n          id=\"customGameName\"\n          onChange={handleNameChange}\n          defaultValue={game.name}\n          placeholder=\"Name for Custom Game\"\n          required\n        />\n        <h3 className=\"preview\">Preview</h3>\n        <Game game={game} />\n        <div className=\"buttons\">\n          <Button appearance=\"outline\" onClick={props.close}>\n            Abort\n          </Button>\n          <Button onClick={confirm}>Add&nbsp; Game</Button>\n        </div>\n      </Container>\n    </Modal>\n  );\n}\n","import { io } from \"socket.io-client\";\n\n/**\n * Initiates a Socket IO socket.\n *\n * @param steamId\n * @param settings\n * @param sessionId\n */\nexport function initiateSocket(steamId: string, settings: Settings, sessionId?: string) {\n  let query;\n  if (sessionId) {\n    query = { steamId: steamId, sessionId: sessionId };\n  } else {\n    query = { steamId: steamId, settings: JSON.stringify(settings) };\n  }\n  const url =\n    process.env.NODE_ENV === \"production\" ? \"https://common-steam-games.herokuapp.com/\" : \"http://localhost:3030\";\n  return io(url, {\n    query: query,\n    reconnectionAttempts: 4\n  });\n}\n\n/**\n * Preference matching function.\n * Takes users with preferences and returns ordered matches with a corresponding weight between 0 and 1.\n *\n * @param users all users, including self.\n * @param commonAppIds If empty, all games will be matched. Otherwise list of common appIds, only common games will be matched\n * @returns Array with matched games\n */\nexport function calculatePreferences(users: User[], commonAppIds: number[]): MatchedGame[] {\n  const matchedGames: Map<number, MatchedGame> = new Map();\n  const maxGames =\n    commonAppIds.length > 0\n      ? commonAppIds.length\n      : Math.max(...users.map((user) => (user.preferences ? user.preferences.length : 0)));\n\n  users.forEach((user) => {\n    if (user.preferences) {\n      const preferences =\n        commonAppIds.length > 0\n          ? user.preferences.filter((pref) => commonAppIds.includes(pref.appid))\n          : user.preferences;\n\n      preferences.forEach((game, index) => {\n        const weight = getWeight(index, maxGames - 1);\n        let matchedGame = matchedGames.get(game.appid);\n        // Check if the game already exists. Otherwise add it to matchedGames.\n        if (matchedGame) {\n          matchedGame.weight += weight / users.length;\n          matchedGame.playtime_forever += game.playtime_forever / users.length;\n          if (matchedGame.owners) {\n            matchedGame.owners.push(user);\n          }\n        } else {\n          matchedGame = {\n            appid: game.appid,\n            name: game.name,\n            img_icon_url: game.img_icon_url,\n            playtime_2weeks: game.playtime_2weeks ? game.playtime_2weeks / users.length : undefined,\n            playtime_forever: game.playtime_forever / users.length,\n            isCustom: game.isCustom,\n            weight: weight / users.length,\n            owners: [user]\n          };\n        }\n        matchedGames.set(game.appid, matchedGame);\n      });\n    }\n  });\n  const result = Array.from(matchedGames.values());\n  result.sort((a, b) => b.weight - a.weight);\n\n  return result;\n}\n\n/** Weight function for calculatePreferences */\nfunction getWeight(index: number, maxGames: number): number {\n  const weight = (maxGames - index) / maxGames;\n  return !isNaN(weight) && weight >= 0 ? weight * weight : 0;\n}\n\nexport function reorderGames(games: Game[], startIndex: number, endIndex: number) {\n  const result = Array.from(games);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n}\n\n/** Gets a list with appids for games owned by all users (incl. self) */\nexport function getCommonAppIds(users: User[]) {\n  const appOwners: { appid: number; owners: number }[] = [];\n  let maxOwners = users.length;\n  for (const user of users) {\n    if (!user.preferences) {\n      maxOwners--;\n      continue;\n    }\n    for (const game of user.preferences) {\n      const index = appOwners.findIndex((elem) => elem.appid === game.appid);\n      if (index >= 0) {\n        appOwners[index].owners++;\n      } else {\n        appOwners.push({ appid: game.appid, owners: 1 });\n      }\n    }\n  }\n  const ids = appOwners.filter((elem) => elem.owners >= maxOwners).map((elem) => elem.appid);\n  return ids;\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { DropResult } from \"react-beautiful-dnd\";\nimport { Socket } from \"socket.io-client\";\nimport { useHistory } from \"react-router\";\nimport { useMediaQuery } from \"react-responsive\";\nimport Collapsible from \"../../components/collapsible/Collapsible\";\nimport GamesList from \"../../components/gamesList/GamesList\";\nimport Invite from \"../../components/invite/Invite\";\nimport Loading from \"../../components/loading/Loading\";\nimport UserHeader from \"../../components/userHeader/UserHeader\";\nimport GroupHeader from \"../../components/groupHeader/GroupHeader\";\nimport FriendsList from \"../../components/friendsList/FriendsList\";\nimport Settings from \"../../components/settings/Settings\";\nimport Container from \"../../components/container/Container\";\nimport Confirmation from \"../../components/confirmation/Confirmation\";\nimport Modal from \"../../components/modal/Modal\";\nimport CustomGameInput from \"../../components/customGameInput/CustomGameInput\";\nimport Button from \"../../components/button/Button\";\nimport AddButton from \"../../components/addButton/AddButton\";\nimport { calculatePreferences, getCommonAppIds, initiateSocket, reorderGames } from \"./util\";\nimport LoggerContext from \"../../Logger\";\nimport \"./matching.css\";\n\nfunction Matching(props: {\n  steamId: string;\n  sessionId?: string;\n  settings: Settings;\n  setSettings: (settings: Settings) => void;\n  addError: (error: ErrorType) => void;\n}) {\n  const [users, setUsers] = useState<User[]>([]);\n  const [self, setSelf] = useState<User>({ steamId: props.steamId });\n  const [initiatorId, setInitiatorId] = useState<string>(props.sessionId ? \"\" : props.steamId);\n  const [matchedGames, setMatchedGames] = useState<MatchedGame[]>([]);\n  const [customGames, setCustomGames] = useState<Game[]>([]);\n  const [sessionId, setSessionId] = useState<string>(\"\");\n  const [preferencesChanged, setPreferencesChanged] = useState(false);\n  const [socket, setSocket] = useState<Socket | undefined>(undefined);\n  const [showFriendslist, setShowFriendslist] = useState<boolean>(false);\n  const [showLeaveModal, setShowLeaveModal] = useState<boolean>(false);\n  const [showCustomGameInput, setShowCustomGameInput] = useState<boolean>(false);\n  const [showSettingsModal, setShowSettingsModal] = useState<boolean>(false);\n  const [commonAppIds, setCommonAppIds] = useState<number[]>([]);\n  const [gameSearch, setGameSearch] = useState(\"\");\n  const logger = useContext(LoggerContext);\n  const history = useHistory();\n  const showFullName = useMediaQuery({ query: \"(min-width: 370px)\" });\n\n  /** updates settings (state) and sends updateSettings event to backend */\n  const updateSettings = (settings: Settings) => {\n    if (socket) {\n      logger.log(\"Sending settings\");\n      socket.emit(\"updateSettings\", settings);\n    }\n    props.setSettings(settings);\n  };\n\n  useEffect(() => {\n    setCommonAppIds(getCommonAppIds(users.concat(self)));\n  }, [users, self]);\n\n  useEffect(() => {\n    const handleSession = (msg: any) => {\n      if (!msg) {\n        logger.error(\"handleSession received undefined msg:\", msg);\n        return;\n      }\n\n      if (users.length > 0) {\n        logger.warn(\"Received session but already is part of a session\");\n        return;\n      }\n\n      // Logging\n      const session = msg as Session;\n      logger.group(\"Received session\");\n      for (const [key, value] of Object.entries(session)) {\n        logger.log(`${key}:`, value);\n      }\n      logger.groupEnd();\n\n      // Separate self and other users\n      const ownSteamId = session.you ?? self.steamId;\n      const newUsers = session.users.filter((user) => user.steamId !== ownSteamId);\n      const newSelf = session.users.find((user) => user.steamId === ownSteamId);\n      if (!newSelf) {\n        props.addError({ status: 400, msg: \"Failed to connect to session. Did not find self.\" });\n        if (socket) socket.disconnect();\n        history.replace(\"/create\");\n        return;\n      }\n\n      sessionStorage.setItem(\"sessionId\", session.sessionId);\n      setSessionId(session.sessionId);\n      setSelf(newSelf);\n      setUsers(newUsers);\n      setInitiatorId(session.initiatorId);\n      if (session.customGames && session.customGames.length > 0) {\n        setCustomGames(session.customGames);\n      }\n      if (session.settings) {\n        props.setSettings(session.settings);\n      }\n    };\n\n    const handleUserJoined = (msg: any) => {\n      const newUsers = [...users];\n      newUsers.push(msg as User);\n\n      logger.group(\"New user joined the session:\");\n      logger.log(\"New user:\", msg);\n      logger.log(\"All users:\", newUsers);\n      logger.groupEnd();\n\n      setUsers(newUsers);\n    };\n\n    const handleAddCustomGame = (msg: any) => {\n      logger.log(\"Received customGame:\", msg);\n\n      const game = msg as Game;\n      setCustomGames([...customGames, game]);\n\n      // Add custom game to own games\n      const newSelf = { ...self };\n      if (newSelf.preferences) {\n        newSelf.preferences.unshift(game);\n      } else {\n        newSelf.preferences = [game];\n      }\n      setSelf(newSelf);\n\n      // Add custom game to peers games\n      const newUsers = [...users];\n      for (const user of newUsers) {\n        if (user.preferences) {\n          user.preferences.unshift(game);\n        } else {\n          user.preferences = [game];\n        }\n      }\n      setUsers(newUsers);\n    };\n\n    const handleUserDisconnect = (msg: any) => {\n      const newUsers = users.filter((user) => user.steamId !== (msg as string));\n\n      logger.group(\"User disconnected:\");\n      logger.log(\"User steamId:\", msg);\n      logger.log(\"Remaining users:\", newUsers);\n      logger.groupEnd();\n\n      setUsers(newUsers);\n    };\n\n    const handleUpdateSettings = (msg: any) => {\n      logger.log(\"Received settings:\", msg);\n      props.setSettings(msg as Settings);\n    };\n\n    const handleUpdatePreferences = (msg: any) => {\n      logger.group(\"Received updated preferences\");\n\n      const data = msg as PreferencesUpdate;\n      const newUsers = [...users];\n      const changedUserIndex = newUsers.findIndex((user) => user.steamId === data.steamId);\n      if (changedUserIndex !== -1) {\n        logger.log(`Updating preferences for ${newUsers[changedUserIndex].personaname} (${data.steamId})`);\n        newUsers[changedUserIndex].preferences = data.preferences;\n        setUsers(newUsers);\n      } else {\n        logger.log(`Tried to update preferences for ${data.steamId} but did not find user`);\n        logger.log(\"Original message:\", msg);\n      }\n\n      logger.groupEnd();\n    };\n\n    const handleError = (error: any) => {\n      const err = error as ErrorType;\n      err.timeout = 15000;\n      props.addError(err);\n      if (err.status === 550) {\n        setShowFriendslist(false);\n        return;\n      }\n      if (socket) socket.disconnect();\n      history.replace(\"/create\");\n    };\n\n    if (socket) {\n      socket.removeAllListeners(\"error\");\n      socket.removeAllListeners(\"session\");\n      socket.removeAllListeners(\"userJoined\");\n      socket.removeAllListeners(\"addCustomGame\");\n      socket.removeAllListeners(\"userDisconnect\");\n      socket.removeAllListeners(\"updateSettings\");\n      socket.removeAllListeners(\"updatePreferences\");\n\n      socket.on(\"error\", handleError);\n      socket.on(\"session\", handleSession);\n      socket.on(\"userJoined\", handleUserJoined);\n      socket.on(\"addCustomGame\", handleAddCustomGame);\n      socket.on(\"userDisconnect\", handleUserDisconnect);\n      socket.on(\"updateSettings\", handleUpdateSettings);\n      socket.on(\"updatePreferences\", handleUpdatePreferences);\n    }\n  }, [self, users, socket, props, history, logger, customGames]);\n\n  useEffect(() => {\n    const socket = initiateSocket(props.steamId, props.settings, props.sessionId);\n    setSocket(socket);\n\n    socket.io.on(\"reconnect_failed\", () => {\n      logger.log(\"Failed to reconnect\");\n      props.addError({ status: 500, msg: \"Lost connection to server\", timeout: 15000 });\n      history.push(\"/create\");\n    });\n    socket.io.on(\"reconnect_attempt\", (attempt) => {\n      const msg = `Lost connection to server, attempting to reconnect. Attempt (${attempt}/${socket.io.reconnectionAttempts()})`;\n      logger.log(msg);\n      props.addError({ status: 500, msg: msg, timeout: 6000 });\n    });\n\n    return () => {\n      logger.log(\"#### disconnecting ###\");\n      if (socket) socket.disconnect();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.sessionId, props.steamId]);\n\n  // Update group preferences\n  useEffect(() => {\n    logger.log(\"calculatePreferences\");\n    const appIds = props.settings.onlyCommonGames ? commonAppIds : [];\n    setMatchedGames(calculatePreferences(users.concat(self), appIds));\n  }, [users, self, props.settings.onlyCommonGames, commonAppIds, logger]);\n\n  // Send preferences to backend when changed\n  useEffect(() => {\n    if (!preferencesChanged || !self.preferences) return;\n    if (!socket) {\n      logger.error(\"Cant send preferences, Socket is not defined\");\n      return;\n    }\n    logger.log(\"Sending preferences\");\n    socket.emit(\"updatePreferences\", self.preferences);\n    setPreferencesChanged(false);\n  }, [self.preferences, preferencesChanged, logger, socket]);\n\n  /**\n   * Handles changes in the drag and drop games list\n   */\n  const onDragEnd = (result: DropResult): void => {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n    const newSelf: User = { ...self } as User;\n    newSelf.preferences = reorderGames((self as User).preferences ?? [], result.source.index, result.destination.index);\n    if (gameSearch.length > 0) {\n      // Reset game search to avoid unwanted scrolling after changing preferences.\n      // Does not update value in UserHeader so the user can build upon the old search query.\n      setGameSearch(\"\");\n    }\n    setSelf(newSelf);\n    setPreferencesChanged(true);\n  };\n\n  /**\n   * Reorders own games either by total playtime or recent (last two weeks) playtime.\n   */\n  const sortPreferences = (sortBy: \"total\" | \"recent\") => {\n    // select the correct sort function dependant on the sortBy argument\n    let sortFunc: (a: Game, b: Game) => number;\n    if (sortBy === \"total\") {\n      sortFunc = (a: Game, b: Game) => {\n        if (a.isCustom === b.isCustom) {\n          return b.playtime_forever - a.playtime_forever;\n        }\n        return a.isCustom ? -1 : 1;\n      };\n    } else {\n      sortFunc = (a: Game, b: Game) => {\n        if (a.isCustom === b.isCustom) {\n          const aPlaytime = a.playtime_2weeks ?? 0;\n          const bPlaytime = b.playtime_2weeks ?? 0;\n          if (aPlaytime === bPlaytime) {\n            // Fallback if playtime in the last two weeks is equal\n            return b.playtime_forever - a.playtime_forever;\n          }\n          return bPlaytime - aPlaytime;\n        } else {\n          return a.isCustom ? -1 : 1;\n        }\n      };\n    }\n    // Sort preferences using sortFunc\n    const newSelf: User = { ...self };\n    if (newSelf.preferences) {\n      newSelf.preferences = newSelf.preferences.sort(sortFunc);\n      setSelf(newSelf);\n      setPreferencesChanged(true);\n    }\n  };\n\n  /**\n   * Validates a custom game\n   * @returns empty string if custom game is valid, otherwise string with an error message\n   */\n  const validateCustomGame = (game: Game) => {\n    if (game.name.length === 0) {\n      return \"Please enter a name for the custom game.\";\n    }\n    const existingGameNames = customGames.map((existingGame) => existingGame.name);\n    if (existingGameNames.includes(game.name)) {\n      return \"Custom game names must be unique.\";\n    }\n    return \"\";\n  };\n\n  /**\n   * Sends a custom game to backend.\n   * The game will be added to the other games after being validated in the backend and receiving an unique id. \n   */\n  const addCustomGame = (game: Game) => {\n    if (socket) {\n      logger.log(\"Adding Custom Game\", game);\n      socket.emit(\"addCustomGame\", game);\n    }\n  };\n\n  // loading\n  if (!self.preferences) {\n    return <Loading className=\"v-centered\" center />;\n  }\n\n  return (\n    <>\n      <Modal visible={showFriendslist && typeof socket !== \"undefined\"} setVisible={setShowFriendslist}>\n        <FriendsList\n          socket={socket!} // eslint-disable-line @typescript-eslint/no-non-null-assertion\n          sessionId={sessionId}\n          closeFriendsList={() => setShowFriendslist(false)}\n          steamId={self.steamId}\n        />\n      </Modal>\n      <Modal visible={showSettingsModal} setVisible={setShowSettingsModal}>\n        <Container className=\"settings-modal\">\n          <div className=\"settings-header\">\n            <h2>Settings</h2>\n            <AddButton onClick={() => setShowSettingsModal(false)} className=\"close-btn\" />\n          </div>\n          <Settings settings={props.settings} setSettings={updateSettings} isHost={initiatorId === self.steamId} />\n        </Container>\n      </Modal>\n      <CustomGameInput\n        visible={showCustomGameInput}\n        close={() => setShowCustomGameInput(false)}\n        addGame={addCustomGame}\n        validateGame={validateCustomGame}\n        addError={props.addError}\n      />\n      <Confirmation\n        visible={showLeaveModal}\n        onAbort={() => setShowLeaveModal(false)}\n        onConfirm={() => history.push(\"/create\")}\n        text=\"Do you really want to leave this session?\"\n        confirmText=\"Leave Session\"\n      />\n      <header className=\"header\">\n        <h1 className=\"title\" onClick={() => setShowLeaveModal(true)}>\n          {showFullName ? \"Common Steam Games\" : \"C.S.G.\"}\n        </h1>\n        <Button onClick={() => setShowSettingsModal(true)} className=\"show-settings-btn\">\n          Settings\n        </Button>\n      </header>\n      <Container\n        titles={[\"Your Preferences\", \"Group Preferences\", \"Peers Preferences\"]}\n        minTitles={[\"You\", \"Group\", \"Peers\"]}\n      >\n        <GamesList\n          games={self.preferences ?? []}\n          onlyCommonGames={props.settings.onlyCommonGames}\n          commonAppIds={commonAppIds}\n          onDragEnd={onDragEnd}\n          droppableId={`${self.personaname}'s Preferences`}\n          gameSearch={gameSearch}\n          header={\n            <UserHeader\n              title=\"Your Preferences\"\n              user={self}\n              onSearch={setGameSearch}\n              onSortByTotal={() => sortPreferences(\"total\")}\n              onSortByLastTwoWeeks={() => sortPreferences(\"recent\")}\n            />\n          }\n        />\n        <GamesList\n          games={matchedGames}\n          onlyCommonGames={props.settings.onlyCommonGames}\n          commonAppIds={commonAppIds}\n          header={\n            <GroupHeader\n              title=\"Group Preferences\"\n              gamesCount={matchedGames.length}\n              commonGames={props.settings.onlyCommonGames}\n              addCustomGame={() => setShowCustomGameInput(true)}\n              canAddCustomGames={initiatorId === self.steamId || props.settings.allCanAddCustomGames}\n            />\n          }\n        />\n        <div className=\"peers\">\n          <Invite\n            sessionId={sessionId}\n            className={users.length > 0 ? \"no-br-bottom\" : \"\"}\n            openFriendsList={() => setShowFriendslist(true)}\n          />\n          {users.map((user, index) => (\n            <Collapsible\n              header={<UserHeader title={`${user.personaname}'s preferences`} user={user} className=\"no-br no-bg\" />}\n              key={`${index}-${user.steamId}`}\n              title={`Show ${user.personaname ?? user.realname}'s' preferences`}\n            >\n              <GamesList\n                games={user.preferences ?? []}\n                onlyCommonGames={props.settings.onlyCommonGames}\n                commonAppIds={commonAppIds}\n                key={index}\n                className=\"no-br-top\"\n              />\n            </Collapsible>\n          ))}\n        </div>\n      </Container>\n    </>\n  );\n}\n\nexport default Matching;\n","import React, { useEffect } from \"react\";\nimport \"./error.css\";\n\nexport default function Error(props: { error: ErrorType; removeError: () => void }) {\n  useEffect(() => {\n    const timeout = props.error.timeout;\n    let timer: NodeJS.Timeout | undefined;\n    if (timeout) {\n      timer = setTimeout(() => {\n        props.removeError();\n      }, timeout);\n    }\n    return () => {\n      if (timer) clearTimeout(timer);\n    };\n  }, [props]);\n\n  return (\n    <div className=\"error-popup\">\n      {props.error.msg}\n      <div className=\"error-close\" onClick={props.removeError}></div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Error from \"../error/Error\";\nimport \"./errorList.css\";\n\nexport default function ErrorList(props: { errors: ErrorType[]; setErrors: (err: ErrorType[]) => void }) {\n  const getRemoveErrorFnc = (error: ErrorType) => {\n    return () => props.setErrors(props.errors.filter((err) => err !== error));\n  };\n\n  return (\n    <div className=\"error-popup-list\">\n      <div>\n        {props.errors.map((error, index) => (\n          <Error removeError={getRemoveErrorFnc(error)} error={error} key={index} />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Button from \"../../components/button/Button\";\nimport Container from \"../../components/container/Container\";\nimport \"./about.css\";\n\nexport default function About() {\n  const history = useHistory();\n\n  return (\n    <Container className=\"about\">\n      <Link to=\"/create\" className=\"title\">\n        <h1>About Common Steam Games</h1>\n      </Link>\n      <h2>What Is Common Steam Games?</h2>\n      <p>\n        Common Steam Games is a web application that enables groups of users to discover common games regarding their\n        steam accounts and vote on games to find common preferences. It is build using Typescript, React, and Socket.IO.\n      </p>\n      <h2>Use Case</h2>\n      <p>\n        Ever played with a group of friends and could not decide on what to play? Then Common Steam Games is for you!\n      </p>\n      <p>\n        Create a session, invite your friends and instantly see your common games. Sort your preferences using easy to\n        use drag n drop and see the group preferences adopt. Find old classics or games you did not know all of you had\n        in common.\n      </p>\n      <h2>Requirements</h2>\n      <p>\n        To allow Common Steam Games to access your steam games, your steam profile and game details must be set to\n        public.\n        <br />\n        Optionally: set friends list public to access it in this app.\n      </p>\n      <p>\n        If any of the above settings are not correct, you will receive an error. You can change your settings under:{\" \"}\n        <em>your profile</em> &gt; edit profile &gt; privacy settings.\n      </p>\n      <h2>Features</h2>\n      <ul>\n        <li>Live sessions with your peers</li>\n        <li>Preference matching</li>\n        <li>Games search &amp; drag n drop</li>\n        <li>Steam games &amp; friendslist integration</li>\n        <li>Custom games for your favorite common, non-steam games</li>\n        <li>\n          <em>...</em>\n        </li>\n      </ul>\n      <h2>Contact</h2>\n      <p>\n        For suggestions, bug reports or other project related topics, feel free to create an issue on{\" \"}\n        <a href=\"https://github.com/aliebald/common-steam-games/issues\">GitHub</a>.\n        <br />\n        Otherwise, for general feedback or other inquiries, please contact me via mail: contact.liebald (at) gmail.com.\n      </p>\n      <div className=\"about-nav\">\n        <Button onClick={history.goBack}>Go&nbsp;Back</Button>\n        <Button onClick={() => history.push(\"create\")}>Create&nbsp;new&nbsp;Session</Button>\n        <Button onClick={() => history.push(\"join\")}>Join&nbsp;Session</Button>\n      </div>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport { HashRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport CreateSession from \"./pages/createSession/CreateSession\";\nimport Footer from \"./components/footer/Footer\";\nimport JoinSession from \"./pages/joinSession/JoinSession\";\nimport UnknownPage from \"./pages/unknownPage/UnknownPage\";\nimport Matching from \"./pages/matching/Matching\";\nimport ErrorList from \"./components/errorList/ErrorList\";\nimport About from \"./pages/about/About\";\n// import packageJSON from \"../package.json\"\nimport { Logger, LoggerProvider } from \"./Logger\";\nimport \"./styles/app.css\";\n\nexport default function App(this: any) {\n  const [steamId, setSteamId] = useState<string | undefined>(getSteamId());\n  const [joinSessionId, setJoinSessionId] = useState<string | undefined>(getSessionId());\n  const [errors, setErrors] = useState<ErrorType[]>([]);\n  const [settings, setSettings] = useState<Settings>({\n    onlyCommonGames: false,\n    allCanAddCustomGames: true,\n    defaultSort: \"total\"\n  });\n  const logger = new Logger();\n\n  const addError = (error: ErrorType) => {\n    setErrors(errors.concat(error));\n  };\n\n  const createNewSession = (steamId: string) => {\n    localStorage.setItem(\"steamId\", steamId);\n    sessionStorage.removeItem(\"sessionId\");\n\n    setSteamId(steamId);\n    setJoinSessionId(undefined);\n  };\n\n  const joinSession = (steamId: string, sessionId: string) => {\n    localStorage.setItem(\"steamId\", steamId);\n    sessionStorage.setItem(\"sessionId\", sessionId);\n\n    setSteamId(steamId);\n    setJoinSessionId(sessionId);\n  };\n\n  return (\n    <LoggerProvider value={logger}>\n      <ErrorList errors={errors} setErrors={setErrors} />\n      <Router>\n        {/*basename={packageJSON.subUrl}*/}\n        <Switch>\n          <Route path=\"/matching\" exact>\n            {!steamId ? (\n              <Redirect to=\"/\" />\n            ) : (\n              <Matching\n                steamId={steamId}\n                sessionId={joinSessionId}\n                addError={addError}\n                settings={settings}\n                setSettings={setSettings}\n              />\n            )}\n          </Route>\n          <Route path=\"/join\" exact>\n            {canAutoJoin() ? (\n              <Redirect to=\"/matching\" push />\n            ) : (\n              <JoinSession onSubmit={joinSession} sessionId={joinSessionId} steamId={steamId} />\n            )}\n          </Route>\n          <Route path=\"/create\" exact>\n            <CreateSession\n              onSubmit={createNewSession}\n              steamId={steamId}\n              settings={settings}\n              setSettings={setSettings}\n            />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/create\" />\n          </Route>\n          <Route path=\"/\">\n            <UnknownPage />\n          </Route>\n        </Switch>\n        <Footer />\n      </Router>\n      <div className=\"background\" />\n    </LoggerProvider>\n  );\n}\n\n/**\n * Checks if a session id was passed in the url or is cached in the sessionStorage\n * @returns sessionId (string) or undefined\n */\nfunction getSessionId(): string | undefined {\n  const urlParams = new URLSearchParams(window.location.search);\n  const encodedSessionId = urlParams.get(\"sessionId\");\n  if (encodedSessionId) {\n    const sessionId = decodeURIComponent(encodedSessionId);\n    sessionStorage.setItem(\"sessionId\", sessionId);\n    return sessionId;\n  }\n  const cachedSessionId = sessionStorage.getItem(\"sessionId\");\n  if (cachedSessionId) {\n    return cachedSessionId;\n  }\n  return undefined;\n}\n\n/**\n * Checks if a steam id was passed in the url or is cached in the sessionStorage\n * @returns steamId (string) or undefined\n */\nfunction getSteamId(): string | undefined {\n  const urlParams = new URLSearchParams(window.location.search);\n  const encodedSteamId = urlParams.get(\"steamId\");\n  if (encodedSteamId) {\n    const steamId = decodeURIComponent(encodedSteamId);\n    localStorage.setItem(\"steamId\", steamId);\n    return steamId;\n  }\n  const cachedSteamId = localStorage.getItem(\"steamId\");\n  if (cachedSteamId) {\n    return cachedSteamId;\n  }\n  return undefined;\n}\n\nconst canAutoJoin = () => {\n  const urlParams = new URLSearchParams(window.location.search);\n  return urlParams.has(\"steamId\") && urlParams.has(\"sessionId\");\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}