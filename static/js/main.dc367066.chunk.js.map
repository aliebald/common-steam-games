{"version":3,"sources":["components/collapsible/Collapsible.tsx","components/aboutTeaser/AboutTeaser.tsx","components/button/Button.tsx","components/tabs/Tabs.tsx","components/container/Container.tsx","components/buttonGroup/ButtonGroup.tsx","components/settings/Settings.tsx","pages/createSession/CreateSession.tsx","components/footer/Footer.tsx","security/mail.js","pages/joinSession/JoinSession.tsx","pages/unknownPage/UnknownPage.tsx","components/tooltip/Tooltip.tsx","components/userCard/UserCard.tsx","components/game/Game.tsx","components/draggableGame/DraggableGame.tsx","components/gamesList/GamesList.tsx","components/invite/Invite.tsx","components/loading/Loading.tsx","components/searchBar/SearchBar.tsx","components/userHeader/UserHeader.tsx","components/addButton/AddButton.tsx","components/groupHeader/GroupHeader.tsx","components/friend/Friend.tsx","components/friendsList/FriendsList.tsx","components/modal/Modal.tsx","components/confirmation/Confirmation.tsx","components/customGameInput/CustomGameInput.tsx","pages/matching/util.ts","pages/matching/Matching.tsx","components/error/Error.tsx","components/errorList/ErrorList.tsx","pages/about/About.tsx","App.tsx","index.tsx"],"names":["Collapsible","props","useState","collapsed","setCollapsed","hideContent","setHideContent","undefined","lastTimeout","setLastTimeout","type","className","btnClassName","onClick","clearTimeout","timeout","setTimeout","title","header","children","AboutTeaser","to","Button","appearance","disabled","Tabs","activeChild","setActiveChild","titles","map","index","Container","minTitles","MatchingContainer","isDesktop","useMediaQuery","query","ButtonGroup","getClass","options","length","option","activeIndex","setActive","Settings","name","settings","onlyCommonGames","newValue","setSettings","allCanAddCustomGames","isHost","defaultSort","handleSortInput","CreateSession","steamId","setSteamId","history","useHistory","handleSubmit","event","a","preventDefault","onSubmit","push","htmlFor","id","onChange","target","value","defaultValue","placeholder","required","Footer","href","rel","encrypted","decrypted","i","charCodeAt","String","fromCharCode","charAt","window","open","toMail","src","packageJSON","subUrl","alt","height","width","JoinSession","sessionId","setSessionId","UnknownPage","Tooltip","show","setShow","onMouseEnter","onMouseLeave","position","tooltip","UserCard","user","profileurl","avatarmedium","personaname","realname","Game","playtimeText","icon","playtime","Math","round","game","playtime_forever","Number","EPSILON","playtime2weeks","playtime_2weeks","isMatchedGame","isCustom","weightPercentage","weight","num","toFixed","parseFloat","convertWeightToPercentage","appid","hash","hasImage","img_icon_url","loading","char","optionalAProps","isDnD","tabIndex","storePageLink","getStorePage","style","textDecoration","showOwners","Owners","owners","gameTitle","DnDHighlight","owner","avatar","DraggableGame","draggableId","provided","ref","innerRef","draggableProps","dragHandleProps","hide","areEqual","prevProps","nextProps","memo","GamesList","dndListRef","createRef","useEffect","gameSearch","current","pos","depth","scrollHeight","getDepthForGame","search","match","similarity","games","forEach","commonAppIds","includes","compareTwoStrings","toLowerCase","console","log","searchGamePosition","scrollTo","top","behavior","droppableId","onDragEnd","droppableProps","filter","InnerList","React","highlightDnd","setHighlightDnd","timeoutStart","timeoutEnd","list","Invite","invite","location","origin","encodeURIComponent","readOnly","onFocus","select","navigator","clipboard","writeText","openFriendsList","Loading","centerInner","center","content","SearchBar","UserHeader","showSubheader","onSearch","onSortByTotal","onSortByLastTwoWeeks","subheader","preferences","AddButton","GroupHeader","gamesCount","commonGames","canAddCustomGames","addCustomGame","Friend","friend","FriendsList","friends","setFriends","setFilter","setList","listRef","socket","on","msg","sessionStorage","setItem","JSON","stringify","cacheFriendsList","cached","getItem","parsed","parse","emit","loadFriendsList","removeAllListeners","mapToJSXElement","filterSimilarity","sort","b","warn","closeFriendsList","Modal","listener","code","setVisible","document","addEventListener","removeEventListener","visible","Confirmation","onConfirm","onAbort","text","abortText","confirmText","CustomGameInput","setGame","confirm","addGame","close","addError","status","newGame","trim","calculatePreferences","users","matchedGames","Map","maxGames","max","pref","matchedGame","isNaN","getWeight","has","get","set","result","Array","from","values","Matching","setUsers","self","setSelf","initiatorId","setInitiatorId","setMatchedGames","preferencesChanged","setPreferencesChanged","setSocket","showFriendslist","setShowFriendslist","showLeaveModal","setShowLeaveModal","showCustomGameInput","setShowCustomGameInput","showSettingsModal","setShowSettingsModal","setCommonAppIds","setGameSearch","showFullName","appOwners","maxOwners","findIndex","elem","getCommonAppIds","concat","error","err","disconnect","replace","session","ownSteamId","you","newUsers","newSelf","find","unshift","data","changedUserIndex","io","reconnectionAttempts","initiateSocket","attempt","appIds","sortPreferences","sortBy","sortFunc","aPlaytime","bPlaytime","destination","startIndex","endIndex","splice","removed","reorderGames","source","Error","timer","removeError","ErrorList","getRemoveErrorFnc","setErrors","errors","About","goBack","App","encodedSteamId","URLSearchParams","decodeURIComponent","cachedSteamId","getSteamId","encodedSessionId","cachedSessionId","getSessionId","joinSessionId","setJoinSessionId","path","exact","canAutoJoin","removeItem","urlParams","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dc367066.chunk.js","sourcesContent":["import React, { useState } from \"react\"\r\nimport \"./collapsible.css\"\r\n\r\nexport default function Collapsible(props: {\r\n  header?: string | JSX.Element,\r\n  title?: string,\r\n  btnClassName?: string,\r\n  children: JSX.Element\r\n}) {\r\n  const [collapsed, setCollapsed] = useState(true);\r\n  const [hideContent, setHideContent] = useState(true);\r\n  const [lastTimeout, setLastTimeout] = useState<NodeJS.Timeout | undefined>(undefined);\r\n\r\n  /* This component uses css transition to animate opening and closing.\r\n   * To remove the content after closing, we need to wait until the transition is finished.\r\n   * This is handled by \"toggle\"\r\n   */\r\n  const toggle = () => {\r\n    // Abort last timeout to avoid setting hideContent true,\r\n    // if the content was collapsed and opened again immediately \r\n    if (lastTimeout) {\r\n      clearTimeout(lastTimeout);\r\n      setLastTimeout(undefined);\r\n    }\r\n\r\n    // Toggle collapsed state. Hide content after animation delay\r\n    if (collapsed) {\r\n      setHideContent(false);\r\n    } else {\r\n      const timeout = setTimeout(() => setHideContent(true), 500);\r\n      setLastTimeout(timeout);\r\n    }\r\n    setCollapsed(!collapsed);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <button type=\"button\"\r\n        className={`collapsible${hideContent ? \" collapsed\" : \"\"} ${props.btnClassName}`}\r\n        onClick={toggle}\r\n        title={props.title}\r\n      >\r\n        {props.header ?? \"Open\"}\r\n        <div className={collapsed ? \"arrow-down\" : \"arrow-up\"}>\r\n          <div className=\"arrow-l\"></div>\r\n          <div className=\"arrow-r\"></div>\r\n        </div>\r\n      </button>\r\n      <div className={`content ${collapsed ? \"content-collapsed\" : \"\"}`}>\r\n        {hideContent ? <></> : props.children}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport Collapsible from \"../collapsible/Collapsible\"\nimport \"./aboutTeaser.css\"\n\nexport default function AboutTeaser() {\n  return (\n    <div className=\"about-teaser\">\n      <Collapsible\n        btnClassName=\"about-teaser-header\"\n        header={<h2>About</h2>}\n      >\n        <div className=\"about-teaser-content\">\n          <h3>What Is Common Steam Games?</h3>\n          <p>\n            Common Steam Games is a web application that enables groups of users\n            to discover common games regarding their steam accounts and vote on\n            games to find common preferences.\n          </p>\n          <p>\n            <Link to=\"about\">Read more</Link>\n          </p>\n        </div>\n      </Collapsible>\n    </div>\n  )\n}\n","import React from \"react\"\r\nimport \"./button.css\"\r\n\r\nexport default function Button(props: {\r\n  className?: string,\r\n  onClick?: React.MouseEventHandler<HTMLButtonElement>,\r\n  appearance?: \"danger\" | \"confirm\",\r\n  title?: string,\r\n  type?: \"button\" | \"submit\" | \"reset\",\r\n  children?: JSX.Element | string,\r\n  disabled?: boolean\r\n}) {\r\n  return (\r\n    <button\r\n      className={`btn ${props.appearance ?? \"\"} ${props.className ?? \"\"}`}\r\n      onClick={props.onClick}\r\n      title={props.title}\r\n      type={props.type}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children ?? \"\"}\r\n    </button>\r\n  )\r\n}\r\n","import React, { useState } from \"react\"\nimport Button from \"../button/Button\";\nimport \"./tabs.css\"\n\nexport default function Tabs(props: {\n  children: JSX.Element[],\n  titles: string[],\n  className?: string\n}) {\n  const [activeChild, setActiveChild] = useState(0);\n\n  return (\n    <div className={props.className}>\n      <ul className=\"tabs\">\n        {props.titles.map((title, index) => (\n          <li key={index}\n            className={`tabs-item ${activeChild === index ? \" active\" : \"\"}`}\n          >\n            <Button onClick={() => setActiveChild(index)}>\n              {title}\n            </Button>\n          </li>\n        ))}\n      </ul>\n      {props.children[activeChild]}\n    </div >\n  )\n}\n","import React from \"react\"\r\nimport { useMediaQuery } from \"react-responsive\"\r\nimport Tabs from \"../tabs/Tabs\";\r\nimport \"./container.css\"\r\n\r\nexport default function Container(props: {\r\n  children: JSX.Element[] | JSX.Element,\r\n  className?: string,\r\n  titles?: string[],\r\n  minTitles?: string[]\r\n}) {\r\n  // Container for Matching page\r\n  if (props.titles && props.minTitles) {\r\n    return (\r\n      <MatchingContainer\r\n        children={props.children as JSX.Element[]}\r\n        titles={props.titles}\r\n        minTitles={props.minTitles}\r\n      />\r\n    )\r\n  }\r\n\r\n  // Simple - single column - container\r\n  return (\r\n    <div className=\"container-single\">\r\n      <div className={`container-single-inner ${props.className ?? \"\"}`}>\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction MatchingContainer(props: {\r\n  children: JSX.Element[],\r\n  className?: string,\r\n  titles: string[],\r\n  minTitles: string[]\r\n}) {\r\n  const isDesktop = useMediaQuery({ query: '(min-width: 1100px)' });\r\n  const showMinTitles = useMediaQuery({ query: '(max-width: 450px)' });\r\n  const titles = showMinTitles ? props.minTitles : props.titles;\r\n\r\n  // Desktop version with 3 tabs used by Matching\r\n  if (isDesktop) {\r\n    return (\r\n      <div className={`container ${props.className ?? \"\"}`}>\r\n        {props.children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Mobile version\r\n  return (\r\n    <Tabs titles={titles} className={`container-tabs ${props.className ?? \"\"}`}>\r\n      {props.children}\r\n    </Tabs>\r\n  );\r\n}\r\n","import React from \"react\"\nimport Button from \"../button/Button\"\nimport \"./buttonGroup.css\"\n\nexport default function ButtonGroup(props: {\n  name: string,\n  options: string[],\n  activeIndex: number,\n  setActive: (index: number) => void,\n  disabled?: boolean\n}) {\n  const getClass = (index: number) => {\n    if (props.options.length === 1) {\n      return \"btn-group-btn\";\n    }\n    if (index === props.options.length - 1) {\n      return \"btn-group-btn no-br-left\";\n    }\n    if (index === 0) {\n      return \"btn-group-btn no-br-right\";\n    }\n    return \"btn-group-btn no-br\"\n  }\n\n  return (\n    <div className=\"btn-group\">\n      {props.options.map((option, index) => (\n        <Button\n          key={index}\n          type=\"button\"\n          className={getClass(index)}\n          appearance={index === props.activeIndex ? \"confirm\" : undefined}\n          onClick={() => props.setActive(index)}\n          disabled={props.disabled}\n        >\n          {option}\n        </Button>\n      ))}\n    </div>\n  )\n}\n","import React from \"react\"\nimport ButtonGroup from \"../buttonGroup/ButtonGroup\";\nimport \"./settings.css\"\n\nexport default function Settings(props: {\n  className?: string,\n  isHost: boolean,\n  settings: Settings,\n  setSettings: (settings: Settings) => void\n}) {\n  function handleOnlyCommonGamesInput(index: number) {\n    const newValue = index === 1;\n    // Only update settings if value has changed\n    if (props.settings.onlyCommonGames !== newValue) {\n      const settings = { ...props.settings };\n      settings.onlyCommonGames = newValue;\n      props.setSettings(settings);\n    }\n  }\n\n  function handleAllCanAddCustomGamesInput(index: number) {\n    const newValue = index === 0;\n    // Only update settings if value has changed\n    if (props.settings.allCanAddCustomGames !== newValue) {\n      const settings = { ...props.settings };\n      settings.allCanAddCustomGames = newValue;\n      props.setSettings(settings);\n    }\n  }\n\n  function handleSortInput(index: number) {\n    const newValue = index === 0 ? \"total\" : \"last2Weeks\";\n    // Only update settings if value has changed\n    if (props.settings.defaultSort !== newValue) {\n      const settings = { ...props.settings };\n      settings.defaultSort = newValue;\n      props.setSettings(settings);\n    }\n  }\n\n  return (\n    <div className={props.className}>\n      <div className=\"settings-section\">\n        <label className=\"settings-label\">What games should be matched:</label>\n        <ButtonGroup\n          name=\"CGOptions\"\n          options={[\"All Games\", \"Only Common Games\"]}\n          activeIndex={props.settings.onlyCommonGames ? 1 : 0}\n          setActive={handleOnlyCommonGamesInput}\n        />\n      </div>\n      <div className=\"settings-section\">\n        <label className=\"settings-label\">Who can add custom games: *</label>\n        <ButtonGroup\n          name=\"CGOptions\"\n          options={[\"Everyone\", \"Only Host\"]}\n          activeIndex={props.settings.allCanAddCustomGames ? 0 : 1}\n          setActive={handleAllCanAddCustomGamesInput}\n          disabled={!props.isHost}\n        />\n      </div>\n      <div className=\"settings-section\">\n        <label className=\"settings-label\">Default game sort for new users: *</label>\n        <ButtonGroup\n          name=\"CGOptions\"\n          options={[\"Total Playtime\", \"Playtime Last 2 Weeks\"]}\n          activeIndex={props.settings.defaultSort === \"total\" ? 0 : 1}\n          setActive={(index) => handleSortInput(index)}\n          disabled={!props.isHost}\n        />\n      </div>\n      <p className=\"settings-hint\">\n        Settings marked with * can only be edited by the session host.\n      </p>\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport AboutTeaser from \"../../components/aboutTeaser/AboutTeaser\"\nimport Container from \"../../components/container/Container\"\nimport Settings from \"../../components/settings/Settings\"\nimport \"./createSession.css\"\n\nexport default function CreateSession(props: {\n  steamId?: string,\n  settings: Settings,\n  setSettings: (settings: Settings) => void,\n  onSubmit: (steamId: string) => void,\n}) {\n  const [steamId, setSteamId] = useState<string>(props.steamId ?? \"\");\n  const history = useHistory();\n\n  const handleSteamIdChange = (event: any) => {\n    setSteamId(event.target.value);\n  }\n\n  const handleSubmit = async (event: any) => {\n    event.preventDefault();\n    props.onSubmit(steamId);\n    history.push(\"/matching\");\n  }\n\n  return (\n    <Container className=\"create-session\">\n      <h1 className=\"title\">Common Steam Games</h1>\n      <h2 className=\"subtitle\">Create new Session</h2>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"createSessionSteamId\">Steam ID or Profile URL:</label>\n        <div className=\"steamId-input input-margin\">\n          <span className=\"profile-url\">https://steamcommunity.com/id/</span>\n          <input\n            type=\"text\"\n            name=\"steamId\"\n            id=\"createSessionSteamId\"\n            onChange={handleSteamIdChange}\n            className=\"d-table-cell\"\n            defaultValue={steamId}\n            placeholder=\"Steam ID or Profile URL\"\n            required\n          />\n        </div>\n        <Settings\n          isHost\n          settings={props.settings}\n          setSettings={props.setSettings}\n          className=\"create-session-settings\"\n        />\n        <input type=\"submit\" value=\"Create New Session\" className=\"btn\" />\n      </form>\n      <p className=\"link-join\">\n        Or <Link to=\"/join\">join existing session</Link>\n      </p>\n      <AboutTeaser />\n    </Container>\n  )\n}\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport packageJSON from \"../../../package.json\"\nimport toMail from \"../../security/mail\"\nimport \"./footer.css\"\n\nexport default function Footer() {\n  return (\n    <div className=\"footer\">\n      <div className=\"f-left\">\n        This project is not affiliated with Valve or Steam\n      </div>\n      <div className=\"f-right\">\n        <Link to=\"about\" className=\"footer-link\" >\n          About\n        </Link>\n        <a\n          className=\"footer-link\"\n          href=\"https://aliebald.github.io/impressum/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          title=\"Impressum gemäß § 5 TMG\"\n        >\n          Impressum\n        </a>\n        <div title=\"Send me a mail\" onClick={() => toMail(\"𝕔𝕠𝕟𝕥𝕒𝕔𝕥.𝕝𝕚𝕖𝕓𝕒𝕝𝕕@𝕘𝕞𝕒𝕚𝕝.𝕔𝕠𝕞\")}>\n          <img src={`${packageJSON.subUrl}/email.svg`} alt=\"contact\" height=\"20px\" width=\"20px\" className=\"contact\" />\n        </div>\n        <a\n          href=\"https://github.com/aliebald/common-steam-games\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          title=\"GitHub Repository\"\n        >\n          <img src={`${packageJSON.subUrl}/github.svg`} alt=\"github\" height=\"18px\" width=\"18px\" className=\"github\" />\n        </a>\n      </div>\n    </div>\n  )\n}\n","/**\n * Takes an \"encrypted\" mail address, converts it to a real mail address\n * and opens the mailto link if possible\n * @param {string} encrypted - encrypted mail address written in\n *   lower-case mathematical double struck letters (𝕒-𝕫) and \"normal\"\n *   characters (all characters with character codes under 122)\n * @returns {void}\n * @author Leonard Goldstein\n * @see {@link https://github.com/goldst/goldst.github.io/blob/7d7e3c3c5eb9563fe83a47f62460e4536b9a3159/js/safety/safety.js}\n */\nexport default function toMail(encrypted) {\n  let decrypted = \"\";\n  for (let i = 0; i < encrypted.length; i++) {\n    if (encrypted.charCodeAt(i) > 122) {\n      decrypted += String.fromCharCode(\n        encrypted.charCodeAt(i + 1) - 56561\n      );\n\n      i++;\n    } else {\n      decrypted += encrypted.charAt(i);\n    }\n  }\n  window.open(\"mailto:\" + decrypted, \"_self\");\n};\n","import React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom';\nimport AboutTeaser from '../../components/aboutTeaser/AboutTeaser';\nimport Container from '../../components/container/Container';\n\nexport default function JoinSession(props: {\n  sessionId?: string,\n  steamId?: string,\n  onSubmit: (steamId: string, sessionId: string) => void,\n  id?: string\n}) {\n  const [steamId, setSteamId] = useState<string>(props.steamId ?? \"\");\n  const [sessionId, setSessionId] = useState<string>(props.sessionId ?? \"\");\n  const history = useHistory();\n  const handleSteamIdChange = (event: any) => {\n    setSteamId(event.target.value);\n  }\n\n  const handleSessionIdChange = (event: any) => {\n    setSessionId(event.target.value);\n  }\n\n  const handleSubmit = async (event: any) => {\n    event.preventDefault();\n    props.onSubmit(steamId, sessionId);\n    history.push(\"/matching\");\n  }\n\n  return (\n    <Container className=\"join-session\">\n      <h1 className=\"title\">Common Steam Games</h1>\n      <h2 className=\"subtitle\">Join Session</h2>\n      <form className=\"d-table\" onSubmit={handleSubmit}>\n        <div className=\"d-table-row\">\n          <label htmlFor=\"joinSessionSteamId\" className=\"d-table-cell\">Steam ID or Profile URL:</label>\n          <div className=\"steamId-input input-margin\">\n            <span className=\"profile-url\">https://steamcommunity.com/id/</span>\n            <input\n              type=\"text\"\n              name=\"steamId\"\n              id=\"joinSessionSteamId\"\n              onChange={handleSteamIdChange}\n              className=\"d-table-cell\"\n              defaultValue={steamId}\n              placeholder=\"Steam ID or Profile URL\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"d-table-row\">\n          <label htmlFor=\"sessionId\" className=\"d-table-cell\">Session ID:&nbsp;</label>\n          <input type=\"text\"\n            name=\"sessionId\"\n            id=\"sessionId\"\n            onChange={handleSessionIdChange}\n            className=\"d-table-cell input-margin\"\n            defaultValue={sessionId}\n            placeholder=\"Session ID\"\n            required\n          />\n        </div>\n        <div className=\"d-table-row\">\n          <div className=\"d-table-cell\"></div>\n          <div className=\"d-table-cell\">\n            <input type=\"submit\" value=\"Join Session\" className=\"btn\" />\n          </div>\n        </div>\n      </form>\n      <p className=\"link-create\">\n        Or <Link to=\"/create\">create new session</Link>\n      </p>\n      <AboutTeaser />\n    </Container>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport \"./unknownPage.css\"\n\n/**\n * Simple page for 404 errors\n */\nexport default function UnknownPage() {\n  return (\n    <div className=\"unknown-page\">\n      <p>The page you are looking for was not found.</p>\n      <p>You can <Link to=\"/create\">create a new session</Link> or <Link to=\"/join\">join an existing session</Link>.</p>\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\nimport \"./tooltip.css\"\n\nexport default function Tooltip(props: {\n  children: JSX.Element,\n  tooltip: JSX.Element,\n  position: \"bottom\" | \"right\" | \"left\" | \"bottom-left\"\n}) {\n  const [show, setShow] = useState(false);\n\n  if (!show) {\n    return (\n      <div onMouseEnter={() => setShow(true)} onMouseLeave={() => setShow(false)}>\n        {props.children}\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"tooltip-wrapper\" onMouseEnter={() => setShow(true)} onMouseLeave={() => setShow(false)}>\n      <div className={`tooltip-popup ${props.position}`}>\n        {props.tooltip}\n      </div>\n      {props.children}\n    </div>\n  )\n}\n","import React from \"react\"\nimport Button from \"../button/Button\"\nimport \"./userCard.css\"\n\nexport default function UserCard(props: {\n  user: User,\n  className?: string\n}) {\n  const openSteamChat = () => {\n    window.open(`steam://friends/message/${props.user.steamId}`);\n  }\n\n  return (\n    <div className={`user-card ${props.className ?? \"\"}`}>\n      <a href={props.user.profileurl} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Steam profile\">\n        <img src={props.user.avatarmedium} alt=\"avatar\" height=\"64px\" width=\"64px\" />\n      </a>\n      <div className=\"user-details\">\n        <h3>{props.user.personaname}</h3>\n        <span className=\"realname\">{props.user.realname}</span>\n        <br />\n      </div>\n      <Button onClick={openSteamChat}>\n        Chat\n      </Button>\n    </div>\n  )\n}\n","import React from 'react'\r\nimport Tooltip from '../tooltip/Tooltip'\r\nimport UserCard from '../userCard/UserCard'\r\nimport './game.css'\r\n\r\n\r\nexport default function Game(props: {\r\n  game: Game | MatchedGame,\r\n  showOwners?: boolean,\r\n  isDnD?: boolean,\r\n  DnDHighlight?: boolean // Increases brightness of dnd icon for a few seconds after first render\r\n}) {\r\n  const playtime = Math.round(((props.game.playtime_forever / 60) + Number.EPSILON) * 100) / 100;\r\n  const playtime2weeks = props.game.playtime_2weeks ? Math.round(((props.game.playtime_2weeks / 60) + Number.EPSILON) * 100) / 100 : 0;\r\n  const isMatchedGame = \"weight\" in (props.game as MatchedGame);\r\n  const isCustom = props.game.isCustom ?? false;\r\n\r\n  let playtimeText: string;\r\n  let weightPercentage = isMatchedGame ? convertWeightToPercentage((props.game as MatchedGame).weight) : \"\";\r\n  if (isCustom) {\r\n    playtimeText = \"Custom Game\";\r\n  } else if (isMatchedGame) {\r\n    playtimeText = `Average Playtime: ${playtime}h`;\r\n  } else {\r\n    playtimeText = playtime2weeks > 0 ? `Playtime: ${playtime}h / ${playtime2weeks}h` : `Playtime: ${playtime}h`;\r\n  }\r\n\r\n  let icon: JSX.Element;\r\n  const hasImage = props.game.img_icon_url.length > 0\r\n  if (hasImage) {\r\n    icon = <img\r\n      src={getImage(props.game.appid, props.game.img_icon_url)}\r\n      width=\"32\"\r\n      height=\"32\"\r\n      alt=\"icon\"\r\n      loading=\"lazy\"\r\n    />\r\n  } else {\r\n    const char = props.game.name.length > 0 ? props.game.name.charAt(0) : \"?\";\r\n    icon = <div className={`no-icon${isCustom ? \" custom\" : \"\"}`}><span>{char}</span></div>;\r\n  }\r\n\r\n  const optionalAProps = props.isDnD ? { tabIndex: -1 } : {};\r\n  const storePageLink = getStorePage(props.game.appid);\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      {!isCustom && storePageLink ? (\r\n        <a\r\n          className=\"img-link\"\r\n          href={storePageLink}\r\n          title={`${props.game.name} steam page`}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          style={hasImage ? {} : { textDecoration: \"none\" }}\r\n          {...optionalAProps}\r\n        >\r\n          {icon}\r\n        </a>\r\n      ) : (\r\n        <div className=\"img-link no-select\">{icon}</div>\r\n      )}\r\n      <div className={isMatchedGame || props.isDnD ? \"game-info no-br\" : \"game-info\"}>\r\n        <div className=\"title\">{props.game.name}</div>\r\n        <div className=\"playtime\">{playtimeText}</div>\r\n      </div>\r\n      {isMatchedGame ?\r\n        <div className=\"match-info\">\r\n          {props.showOwners ? <Owners owners={(props.game as MatchedGame).owners} gameTitle={props.game.name} /> : <></>}\r\n          <div className=\"weight\">Match:&nbsp;{weightPercentage}</div>\r\n        </div>\r\n        : <></>}\r\n      {props.isDnD ? <div className=\"dnd-icon\">\r\n        <img src=\"dnd_icon.svg\" alt=\"\" width=\"17\" height=\"32\" className={props.DnDHighlight ? \"highlight\" : \"\"} />\r\n      </div> : <></>}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Owners(props: { owners: User[], gameTitle: string }) {\r\n  return (\r\n    <>\r\n      {props.owners.map((owner, index) =>\r\n        <Tooltip position=\"bottom-left\" tooltip={<UserCard user={owner} />} key={index}>\r\n          <img\r\n            src={owner.avatar}\r\n            alt=\"\"\r\n            height=\"16px\"\r\n            width=\"16px\"\r\n            className=\"owner\"\r\n            loading=\"lazy\"\r\n          />\r\n        </Tooltip>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction getImage(appid: number | string, hash: number | string): string {\r\n  return `https://media.steampowered.com/steamcommunity/public/images/apps/${appid}/${hash}.jpg`;\r\n}\r\n\r\nfunction getStorePage(appid: number | string): string {\r\n  return `https://store.steampowered.com/app/${appid}`;\r\n}\r\n\r\nfunction convertWeightToPercentage(weight: number): string {\r\n  // Get weight as rounded percentage with 2 trailing decimals\r\n  const num = (Math.round(weight * 10000) / 100).toFixed(2);\r\n  // remove trailing zeros using parseFloat\r\n  return `${parseFloat(num)}%`;\r\n}\r\n","import React, { memo } from \"react\"\nimport { Draggable } from \"react-beautiful-dnd\"\nimport Game from \"../game/Game\"\n\ntype DraggableGameProps = {\n  game: Game,\n  index: number,\n  hide?: boolean,\n  DnDHighlight?: boolean\n}\n\nfunction DraggableGame(props: DraggableGameProps) {\n  return (\n    <Draggable draggableId={`${props.game.appid}`} index={props.index}>\n      {provided => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          {props.hide ? <></> :\n            <Game\n              game={props.game}\n              isDnD\n              DnDHighlight={props.DnDHighlight}\n            />\n          }\n        </div>\n      )}\n    </Draggable>\n\n  )\n}\n\nfunction areEqual(prevProps: DraggableGameProps, nextProps: DraggableGameProps) {\n  return (prevProps.game.appid === nextProps.game.appid\n    && prevProps.index === nextProps.index\n    && prevProps.hide === nextProps.hide\n    && prevProps.DnDHighlight === nextProps.DnDHighlight\n  );\n}\n\nexport default memo(DraggableGame, areEqual);\n","import { DragDropContext, Droppable, DropResult, ResponderProvided } from \"react-beautiful-dnd\";\r\nimport React, { createRef, RefObject, useEffect, useState } from \"react\"\r\nimport { compareTwoStrings } from \"string-similarity\";\r\nimport DraggableGame from \"../draggableGame/DraggableGame\";\r\nimport Game from \"../game/Game\";\r\nimport \"./gamesList.css\"\r\n\r\nexport default function GamesList(props: {\r\n  games: Game[] | MatchedGame[],\r\n  onlyCommonGames?: boolean,\r\n  commonAppIds: number[],\r\n  droppableId?: string, // If this is given, the output list will be a drag & drop list\r\n  onDragEnd?: (result: DropResult, provided: ResponderProvided) => void,\r\n  header?: JSX.Element,\r\n  gameSearch?: string,\r\n  className?: string\r\n}) {\r\n  const header = props.header ?? \"\";\r\n  const dndListRef: RefObject<HTMLDivElement> = createRef();\r\n  const onlyCommonGames = props.onlyCommonGames ?? false;\r\n\r\n  useEffect(() => {\r\n    /** Finds the index of the game in games with the highest similarity with a search query */\r\n    const searchGamePosition = (search: string): number => {\r\n      let match = {\r\n        similarity: 0,\r\n        index: 0,\r\n        name: \"\"\r\n      };\r\n      props.games.forEach((game, index) => {\r\n        if (!props.onlyCommonGames || props.commonAppIds.includes(game.appid)) {\r\n          const similarity = compareTwoStrings(game.name.toLowerCase(), search.toLowerCase());\r\n          if (similarity > match.similarity) {\r\n            match = {\r\n              similarity: similarity,\r\n              index: index,\r\n              name: game.name\r\n            }\r\n          }\r\n        }\r\n      });\r\n      console.log(`Best match for game search (\"${search}\"): ${match.name}. Similarity: ${match.similarity}`);\r\n      return match.index;\r\n    }\r\n\r\n    /** Finds the depth in px of the game with the given index. Used for scrollTo() */\r\n    const getDepthForGame = (index: number) => {\r\n      if (!dndListRef.current) {\r\n        return 0;\r\n      }\r\n      let depth = 0;\r\n      for (let i = 0; i < index; i++) {\r\n        depth += dndListRef.current.children[0].children[i].scrollHeight;\r\n      }\r\n      return depth;\r\n    }\r\n\r\n    if (props.gameSearch && props.gameSearch.length > 1 && dndListRef.current) {\r\n      const index = searchGamePosition(props.gameSearch);\r\n      const pos = getDepthForGame(index);\r\n      dndListRef.current.scrollTo({ top: pos, behavior: \"smooth\" });\r\n    }\r\n  }, [dndListRef, props.games, props.gameSearch, props.commonAppIds, props.onlyCommonGames])\r\n\r\n  // Return games as drag & drop list\r\n  if (props.droppableId && props.onDragEnd) {\r\n    return (\r\n      <div className={`games-list ${props.className ?? \"\"}`}>\r\n        <DragDropContext onDragEnd={props.onDragEnd}>\r\n          {header}\r\n          <div className=\"scroll-container\" ref={dndListRef}>\r\n            <Droppable droppableId={props.droppableId}>\r\n              {provided => (\r\n                <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                  <InnerList\r\n                    games={props.games}\r\n                    onlyCommonGames={onlyCommonGames}\r\n                    commonAppIds={props.commonAppIds}\r\n                  />\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n        </DragDropContext>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // Return games as static list if droppableId or onDragEnd is not defined in props\r\n  const games = onlyCommonGames ? props.games.filter(game => props.commonAppIds.includes(game.appid)) : props.games;\r\n  return (\r\n    <div className={`games-list ${props.className ?? \"\"}`}>\r\n      {header}\r\n      <div className=\"scroll-container\">\r\n        {games.map((game, index) => <Game game={game} key={index} showOwners={!onlyCommonGames} />)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// do not re-render if the games list reference has not changed\r\nconst InnerList = React.memo(function InnerList(props: { games: Game[], commonAppIds: number[], onlyCommonGames: boolean }) {\r\n  const [highlightDnd, setHighlightDnd] = useState(false);\r\n\r\n  // Increases brightness of dnd icon for a few seconds after first render\r\n  useEffect(() => {\r\n    const timeoutStart = setTimeout(() => {\r\n      setHighlightDnd(true);\r\n    }, 1000);\r\n\r\n    const timeoutEnd = setTimeout(() => {\r\n      setHighlightDnd(false);\r\n    }, 6000);\r\n\r\n    return () => {\r\n      clearTimeout(timeoutStart);\r\n      clearTimeout(timeoutEnd);\r\n    }\r\n  }, []);\r\n\r\n  const list = props.games.map((game: Game, index: number) => {\r\n    if (!props.onlyCommonGames || props.commonAppIds.includes(game.appid)) {\r\n      return <DraggableGame key={game.appid} game={game} index={index} DnDHighlight={highlightDnd} />\r\n    } else {\r\n      return <DraggableGame key={game.appid} game={game} index={index} hide DnDHighlight={highlightDnd} />\r\n    }\r\n  })\r\n  return <>{list}</>\r\n});\r\n","import React from \"react\"\nimport packageJSON from \"../../../package.json\"\nimport Button from \"../button/Button\";\nimport \"./invite.css\"\n\nexport default function Invite(props: {\n  sessionId: string,\n  className?: string,\n  openFriendsList: () => void;\n}) {\n  const invite = `${window.location.origin}${packageJSON.subUrl}/?sessionId=${encodeURIComponent(props.sessionId)}#/join`;\n  const copyInvite = () => {\n    navigator.clipboard.writeText(invite);\n  }\n  const handleFocus = (event: any) => {\n    event.target.select()\n  }\n\n  return (\n    <div className={`invite-box ${props.className ?? \"\"}`}>\n      <label>Invite your friends</label>\n      <div className=\"invite-row\">\n        <input className=\"invite-input\"\n          type=\"text\"\n          value={invite}\n          readOnly\n          onFocus={handleFocus}\n          title=\"Invite link. Click 'Copy Invite' to copy this link\"\n        />\n        <Button onClick={copyInvite} title=\"Copy invite link\">\n          Copy&nbsp;Invite\n        </Button>\n        <Button\n          onClick={props.openFriendsList}\n          title={\"Open your friends list and create personalized invites. \"\n            + \"This allows your friends to directly join you without looking up their steamId.\"}\n        >\n          Open&nbsp;Friends&nbsp;List\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport \"./loading.css\"\n\nexport default function Loading(props: {\n  className?: string,\n  center?: boolean\n}) {\n  // Loading animation from https://loading.io/css/\n  const centerInner = props.center ? \" v-centered\" : \"\"\n  const content = (\n    <div className={`lds-roller${centerInner} ${props.className ?? \"\"}`}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  )\n\n  if (props.center) {\n    return <div className=\"flex-center\">{content}</div>;\n  }\n\n  return content;\n}\n","import React from \"react\"\nimport \"./searchBar.css\"\n\nexport default function SearchBar(props: {\n  onChange: (str: string) => void,\n  className?: string,\n  title?: string,\n  placeholder?: string\n}) {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    props.onChange(event.target.value);\n  }\n\n  const handleSubmit = (event: any) => {\n    event.preventDefault();\n    props.onChange(event.target[0].value);\n  }\n\n  return (\n    <form className={`search-bar-form ${props.className ?? \"\"}`} onSubmit={handleSubmit}>\n      <input type=\"text\"\n        onChange={handleChange}\n        placeholder={props.placeholder}\n        title={props.title ?? \"button\"}\n      />\n      <button type=\"reset\">&times;</button>\n    </form>\n  )\n}\n","import React from \"react\"\r\nimport Button from \"../button/Button\"\r\nimport SearchBar from \"../searchBar/SearchBar\";\r\nimport \"./userHeader.css\"\r\n\r\nexport default function UserHeader(props: {\r\n  title: string,\r\n  user: User,\r\n  className?: string,\r\n  onSearch?: (filter: string) => void,\r\n  onSortByTotal?: () => void,\r\n  onSortByLastTwoWeeks?: () => void\r\n}) {\r\n  const showSubheader = typeof props.onSearch !== \"undefined\"\r\n    && typeof props.onSortByTotal !== \"undefined\"\r\n    && typeof props.onSortByLastTwoWeeks !== \"undefined\";\r\n\r\n  const handleSearchInput = (query: string) => {\r\n    if (typeof props.onSearch !== \"undefined\") {\r\n      props.onSearch(query);\r\n    }\r\n  }\r\n\r\n  const subheader = (\r\n    <div className=\"sub-header\">\r\n      <SearchBar\r\n        placeholder=\"Search Game\"\r\n        onChange={handleSearchInput}\r\n        title=\"Search for a game in your games\"\r\n      />\r\n      <span title=\"Sorts your games according to your total playtime or playtime in the last two weeks\">\r\n        Sort&nbsp;by:\r\n      </span>\r\n      <Button onClick={props.onSortByLastTwoWeeks} title=\"Sorts your games according to your playtime in the last two weeks\">\r\n        Last&nbsp;2&nbsp;Weeks\r\n      </Button>\r\n      <Button onClick={props.onSortByTotal} title=\"Sorts your games according to your total playtime\">\r\n        Total\r\n      </Button>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <div className={`user-header ${showSubheader ? \"has-subheader\" : \"\"} ${props.className ?? \"\"}`}>\r\n        <a href={props.user.profileurl} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Steam profile\">\r\n          <img\r\n            src={props.user.avatarmedium}\r\n            width=\"45\"\r\n            height=\"45\"\r\n            alt=\"avatar\"\r\n          />\r\n        </a>\r\n        <div className=\"user-details\">\r\n          <h2>{props.title}</h2>\r\n          {props.user.preferences ? <div>{props.user.preferences.length}&nbsp;Games</div> : \"\"}\r\n        </div>\r\n      </div>\r\n      {showSubheader ? subheader : <></>}\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\"\nimport \"./addButton.css\"\n\nexport default function AddButton(props: {\n  className?: string,\n  onClick?: React.MouseEventHandler<HTMLButtonElement>,\n  title?: string\n}) {\n  return (\n    <button\n      className={`add-btn ${props.className ?? \"\"}`}\n      onClick={props.onClick}\n      title={props.title}\n    >\n      <div></div>\n      <div></div>\n    </button>\n  )\n}\n","import React from \"react\"\nimport AddButton from \"../addButton/AddButton\"\nimport \"./groupHeader.css\"\n\nexport default function GroupHeader(props: {\n  title: string,\n  gamesCount: number,\n  commonGames: boolean,\n  addCustomGame: () => void,\n  canAddCustomGames: boolean,\n  className?: string\n}) {\n  return (\n    <div className={`group-header ${props.className ?? \"\"}`}>\n      <div className=\"group-details\">\n        <h2>{props.title}</h2>\n        <div>{props.gamesCount}&nbsp;{props.commonGames ? \"Common Games\" : \"Games\"}</div>\n      </div>\n      {props.canAddCustomGames ? (\n        <AddButton onClick={props.addCustomGame} title=\"Add Custom Games\" />\n      ) : (\n        <></>\n      )}\n    </div>\n  )\n}\n","import React from \"react\"\nimport packageJSON from \"../../../package.json\"\nimport Button from \"../button/Button\";\n\nimport \"./friend.css\"\n\nexport default function Friend(props: {\n  friend: Friend,\n  sessionId: string\n}) {\n  const friend = props.friend;\n  const personaname = (friend.personaname ?? friend.realname) ?? \"\";\n  const invite = `${window.location.origin}${packageJSON.subUrl}/?sessionId=${encodeURIComponent(props.sessionId)}&steamId=${props.friend.steamId}#join`;\n  const copyInvite = () => {\n    navigator.clipboard.writeText(invite);\n  }\n  const openSteamChat = () => {\n    window.open(`steam://friends/message/${friend.steamId}`)\n  }\n\n  return (\n    <div className=\"friend\">\n      <div className=\"friend-info\">\n        <a href={friend.profileurl} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Steam profile\">\n          <img\n            src={friend.avatarmedium}\n            width=\"45\"\n            height=\"45\"\n            alt=\"avatar\"\n          />\n        </a>\n        <div className=\"friend-personal\">\n          <div>{friend.personaname ?? \"\"}</div>\n          {friend.realname ? <div className=\"realname\">{friend.realname}</div> : \"\"}\n        </div>\n      </div>\n      <div className=\"buttons\">\n        <Button\n          onClick={openSteamChat}\n          title={`Opens the steam chat with ${personaname}, if steam is installed.`}\n        >\n          Steam&nbsp;Chat\n        </Button>\n        <Button\n          onClick={copyInvite}\n          title={`Copies a personalized invite for ${personaname}. This allows ${personaname} to join without entering a steamId`}\n        >\n          Copy&nbsp;Invite\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React, { RefObject, useEffect, useState } from \"react\"\r\nimport { compareTwoStrings } from \"string-similarity\";\r\nimport { Socket } from \"socket.io-client\";\r\nimport SearchBar from \"../searchBar/SearchBar\";\r\nimport Loading from \"../loading/Loading\";\r\nimport Friend from \"../friend/Friend\";\r\nimport Button from \"../button/Button\";\r\nimport \"./friendslist.css\"\r\n\r\nexport default function FriendsList(props: {\r\n  socket: Socket,\r\n  sessionId: string,\r\n  steamId: string,\r\n  closeFriendsList: () => void;\r\n}) {\r\n  const [friends, setFriends] = useState<Friend[]>([]);\r\n  const [filter, setFilter] = useState<string>(\"\");\r\n  const [list, setList] = useState<JSX.Element[]>([]);\r\n  const listRef: RefObject<HTMLDivElement> = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const cacheFriendsList = (friends: Friend[]) => {\r\n      sessionStorage.setItem(\"friends\", JSON.stringify({\r\n        friends: friends,\r\n        steamId: props.steamId\r\n      }));\r\n    }\r\n\r\n    const loadFriendsList = () => {\r\n      const cached = sessionStorage.getItem(\"friends\");\r\n      if (typeof cached === \"string\") {\r\n        const parsed = JSON.parse(cached);\r\n        if (parsed.steamId === props.steamId) {\r\n          setFriends(parsed.friends as Friend[]);\r\n          return;\r\n        }\r\n      }\r\n      // request from server if not cached\r\n      props.socket.emit(\"getFriendsList\");\r\n    }\r\n\r\n    // set listener and request data\r\n    props.socket.on(\"friendsList\", (msg: any) => {\r\n      console.log(\"friendsList\", msg);\r\n      cacheFriendsList(msg as Friend[]);\r\n      setFriends(msg as Friend[]);\r\n    });\r\n\r\n    loadFriendsList();\r\n\r\n    return () => {\r\n      props.socket.removeAllListeners(\"friendsList\");\r\n    }\r\n  }, [props.socket, props.steamId])\r\n\r\n  // Updates Friendslist when friends are loaded or the search is used\r\n  useEffect(() => {\r\n    const addSimilarity = (friend: Friend): Friend => {\r\n      let similarity = compareTwoStrings(friend.personaname.toLowerCase(), filter.toLowerCase());\r\n      if (friend.realname) {\r\n        similarity += compareTwoStrings(friend.realname.toLowerCase(), filter.toLowerCase());\r\n        similarity /= 2;\r\n      }\r\n      return { ...friend, filterSimilarity: similarity };\r\n    }\r\n\r\n    const sortBySimilarity = (a: Friend, b: Friend) => {\r\n      if (a.filterSimilarity === undefined || b.filterSimilarity === undefined) {\r\n        console.warn(\"filterSimilarity is not defined\");\r\n        return 0;\r\n      }\r\n      return b.filterSimilarity - a.filterSimilarity;\r\n    }\r\n\r\n    const mapToJSXElement = (friend: Friend) => (\r\n      <Friend friend={friend} key={friend.steamId} sessionId={props.sessionId} />\r\n    );\r\n\r\n    if (filter.length < 2) {\r\n      setList(friends.map(mapToJSXElement));\r\n    } else {\r\n      // Apply filter\r\n      setList(friends.map(addSimilarity).sort(sortBySimilarity).map(mapToJSXElement));\r\n    }\r\n  }, [filter, friends, props.sessionId])\r\n\r\n  const handleSearch = (query: string) => {\r\n    setFilter(query);\r\n    if (listRef.current) {\r\n      listRef.current.scrollTo({ top: 0, behavior: 'smooth' });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"friends\">\r\n      <div className=\"friendslist-header\">\r\n        <SearchBar className=\"friend-search\" onChange={handleSearch} placeholder=\"Search Friends\" />\r\n        <Button onClick={props.closeFriendsList} appearance=\"danger\">&nbsp;Close&nbsp;Friends&nbsp;</Button>\r\n      </div>\r\n      <div className=\"list\" ref={listRef}>\r\n        {friends.length === 0 ? <Loading center /> : list}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect } from \"react\"\nimport \"./modal.css\"\n\nexport default function Modal(props: {\n  children: JSX.Element,\n  visible: boolean,\n  setVisible: (visible: boolean) => void\n}) {\n  /* close if esc is pressed */\n  useEffect(() => {\n    const listener = (event: any) => {\n      if (event.code === \"Escape\") {\n        event.preventDefault();\n        props.setVisible(false);\n      }\n    };\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n  }, [props]);\n\n  if (!props.visible) {\n    return <></>;\n  }\n\n  const close = () => {\n    props.setVisible(false);\n  }\n\n  return (\n    <div className=\"modal\">\n      <div className=\"blur-bg\" onClick={close}></div>\n      {props.children}\n    </div>\n  )\n}\n","import React, { useEffect } from \"react\"\nimport Button from \"../button/Button\"\nimport Modal from \"../modal/Modal\"\nimport \"./confirmation.css\"\n\nexport default function Confirmation(props: {\n  text: string,\n  abortText?: string,\n  confirmText?: string,\n  visible?: boolean,\n  onAbort: () => void,\n  onConfirm: () => void\n}) {\n  const handleModal = (visible: boolean) => {\n    if (!visible) {\n      props.onAbort();\n    }\n  }\n\n  const confirm = (event: any) => {\n    event.preventDefault();\n    props.onConfirm();\n  }\n  const abort = (event: any) => {\n    event.preventDefault();\n    props.onAbort();\n  }\n\n  /* confirm if enter is pressed */\n  useEffect(() => {\n    const listener = (event: any) => {\n      if (props.visible && (event.code === \"Enter\" || event.code === \"NumpadEnter\")) {\n        event.preventDefault();\n        props.onConfirm();\n      }\n    };\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n  }, [props]);\n\n  return (\n    <Modal visible={props.visible ?? true} setVisible={handleModal}>\n      <div className=\"confirmation\">\n        <p className=\"text\">{props.text}</p>\n        <div className=\"confirmation-footer\">\n          <Button onClick={abort}>\n            {props.abortText ? props.abortText : \"Abort\"}\n          </Button>\n          <Button onClick={confirm} appearance=\"danger\">\n            {props.confirmText ? props.confirmText : \"Confirm\"}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\nimport Button from \"../button/Button\";\nimport Container from \"../container/Container\";\nimport Game from \"../game/Game\";\nimport Modal from \"../modal/Modal\"\nimport \"./customGameInput.css\"\n\n\nexport default function CustomGameInput(props: {\n  visible: boolean,\n  close: () => void,\n  addGame: (game: Game) => void,\n  addError: (error: ErrorType) => void\n}) {\n  const [game, setGame] = useState<Game>({\n    appid: 0,\n    name: \"\",\n    img_icon_url: \"\",\n    playtime_forever: 0,\n    isCustom: true\n  });\n\n  /* confirm if enter is pressed */\n  useEffect(() => {\n    const listener = (event: any) => {\n      if (props.visible && (event.code === \"Enter\" || event.code === \"NumpadEnter\")) {\n        event.preventDefault();\n        confirm();\n      }\n    };\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props]);\n\n  const handleModal = (visible: boolean) => {\n    if (!visible) {\n      props.close();\n    }\n  }\n\n  const confirm = () => {\n    if (game.name.length === 0) {\n      props.addError({\n        status: 400,\n        msg: \"Please enter a name for the custom game.\",\n        timeout: 3000\n      })\n      return;\n    }\n    props.addGame(game);\n    props.close();\n  }\n\n  const handleNameChange = (event: any) => {\n    event.preventDefault();\n    const newGame = { ...game };\n    newGame.name = event.target.value.trim();\n    setGame(newGame);\n  }\n\n  return (\n    <Modal visible={props.visible} setVisible={handleModal}>\n      <Container className=\"custom-game-input\">\n        <h3 className=\"title\">Add Custom Game</h3>\n        <p className=\"description\">\n          Custom games are added to all users in this session.\n          This can be used to add non-Steam games, e.g. games from different platforms,\n          browser games, or other activities.\n        </p>\n        <label htmlFor=\"customGameName\">Name: &nbsp; </label>\n        <input type=\"text\"\n          id=\"customGameName\"\n          onChange={handleNameChange}\n          defaultValue={game.name}\n          placeholder=\"Name for Custom Game\"\n          required\n        />\n        <h3 className=\"preview\">Preview</h3>\n        <Game game={game} />\n        <div className=\"buttons\">\n          <Button appearance=\"danger\" onClick={props.close}>\n            Abort\n          </Button>\n          <Button onClick={confirm}>\n            Add&nbsp; Game\n          </Button>\n        </div>\n      </Container>\n\n    </Modal>\n  )\n}\n","import { io } from \"socket.io-client\";\n\n/**\n * Initiates a Socket IO socket. \n * \n * @param steamId \n * @param settings \n * @param sessionId \n */\nexport function initiateSocket(steamId: string, settings: Settings, sessionId?: string) {\n  let query;\n  if (sessionId) {\n    query = { steamId: steamId, sessionId: sessionId };\n  } else {\n    query = { steamId: steamId, settings: JSON.stringify(settings) };\n  }\n  const url = process.env.NODE_ENV === \"production\" ? \"https://common-steam-games.herokuapp.com/\" : \"http://localhost:3030\";\n  return io(url, {\n    query: query,\n    reconnectionAttempts: 4\n  });\n}\n\n/**\n * Preference matching function. \n * Takes users with preferences and returns ordered matches with a corresponding weight between 0 and 1.\n * \n * @param users all users, including self.\n * @param commonAppIds If empty, all games will be matched. Otherwise list of common appIds, only common games will be matched\n * @returns Array with matched games\n */\nexport function calculatePreferences(users: User[], commonAppIds: number[]): MatchedGame[] {\n  const matchedGames: Map<number, MatchedGame> = new Map();\n  const maxGames = commonAppIds.length > 0 ? commonAppIds.length : (\n    Math.max(...users.map(user => user.preferences ? user.preferences.length : 0)));\n\n  users.forEach(user => {\n    if (user.preferences) {\n      const preferences = commonAppIds.length > 0 ? (\n        user.preferences.filter(pref => commonAppIds.includes(pref.appid))\n      ) : user.preferences;\n\n      preferences.forEach((game, index) => {\n        const weight = getWeight(index, maxGames - 1);\n        let matchedGame: MatchedGame;\n        // Check if the game already exists. Otherwise add it to matchedGames.\n        if (matchedGames.has(game.appid)) {\n          matchedGame = matchedGames.get(game.appid)!;\n          matchedGame.weight += weight / users.length;\n          matchedGame.playtime_forever += game.playtime_forever / users.length;\n          if (matchedGame.owners) {\n            matchedGame.owners.push(user);\n          }\n        } else {\n          matchedGame = {\n            appid: game.appid,\n            name: game.name,\n            img_icon_url: game.img_icon_url,\n            playtime_2weeks: game.playtime_2weeks ? (game.playtime_2weeks / users.length) : undefined,\n            playtime_forever: game.playtime_forever / users.length,\n            isCustom: game.isCustom,\n            weight: weight / users.length,\n            owners: [user]\n          };\n        }\n        matchedGames.set(game.appid, matchedGame);\n      });\n    }\n  });\n  const result = Array.from(matchedGames.values());\n  result.sort((a, b) => b.weight - a.weight);\n\n  return result\n}\n\n/** Weight function for calculatePreferences */\nfunction getWeight(index: number, maxGames: number): number {\n  const weight = (maxGames - index) / maxGames;\n  return (!isNaN(weight) && weight >= 0) ? weight * weight : 0;\n}\n\nexport function reorderGames(games: Game[], startIndex: number, endIndex: number) {\n  const result = Array.from(games);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n}\n\n/** Gets a list with appids for games owned by all users (incl. self) */\nexport function getCommonAppIds(users: User[]) {\n  const appOwners: { appid: number; owners: number; }[] = [];\n  let maxOwners = users.length;\n  for (const user of users) {\n    if (!user.preferences) {\n      maxOwners--;\n      continue;\n    }\n    for (const game of user.preferences) {\n      const index = appOwners.findIndex(elem => elem.appid === game.appid);\n      if (index >= 0) {\n        appOwners[index].owners++;\n      } else {\n        appOwners.push({ appid: game.appid, owners: 1 });\n      }\n    }\n  }\n  const ids = appOwners.filter(elem => elem.owners >= maxOwners).map(elem => elem.appid);\n  return ids;\n}\n","import { useEffect, useState } from \"react\";\r\nimport { DropResult } from \"react-beautiful-dnd\";\r\nimport { Socket } from \"socket.io-client\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport Collapsible from \"../../components/collapsible/Collapsible\";\r\nimport GamesList from \"../../components/gamesList/GamesList\";\r\nimport Invite from \"../../components/invite/Invite\";\r\nimport Loading from \"../../components/loading/Loading\";\r\nimport UserHeader from \"../../components/userHeader/UserHeader\";\r\nimport GroupHeader from \"../../components/groupHeader/GroupHeader\";\r\nimport FriendsList from \"../../components/friendsList/FriendsList\";\r\nimport Settings from \"../../components/settings/Settings\";\r\nimport Container from \"../../components/container/Container\";\r\nimport Confirmation from \"../../components/confirmation/Confirmation\";\r\nimport Modal from \"../../components/modal/Modal\";\r\nimport CustomGameInput from \"../../components/customGameInput/CustomGameInput\";\r\nimport Button from \"../../components/button/Button\";\r\nimport AddButton from \"../../components/addButton/AddButton\";\r\nimport { calculatePreferences, getCommonAppIds, initiateSocket, reorderGames } from \"./util\";\r\nimport \"./matching.css\";\r\n\r\n\r\nfunction Matching(props: {\r\n  steamId: string,\r\n  sessionId?: string,\r\n  settings: Settings,\r\n  setSettings: (settings: Settings) => void,\r\n  addError: (error: ErrorType) => void\r\n}) {\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [self, setSelf] = useState<User>({ steamId: props.steamId });\r\n  const [initiatorId, setInitiatorId] = useState<string>(props.sessionId ? \"\" : props.steamId);\r\n  const [matchedGames, setMatchedGames] = useState<MatchedGame[]>([]);\r\n  const [sessionId, setSessionId] = useState<string>(\"\");\r\n  const [preferencesChanged, setPreferencesChanged] = useState(false);\r\n  const [socket, setSocket] = useState<Socket | undefined>(undefined);\r\n  const [showFriendslist, setShowFriendslist] = useState<boolean>(false);\r\n  const [showLeaveModal, setShowLeaveModal] = useState<boolean>(false);\r\n  const [showCustomGameInput, setShowCustomGameInput] = useState<boolean>(false);\r\n  const [showSettingsModal, setShowSettingsModal] = useState<boolean>(false);\r\n  const [commonAppIds, setCommonAppIds] = useState<number[]>([]);\r\n  const [gameSearch, setGameSearch] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n  const showFullName = useMediaQuery({ query: '(min-width: 370px)' });\r\n\r\n  /** updates settings (state) and sends updateSettings event to backend */\r\n  const updateSettings = (settings: Settings) => {\r\n    if (socket) {\r\n      console.log(\"Sending settings\");\r\n      socket.emit(\"updateSettings\", settings);\r\n    }\r\n    props.setSettings(settings);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setCommonAppIds(getCommonAppIds(users.concat(self)));\r\n  }, [users, self])\r\n\r\n  useEffect(() => {\r\n    const handleSession = (msg: any) => {\r\n      console.log(\"Received session:\", msg);\r\n      if (!msg) return;\r\n      if (users.length > 0) {\r\n        console.warn(\"Received session but already is part of a session\");\r\n        return;\r\n      }\r\n\r\n      const session = msg as Session;\r\n      const ownSteamId = session.you ?? self.steamId;\r\n      const newUsers = session.users.filter(user => user.steamId !== ownSteamId);\r\n      const newSelf = session.users.find(user => user.steamId === ownSteamId);\r\n      if (!newSelf) {\r\n        props.addError({ status: 400, msg: \"Failed to connect to session. Did not find self.\" });\r\n        if (socket) socket.disconnect();\r\n        history.replace(\"/create\");\r\n        return;\r\n      }\r\n\r\n      sessionStorage.setItem(\"sessionId\", session.sessionId);\r\n      setSessionId(session.sessionId);\r\n      setSelf(newSelf);\r\n      setUsers(newUsers);\r\n      setInitiatorId(session.initiatorId);\r\n      if (session.settings) {\r\n        props.setSettings(session.settings);\r\n      }\r\n    }\r\n\r\n    const handleUserJoined = (msg: any) => {\r\n      console.log(\"Received handleUserJoined:\", msg, \"users:\", users);\r\n      const newUsers = [...users];\r\n      newUsers.push(msg as User);\r\n      setUsers(newUsers);\r\n    }\r\n\r\n    const handleAddCustomGame = (msg: any) => {\r\n      console.log(\"Received AddCustomGame:\", msg);\r\n      // Add custom game to own games\r\n      const newSelf = { ...self };\r\n      if (newSelf.preferences) {\r\n        newSelf.preferences.unshift(msg as Game);\r\n      } else {\r\n        newSelf.preferences = [msg as Game];\r\n      }\r\n      setSelf(newSelf);\r\n\r\n      // Add custom game to peers games\r\n      const newUsers = [...users];\r\n      for (const user of newUsers) {\r\n        if (user.preferences) {\r\n          user.preferences.unshift(msg as Game);\r\n        } else {\r\n          user.preferences = [msg as Game];\r\n        }\r\n      }\r\n      setUsers(newUsers);\r\n    }\r\n\r\n    const handleUserDisconnect = (msg: any) => {\r\n      console.log(\"Received handleUserDisconnect:\", msg, \"users:\", users);\r\n      const newUsers = users.filter(user => user.steamId !== msg as string);\r\n      setUsers(newUsers);\r\n    }\r\n\r\n    const handleUpdateSettings = (msg: any) => {\r\n      console.log(\"Received settings:\", msg);\r\n      props.setSettings(msg as Settings);\r\n    }\r\n\r\n    const handleUpdatePreferences = (msg: any) => {\r\n      console.log(\"Received updatePreferences:\", msg);\r\n      const data = msg as PreferencesUpdate;\r\n      // TODO check data\r\n\r\n      const newUsers = [...users];\r\n      const changedUserIndex = newUsers.findIndex(user => user.steamId === data.steamId);\r\n      if (changedUserIndex !== -1) {\r\n        console.log(`Updating preferences for ${newUsers[changedUserIndex].personaname} (${data.steamId})`, changedUserIndex);\r\n        newUsers[changedUserIndex].preferences = data.preferences;\r\n        setUsers(newUsers);\r\n      } else {\r\n        console.log(`Tried to update preferences for ${data.steamId} but did not find user`);\r\n      }\r\n    }\r\n\r\n    const handleError = (error: any) => {\r\n      const err = error as ErrorType;\r\n      err.timeout = 15000;\r\n      props.addError(err);\r\n      if (err.status === 550) {\r\n        setShowFriendslist(false);\r\n        return;\r\n      }\r\n      if (socket) socket.disconnect();\r\n      history.replace(\"/create\");\r\n    }\r\n\r\n    if (socket) {\r\n      socket.removeAllListeners(\"error\");\r\n      socket.removeAllListeners(\"session\");\r\n      socket.removeAllListeners(\"userJoined\");\r\n      socket.removeAllListeners(\"addCustomGame\");\r\n      socket.removeAllListeners(\"userDisconnect\");\r\n      socket.removeAllListeners(\"updateSettings\");\r\n      socket.removeAllListeners(\"updatePreferences\");\r\n\r\n      socket.on(\"error\", handleError);\r\n      socket.on(\"session\", handleSession);\r\n      socket.on(\"userJoined\", handleUserJoined);\r\n      socket.on(\"addCustomGame\", handleAddCustomGame);\r\n      socket.on(\"userDisconnect\", handleUserDisconnect);\r\n      socket.on(\"updateSettings\", handleUpdateSettings);\r\n      socket.on(\"updatePreferences\", handleUpdatePreferences);\r\n    }\r\n  }, [self, users, socket, props, history]);\r\n\r\n  useEffect(() => {\r\n    const socket = initiateSocket(props.steamId, props.settings, props.sessionId);\r\n    setSocket(socket);\r\n\r\n    socket.io.on(\"reconnect_failed\", () => {\r\n      console.log(\"Failed to reconnect\");\r\n      props.addError({ status: 500, msg: \"Lost connection to server\", timeout: 15000 });\r\n      history.push(\"/create\");\r\n    });\r\n    socket.io.on(\"reconnect_attempt\", (attempt) => {\r\n      const msg = `Lost connection to server, attempting to reconnect. Attempt (${attempt}/${socket.io.reconnectionAttempts()})`\r\n      console.log(msg);\r\n      props.addError({ status: 500, msg: msg, timeout: 6000 });\r\n    });\r\n\r\n    return () => {\r\n      console.log(\"#### disconnecting ###\");\r\n      if (socket) socket.disconnect();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.sessionId, props.steamId]);\r\n\r\n  // Update group preferences\r\n  useEffect(() => {\r\n    console.log(\"calculatePreferences\");\r\n    const appIds = props.settings.onlyCommonGames ? commonAppIds : [];\r\n    setMatchedGames(calculatePreferences(users.concat(self), appIds));\r\n  }, [users, self, props.settings.onlyCommonGames, commonAppIds]);\r\n\r\n  // Send preferences to backend when changed\r\n  useEffect(() => {\r\n    if (!preferencesChanged || !self.preferences) return;\r\n    if (!socket) {\r\n      console.error(\"Socket is not defined\");\r\n      return;\r\n    }\r\n    console.log(\"Sending preferences\");\r\n    socket.emit(\"updatePreferences\", self.preferences);\r\n    setPreferencesChanged(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [self.preferences, preferencesChanged])\r\n\r\n  const onDragEnd = (result: DropResult): void => {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n    const newSelf: User = { ...self } as User;\r\n    newSelf.preferences = reorderGames(\r\n      (self as User).preferences ?? [],\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n    if (gameSearch.length > 0) {\r\n      // Reset game search to avoid unwanted scrolling after changing preferences.\r\n      // Does not update value in UserHeader so the user can build upon the old search query.\r\n      setGameSearch(\"\");\r\n    }\r\n    setSelf(newSelf);\r\n    setPreferencesChanged(true);\r\n  }\r\n\r\n  const sortPreferences = (sortBy: \"total\" | \"recent\") => {\r\n    // select the correct sort function dependant on the sortBy argument\r\n    let sortFunc: (a: Game, b: Game) => number;\r\n    if (sortBy === \"total\") {\r\n      sortFunc = (a: Game, b: Game) => {\r\n        if (a.isCustom === b.isCustom) {\r\n          return b.playtime_forever - a.playtime_forever;\r\n        }\r\n        return a.isCustom ? -1 : 1;\r\n      };\r\n    } else {\r\n      sortFunc = (a: Game, b: Game) => {\r\n        if (a.isCustom === b.isCustom) {\r\n          const aPlaytime = a.playtime_2weeks ?? 0;\r\n          const bPlaytime = b.playtime_2weeks ?? 0;\r\n          if (aPlaytime === bPlaytime) {\r\n            // Fallback if playtime in the last two weeks is equal\r\n            return b.playtime_forever - a.playtime_forever;\r\n          }\r\n          return bPlaytime - aPlaytime;\r\n        } else {\r\n          return a.isCustom ? -1 : 1;\r\n        }\r\n      }\r\n    }\r\n    // Sort preferences using sortFunc\r\n    const newSelf: User = { ...self };\r\n    if (newSelf.preferences) {\r\n      newSelf.preferences = newSelf.preferences.sort(sortFunc);\r\n      setSelf(newSelf);\r\n      setPreferencesChanged(true);\r\n    }\r\n  }\r\n\r\n  const addCustomGame = (game: Game) => {\r\n    if (socket) {\r\n      console.log(\"Adding Custom Game\", game);\r\n      socket.emit(\"addCustomGame\", game);\r\n    }\r\n  }\r\n\r\n  // loading \r\n  if (!self.preferences) {\r\n    return <Loading className=\"v-centered\" center />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal visible={showFriendslist && typeof socket !== \"undefined\"} setVisible={setShowFriendslist}>\r\n        <FriendsList\r\n          socket={socket!}\r\n          sessionId={sessionId}\r\n          closeFriendsList={() => setShowFriendslist(false)}\r\n          steamId={self.steamId}\r\n        />\r\n      </Modal>\r\n      <Modal visible={showSettingsModal} setVisible={setShowSettingsModal}>\r\n        <Container className=\"settings-modal\">\r\n          <div className=\"settings-header\">\r\n            <h2>Settings</h2>\r\n            <AddButton onClick={() => setShowSettingsModal(false)} className=\"close-btn\" />\r\n          </div>\r\n          <Settings settings={props.settings} setSettings={updateSettings} isHost={initiatorId === self.steamId} />\r\n        </Container>\r\n      </Modal>\r\n      <CustomGameInput\r\n        visible={showCustomGameInput}\r\n        close={() => setShowCustomGameInput(false)}\r\n        addGame={addCustomGame}\r\n        addError={props.addError}\r\n      />\r\n      <Confirmation\r\n        visible={showLeaveModal}\r\n        onAbort={() => setShowLeaveModal(false)}\r\n        onConfirm={() => history.push(\"/create\")}\r\n        text=\"Do you really want to leave this session?\"\r\n        confirmText=\"Leave Session\"\r\n      />\r\n      <header className=\"header\">\r\n        <h1 className=\"title\" onClick={() => setShowLeaveModal(true)}>\r\n          {showFullName ? \"Common Steam Games\" : \"C.S.G.\"}\r\n        </h1>\r\n        <Button onClick={() => setShowSettingsModal(true)} className=\"show-settings-btn\">\r\n          Settings\r\n        </Button>\r\n      </header>\r\n      <Container\r\n        titles={[\"Your Preferences\", \"Group Preferences\", \"Peers Preferences\"]}\r\n        minTitles={[\"You\", \"Group\", \"Peers\"]}\r\n      >\r\n        <GamesList\r\n          games={self.preferences ?? []}\r\n          onlyCommonGames={props.settings.onlyCommonGames}\r\n          commonAppIds={commonAppIds}\r\n          onDragEnd={onDragEnd}\r\n          droppableId={`${self.personaname}'s Preferences`}\r\n          gameSearch={gameSearch}\r\n          header={\r\n            <UserHeader\r\n              title=\"Your Preferences\"\r\n              user={self}\r\n              onSearch={setGameSearch}\r\n              onSortByTotal={() => sortPreferences(\"total\")}\r\n              onSortByLastTwoWeeks={() => sortPreferences(\"recent\")}\r\n            />\r\n          }\r\n        />\r\n        <GamesList\r\n          games={matchedGames}\r\n          onlyCommonGames={props.settings.onlyCommonGames}\r\n          commonAppIds={commonAppIds}\r\n          header={\r\n            <GroupHeader\r\n              title=\"Group Preferences\"\r\n              gamesCount={matchedGames.length}\r\n              commonGames={props.settings.onlyCommonGames}\r\n              addCustomGame={() => setShowCustomGameInput(true)}\r\n              canAddCustomGames={initiatorId === self.steamId || props.settings.allCanAddCustomGames}\r\n            />}\r\n        />\r\n        <div className=\"peers\">\r\n          <Invite sessionId={sessionId}\r\n            className={users.length > 0 ? \"no-br-bottom\" : \"\"}\r\n            openFriendsList={() => setShowFriendslist(true)}\r\n          />\r\n          {users.map((user, index) =>\r\n            <Collapsible\r\n              header={<UserHeader title={`${user.personaname}'s preferences`} user={user} className=\"no-br no-bg\" />}\r\n              key={`${index}-${user.steamId}`}\r\n              title={`Show ${user.personaname ?? user.realname}'s' preferences`}\r\n            >\r\n              <GamesList\r\n                games={user.preferences ?? []}\r\n                onlyCommonGames={props.settings.onlyCommonGames}\r\n                commonAppIds={commonAppIds}\r\n                key={index}\r\n                className=\"no-br-top\"\r\n              />\r\n            </Collapsible>\r\n          )}\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Matching;\r\n","import React, { useEffect } from 'react'\nimport \"./error.css\"\n\nexport default function Error(props: {\n  error: ErrorType\n  removeError: () => void\n}) {\n  useEffect(() => {\n    const timeout = props.error.timeout;\n    let timer: NodeJS.Timeout | undefined;\n    if (timeout) {\n      timer = setTimeout(() => {\n        props.removeError();\n      }, timeout);\n    }\n    return () => {\n      if (timer) clearTimeout(timer);\n    };\n  }, [props]);\n\n  return (\n    <div className=\"error-popup\">\n      {props.error.msg}\n      <div className=\"error-close\" onClick={props.removeError}></div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Error from \"../error/Error\"\nimport \"./errorList.css\"\n\nexport default function ErrorList(props: {\n  errors: ErrorType[],\n  setErrors: (err: ErrorType[]) => void\n}) {\n  const getRemoveErrorFnc = (error: ErrorType) => {\n    return () => props.setErrors(props.errors.filter(err => err !== error));\n  }\n\n  return (\n    <div className=\"error-popup-list\">\n      <div>\n        {props.errors.map((error, index) => <Error removeError={getRemoveErrorFnc(error)} error={error} key={index} />)}\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport Button from \"../../components/button/Button\"\r\nimport Container from \"../../components/container/Container\";\r\nimport \"./about.css\"\r\n\r\nexport default function About() {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Container className=\"about\">\r\n      <Link to=\"/create\" className=\"title\">\r\n        <h1>About Common Steam Games</h1>\r\n      </Link>\r\n      <h2>What Is Common Steam Games?</h2>\r\n      <p>\r\n        Common Steam Games is a web application that enables groups of users\r\n        to discover common games regarding their steam accounts and vote on\r\n        games to find common preferences.\r\n      </p>\r\n      <h2>Use Case</h2>\r\n      <p>\r\n        Ever played with a group of friends and could not decide on what to\r\n        play? Then Common Steam Games is for you!\r\n      </p>\r\n      <p>\r\n        Create a session, invite your friends and instantly see your common\r\n        games. Sort your preferences using easy to use drag n drop and see\r\n        the group preferences adopt.\r\n        Find old classics or games you did not know all of you had in common.\r\n      </p>\r\n      <h2>Requirements</h2>\r\n      <p>\r\n        To allow Common Steam Games to access your steam games, your steam\r\n        profile and game details must be set to public.\r\n        <br />\r\n        Optionally: set friends list public to access it in this app.\r\n      </p>\r\n      <p>\r\n        If any of the above settings are not correct, you will receive an\r\n        error. You can change your settings under: <em>your profile</em> &gt;\r\n        edit profile &gt; privacy settings.\r\n      </p>\r\n      <h2>\r\n        Features\r\n      </h2>\r\n      <ul>\r\n        <li>Live sessions with your peers</li>\r\n        <li>Preference matching</li>\r\n        <li>Games search &amp; drag n drop</li>\r\n        <li>Steam games &amp; friendslist integration</li>\r\n        <li>Custom games for your favorite common, non-steam games</li>\r\n        <li><em>...</em></li>\r\n      </ul>\r\n      <h2>Contact</h2>\r\n      <p>\r\n        For suggestions, bug reports or other project related topics, feel\r\n        free to create an issue on{\" \"}\r\n        <a href=\"https://github.com/aliebald/common-steam-games\">GitHub</a>.\r\n        <br />\r\n        Otherwise, for general feedback or other inquiries, please contact me\r\n        via mail: contact.liebald (at) gmail.com.\r\n      </p>\r\n      <div className=\"about-nav\">\r\n        <Button onClick={history.goBack}>\r\n          Go&nbsp;Back\r\n        </Button>\r\n        <Button onClick={() => history.push(\"create\")}>\r\n          Create&nbsp;new&nbsp;Session\r\n        </Button>\r\n        <Button onClick={() => history.push(\"join\")}>\r\n          Join&nbsp;Session\r\n        </Button>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n","import { useState } from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport CreateSession from \"./pages/createSession/CreateSession\";\r\nimport Footer from \"./components/footer/Footer\";\r\nimport JoinSession from \"./pages/joinSession/JoinSession\";\r\nimport UnknownPage from \"./pages/unknownPage/UnknownPage\";\r\nimport Matching from \"./pages/matching/Matching\";\r\nimport ErrorList from \"./components/errorList/ErrorList\"\r\nimport About from \"./pages/about/About\";\r\n// import packageJSON from \"../package.json\"\r\nimport \"./styles/app.css\";\r\n\r\nexport default function App(this: any) {\r\n  const [steamId, setSteamId] = useState<string | undefined>(getSteamId());\r\n  const [joinSessionId, setJoinSessionId] = useState<string | undefined>(getSessionId());\r\n  const [errors, setErrors] = useState<ErrorType[]>([]);\r\n  const [settings, setSettings] = useState<Settings>({\r\n    onlyCommonGames: false,\r\n    allCanAddCustomGames: true,\r\n    defaultSort: \"total\"\r\n  })\r\n\r\n  const addError = (error: ErrorType) => {\r\n    setErrors(errors.concat(error));\r\n  }\r\n\r\n  const createNewSession = (steamId: string) => {\r\n    sessionStorage.setItem(\"steamId\", steamId);\r\n    sessionStorage.removeItem(\"sessionId\");\r\n\r\n    setSteamId(steamId);\r\n    setJoinSessionId(undefined);\r\n  }\r\n\r\n  const joinSession = (steamId: string, sessionId: string) => {\r\n    sessionStorage.setItem(\"steamId\", steamId);\r\n    sessionStorage.setItem(\"sessionId\", sessionId);\r\n\r\n    setSteamId(steamId);\r\n    setJoinSessionId(sessionId);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ErrorList errors={errors} setErrors={setErrors} />\r\n      <Router>{/*basename={packageJSON.subUrl}*/}\r\n        <Switch>\r\n          <Route path=\"/matching\" exact>\r\n            {!steamId ? (\r\n              <Redirect to=\"/\" />\r\n            ) : (\r\n              <Matching\r\n                steamId={steamId}\r\n                sessionId={joinSessionId}\r\n                addError={addError}\r\n                settings={settings}\r\n                setSettings={setSettings}\r\n              />\r\n            )}\r\n          </Route>\r\n          <Route path=\"/join\" exact>\r\n            {canAutoJoin() ? (\r\n              <Redirect to=\"/matching\" push />\r\n            ) : (\r\n              <JoinSession onSubmit={joinSession} sessionId={joinSessionId} steamId={steamId} />\r\n            )}\r\n          </Route>\r\n          <Route path=\"/create\" exact>\r\n            <CreateSession\r\n              onSubmit={createNewSession}\r\n              steamId={steamId}\r\n              settings={settings}\r\n              setSettings={setSettings}\r\n            />\r\n          </Route>\r\n          <Route path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/\" exact>\r\n            <Redirect to=\"/create\" />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <UnknownPage />\r\n          </Route>\r\n        </Switch>\r\n        <Footer />\r\n      </Router>\r\n      <div className=\"background\" />\r\n    </>\r\n  )\r\n}\r\n\r\n/**\r\n * Checks if a session id was passed in the url or is cached in the sessionStorage\r\n * @returns sessionId (string) or undefined\r\n */\r\nfunction getSessionId(): string | undefined {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const encodedSessionId = urlParams.get(\"sessionId\");\r\n  if (encodedSessionId) {\r\n    const sessionId = decodeURIComponent(encodedSessionId)\r\n    sessionStorage.setItem(\"sessionId\", sessionId);\r\n    return sessionId;\r\n  }\r\n  const cachedSessionId = sessionStorage.getItem(\"sessionId\");\r\n  if (cachedSessionId) {\r\n    return cachedSessionId;\r\n  }\r\n  return undefined;\r\n}\r\n\r\n/**\r\n * Checks if a steam id was passed in the url or is cached in the sessionStorage\r\n * @returns steamId (string) or undefined\r\n */\r\nfunction getSteamId(): string | undefined {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const encodedSteamId = urlParams.get(\"steamId\");\r\n  if (encodedSteamId) {\r\n    const steamId = decodeURIComponent(encodedSteamId);\r\n    sessionStorage.setItem(\"steamId\", steamId);\r\n    return steamId;\r\n  }\r\n  const cachedSteamId = sessionStorage.getItem(\"steamId\");\r\n  if (cachedSteamId) {\r\n    return cachedSteamId;\r\n  }\r\n  return undefined;\r\n}\r\n\r\nconst canAutoJoin = () => {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  return urlParams.has(\"steamId\") && urlParams.has(\"sessionId\");\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}