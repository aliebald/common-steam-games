{"version":3,"sources":["components/CreateSession.tsx","components/Footer.tsx","security/mail.js","components/JoinSession.tsx","components/UnknownPage.tsx","components/Collapsible.tsx","components/Tooltip.tsx","components/Button.tsx","components/UserCard.tsx","components/Game.tsx","components/DraggableGame.tsx","components/GamesList.tsx","components/Invite.tsx","components/Loading.tsx","components/SearchBar.tsx","components/UserHeader.tsx","components/GroupHeader.tsx","components/Friend.tsx","components/FriendsList.tsx","components/Switch.tsx","components/Settings.tsx","components/Tabs.tsx","components/Container.tsx","components/Modal.tsx","components/Confirmation.tsx","components/Matching.tsx","components/Error.tsx","components/ErrorList.tsx","components/About.tsx","App.tsx","index.tsx"],"names":["CreateSession","props","useState","steamId","setSteamId","history","useHistory","handleSubmit","event","a","preventDefault","onSubmit","push","className","htmlFor","type","name","id","onChange","target","value","defaultValue","placeholder","required","to","Footer","href","rel","title","onClick","encrypted","decrypted","i","length","charCodeAt","String","fromCharCode","charAt","window","open","toMail","src","packageJSON","subUrl","alt","height","width","JoinSession","sessionId","setSessionId","UnknownPage","Collapsible","collapsed","setCollapsed","hideContent","setHideContent","undefined","lastTimeout","setLastTimeout","clearTimeout","timeout","setTimeout","header","children","Tooltip","show","setShow","onMouseEnter","onMouseLeave","position","tooltip","Button","danger","UserCard","user","profileurl","avatarmedium","personaname","realname","Game","playtimeText","icon","playtime","Math","round","game","playtime_forever","Number","EPSILON","playtime2weeks","playtime_2weeks","isMatchedGame","weightPercentage","weight","num","toFixed","parseFloat","convertWeightToPercentage","appid","hash","hasImage","img_icon_url","loading","optionalAProps","isDnD","tabIndex","getStorePage","style","textDecoration","showOwners","Owners","owners","gameTitle","DnDHighlight","map","owner","index","avatar","DraggableGame","draggableId","provided","ref","innerRef","draggableProps","dragHandleProps","hide","areEqual","prevProps","nextProps","memo","GamesList","dndListRef","createRef","onlyCommonGames","useEffect","gameSearch","current","pos","depth","scrollHeight","getDepthForGame","search","match","similarity","games","forEach","commonAppIds","includes","compareTwoStrings","toLowerCase","console","log","searchGamePosition","scrollTo","top","behavior","droppableId","onDragEnd","droppableProps","filter","InnerList","React","highlightDnd","setHighlightDnd","timeoutStart","timeoutEnd","list","Invite","invite","location","origin","encodeURIComponent","readOnly","onFocus","select","navigator","clipboard","writeText","openFriendsList","Loading","centerInner","center","content","SearchBar","UserHeader","showSubheader","onSearch","onSortByTotal","onSortByLastTwoWeeks","subheader","query","preferences","GroupHeader","gamesCount","commonGames","Friend","friend","FriendsList","friends","setFriends","setFilter","setList","listRef","socket","on","msg","sessionStorage","setItem","JSON","stringify","cacheFriendsList","cached","getItem","parsed","parse","emit","loadFriendsList","removeAllListeners","mapToJSXElement","filterSimilarity","sort","b","warn","closeFriendsList","Switch","checked","Settings","settings","setSettings","Tabs","activeChild","setActiveChild","titles","Container","isDesktop","useMediaQuery","minTitles","Modal","listener","code","setVisible","document","addEventListener","removeEventListener","visible","Confirmation","onConfirm","onAbort","text","abortText","confirmText","reorder","startIndex","endIndex","result","Array","from","splice","removed","getCommonAppIds","users","appOwners","maxOwners","findIndex","elem","Matching","setUsers","self","setSelf","matchedGames","setMatchedGames","preferencesChanged","setPreferencesChanged","setSocket","showFriendslist","setShowFriendslist","showLeaveModal","setShowLeaveModal","setCommonAppIds","setGameSearch","showFullName","concat","error","err","addError","status","disconnect","replace","session","ownSteamId","you","newUsers","newSelf","find","data","changedUserIndex","io","reconnectionAttempts","initiateSocket","attempt","appIds","Map","maxGames","max","pref","matchedGame","isNaN","getWeight","has","get","img_logo_url","has_community_visible_stats","set","values","calculatePreferences","sortPreferences","sortBy","sortFunc","aPlaytime","bPlaytime","destination","source","Error","timer","removeError","ErrorList","getRemoveErrorFnc","setErrors","errors","About","goBack","App","encodedSteamId","URLSearchParams","decodeURIComponent","cachedSteamId","getSteamId","encodedSessionId","cachedSessionId","getSessionId","joinSessionId","setJoinSessionId","matching","path","exact","canAutoJoin","removeItem","urlParams","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1861f4bf.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom';\n\nexport default function CreateSession(props: {\n  steamId?: string,\n  onSubmit: (steamId: string) => void,\n}) {\n  const [steamId, setSteamId] = useState<string>(props.steamId ?? \"\");\n  const history = useHistory();\n\n  const handleSteamIdChange = (event: any) => {\n    setSteamId(event.target.value);\n  }\n\n  const handleSubmit = async (event: any) => {\n    event.preventDefault();\n    props.onSubmit(steamId);\n    history.push(\"/matching\");\n  }\n\n  return (\n    <div className=\"user-forms\">\n      <div className=\"create-session\">\n        <h2>Create a new Session</h2>\n        <form onSubmit={handleSubmit}>\n          <label htmlFor=\"createSessionSteamId\">Steam ID or Profile URL:</label>\n          <div className=\"steamId-input input-margin\">\n            <span className=\"profile-url\">https://steamcommunity.com/id/</span>\n            <input\n              type=\"text\"\n              name=\"steamId\"\n              id=\"createSessionSteamId\"\n              onChange={handleSteamIdChange}\n              className=\"d-table-cell\"\n              defaultValue={steamId}\n              placeholder=\"Steam ID or Profile URL\"\n              required\n            />\n          </div>\n          <input type=\"submit\" value=\"Create New Session\" className=\"btn\" />\n        </form>\n        <p className=\"t-center\">\n          Or <Link to=\"/join\">join a existing session</Link>\n        </p>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport packageJSON from \"../../package.json\"\nimport toMail from \"../security/mail\"\nimport \"../styles/footer.css\"\n\nexport default function Footer() {\n  return (\n    <div className=\"footer\">\n      <div className=\"f-left\">\n        This project is not affiliated with Valve or Steam\n      </div>\n      <div className=\"f-right\">\n        <Link to=\"about\" className=\"about\" >\n          About\n        </Link>\n        <a\n          className=\"impressum\"\n          href=\"https://aliebald.github.io/impressum/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          title=\"Impressum gemäß § 5 TMG\"\n        >\n          Impressum\n        </a>\n        <div title=\"Send me a mail\" onClick={() => toMail(\"𝕔𝕠𝕟𝕥𝕒𝕔𝕥.𝕝𝕚𝕖𝕓𝕒𝕝𝕕@𝕘𝕞𝕒𝕚𝕝.𝕔𝕠𝕞\")}>\n          <img src={`${packageJSON.subUrl}/email.svg`} alt=\"contact\" height=\"20px\" width=\"20px\" className=\"contact\" />\n        </div>\n        <a\n          href=\"https://github.com/aliebald/common-steam-games\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          title=\"GitHub Repository\"\n        >\n          <img src={`${packageJSON.subUrl}/github.svg`} alt=\"github\" height=\"18px\" width=\"18px\" className=\"github\" />\n        </a>\n      </div>\n    </div>\n  )\n}\n","/**\n * Takes an \"encrypted\" mail address, converts it to a real mail address\n * and opens the mailto link if possible\n * @param {string} encrypted - encrypted mail address written in\n *   lower-case mathematical double struck letters (𝕒-𝕫) and \"normal\"\n *   characters (all characters with character codes under 122)\n * @returns {void}\n * @author Leonard Goldstein\n * @see {@link https://github.com/goldst/goldst.github.io/blob/7d7e3c3c5eb9563fe83a47f62460e4536b9a3159/js/safety/safety.js}\n */\nexport default function toMail(encrypted) {\n  let decrypted = \"\";\n  for (let i = 0; i < encrypted.length; i++) {\n    if (encrypted.charCodeAt(i) > 122) {\n      decrypted += String.fromCharCode(\n        encrypted.charCodeAt(i + 1) - 56561\n      );\n\n      i++;\n    } else {\n      decrypted += encrypted.charAt(i);\n    }\n  }\n  window.open(\"mailto:\" + decrypted, \"_self\");\n};\n","import React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom';\n\nexport default function JoinSession(props: {\n  sessionId?: string,\n  steamId?: string,\n  onSubmit: (steamId: string, sessionId: string) => void,\n  id?: string\n}) {\n  const [steamId, setSteamId] = useState<string>(props.steamId ?? \"\");\n  const [sessionId, setSessionId] = useState<string>(props.sessionId ?? \"\");\n  const history = useHistory();\n  const handleSteamIdChange = (event: any) => {\n    setSteamId(event.target.value);\n  }\n\n  const handleSessionIdChange = (event: any) => {\n    setSessionId(event.target.value);\n  }\n\n  const handleSubmit = async (event: any) => {\n    event.preventDefault();\n    props.onSubmit(steamId, sessionId);\n    history.push(\"/matching\");\n  }\n\n  return (\n    <div className=\"user-forms\">\n      <div className=\"join-session\">\n        <h2>Join a Session</h2>\n        <form className=\"d-table\" onSubmit={handleSubmit}>\n          <div className=\"d-table-row\">\n            <label htmlFor=\"joinSessionSteamId\" className=\"d-table-cell\">Steam ID or Profile URL:</label>\n            <div className=\"steamId-input input-margin\">\n              <span className=\"profile-url\">https://steamcommunity.com/id/</span>\n              <input\n                type=\"text\"\n                name=\"steamId\"\n                id=\"joinSessionSteamId\"\n                onChange={handleSteamIdChange}\n                className=\"d-table-cell\"\n                defaultValue={steamId}\n                placeholder=\"Steam ID or Profile URL\"\n                required\n              />\n            </div>\n          </div>\n          <div className=\"d-table-row\">\n            <label htmlFor=\"sessionId\" className=\"d-table-cell\">Session ID:&nbsp;</label>\n            <input type=\"text\"\n              name=\"sessionId\"\n              id=\"sessionId\"\n              onChange={handleSessionIdChange}\n              className=\"d-table-cell input-margin\"\n              defaultValue={sessionId}\n              placeholder=\"Session ID\"\n              required\n            />\n          </div>\n          <div className=\"d-table-row\">\n            <div className=\"d-table-cell\"></div>\n            <div className=\"d-table-cell\">\n              <input type=\"submit\" value=\"Join Session\" className=\"btn\" />\n            </div>\n          </div>\n        </form>\n        <p className=\"t-center\">\n          Or <Link to=\"/\">create a new session</Link>\n        </p>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport \"../styles/unknownPage.css\"\n\n/**\n * Simple page for 404 errors\n */\nexport default function UnknownPage() {\n  return (\n    <div className=\"unknown-page\">\n      <p>The page you are looking for was not found.</p>\n      <p>You can <Link to=\"/create\">create a new session</Link> or <Link to=\"/join\">join an existing session</Link>.</p>\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\nimport \"./../styles/collapsible.css\"\n\nexport default function Collapsible(props: {\n  header?: string | JSX.Element,\n  title?: string,\n  children: JSX.Element\n}) {\n  const [collapsed, setCollapsed] = useState(true);\n  const [hideContent, setHideContent] = useState(true);\n  const [lastTimeout, setLastTimeout] = useState<NodeJS.Timeout | undefined>(undefined);\n\n  /* This component uses css transition to animate opening and closing.\n   * To remove the content after closing, we need to wait until the transition is finished.\n   * This is handled by \"toggle\"\n   */\n  const toggle = () => {\n    // Abort last timeout to avoid setting hideContent true,\n    // if the content was collapsed and opened again immediately \n    if (lastTimeout) {\n      clearTimeout(lastTimeout);\n      setLastTimeout(undefined);\n    }\n\n    // Toggle collapsed state. Hide content after animation delay\n    if (collapsed) {\n      setHideContent(false);\n    } else {\n      const timeout = setTimeout(() => setHideContent(true), 500);\n      setLastTimeout(timeout);\n    }\n    setCollapsed(!collapsed);\n  }\n\n  return (\n    <>\n      <button type=\"button\"\n        className={`collapsible${hideContent ? \" collapsed\" : \"\"}`}\n        onClick={toggle}\n        title={props.title}\n      >\n        {props.header ?? \"Open\"}\n        <div className={collapsed ? \"arrow-down\" : \"arrow-up\"}>\n          <div className=\"arrow-l\"></div>\n          <div className=\"arrow-r\"></div>\n        </div>\n      </button>\n      <div className={`content ${collapsed ? \"content-collapsed\" : \"\"}`}>\n        {hideContent ? <></> : props.children}\n      </div>\n    </>\n  )\n}\n","import React, { useState } from \"react\"\nimport \"../styles/tooltip.css\"\n\nexport default function Tooltip(props: {\n  children: JSX.Element,\n  tooltip: JSX.Element,\n  position: \"bottom\" | \"right\" | \"left\" | \"bottom-left\"\n}) {\n  const [show, setShow] = useState(false);\n\n  if (!show) {\n    return (\n      <div onMouseEnter={() => setShow(true)} onMouseLeave={() => setShow(false)}>\n        {props.children}\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"tooltip-wrapper\" onMouseEnter={() => setShow(true)} onMouseLeave={() => setShow(false)}>\n      <div className={`tooltip-popup ${props.position}`}>\n        {props.tooltip}\n      </div>\n      {props.children}\n    </div>\n  )\n}\n","import React from 'react'\r\n\r\nexport default function Button(props: {\r\n  className?: string,\r\n  onClick?: React.MouseEventHandler<HTMLButtonElement>,\r\n  danger?: boolean,\r\n  title?: string,\r\n  children?: JSX.Element | string\r\n}) {\r\n  const danger = props.danger ? \" danger\" : \"\"\r\n  return (\r\n    <button\r\n      className={`btn${danger} ${props.className ?? \"\"}`}\r\n      onClick={props.onClick}\r\n      title={props.title}\r\n    >\r\n      {props.children ?? \"\"}\r\n    </button>\r\n  )\r\n}\r\n","import React from \"react\"\nimport Button from \"./Button\"\nimport \"../styles/userCard.css\"\n\nexport default function UserCard(props: {\n  user: User,\n  className?: string\n}) {\n  const openSteamChat = () => {\n    window.open(`steam://friends/message/${props.user.steamId}`);\n  }\n\n  return (\n    <div className={`user-card ${props.className ?? \"\"}`}>\n      <a href={props.user.profileurl} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Steam profile\">\n        <img src={props.user.avatarmedium} alt=\"avatar\" height=\"64px\" width=\"64px\" />\n      </a>\n      <div className=\"user-details\">\n        <h3>{props.user.personaname}</h3>\n        <span className=\"realname\">{props.user.realname}</span>\n        <br />\n      </div>\n      <Button onClick={openSteamChat}>\n        Chat\n      </Button>\n    </div>\n  )\n}\n","import React from 'react'\r\nimport Tooltip from './Tooltip'\r\nimport UserCard from './UserCard'\r\nimport '../styles/game.css'\r\n\r\n\r\nexport default function Game(props: {\r\n  game: Game | MatchedGame,\r\n  showOwners?: boolean,\r\n  isDnD?: boolean,\r\n  DnDHighlight?: boolean // Increases brightness of dnd icon for a few seconds after first render\r\n}) {\r\n  const playtime = Math.round(((props.game.playtime_forever / 60) + Number.EPSILON) * 100) / 100\r\n  const playtime2weeks = props.game.playtime_2weeks ? Math.round(((props.game.playtime_2weeks / 60) + Number.EPSILON) * 100) / 100 : 0\r\n  const isMatchedGame = \"weight\" in (props.game as MatchedGame)\r\n\r\n  let playtimeText: string;\r\n  let weightPercentage = \"\";\r\n  if (isMatchedGame) {\r\n    weightPercentage = convertWeightToPercentage((props.game as MatchedGame).weight);\r\n    playtimeText = `Average Playtime: ${playtime}h`;\r\n  } else {\r\n    playtimeText = playtime2weeks > 0 ? `Playtime: ${playtime}h / ${playtime2weeks}h` : `Playtime: ${playtime}h`\r\n  }\r\n\r\n  let icon: JSX.Element;\r\n  const hasImage = props.game.img_icon_url.length > 0\r\n  if (hasImage) {\r\n    icon = <img\r\n      src={getImage(props.game.appid, props.game.img_icon_url)}\r\n      width=\"32\"\r\n      height=\"32\"\r\n      alt=\"icon\"\r\n      loading=\"lazy\"\r\n    />\r\n  } else {\r\n    icon = <div className=\"no-icon\"><span>?</span></div>\r\n  }\r\n\r\n  const optionalAProps = props.isDnD ? { tabIndex: -1 } : {};\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <a\r\n        className=\"img-link\"\r\n        href={getStorePage(props.game.appid)}\r\n        title={`${props.game.name} steam page`}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        style={hasImage ? {} : { textDecoration: \"none\" }}\r\n        {...optionalAProps}\r\n      >\r\n        {icon}\r\n      </a>\r\n      <div className={isMatchedGame || props.isDnD ? \"game-info no-br\" : \"game-info\"}>\r\n        <div className=\"title\">{props.game.name}</div>\r\n        <div className=\"playtime\">{playtimeText}</div>\r\n      </div>\r\n      {isMatchedGame ?\r\n        <div className=\"match-info\">\r\n          {props.showOwners ? <Owners owners={(props.game as MatchedGame).owners} gameTitle={props.game.name} /> : <></>}\r\n          <div className=\"weight\">Match:&nbsp;{weightPercentage}</div>\r\n        </div>\r\n        : <></>}\r\n      {props.isDnD ? <div className=\"dnd-icon\">\r\n        <img src=\"dnd_icon.svg\" alt=\"\" width=\"17\" height=\"32\" className={props.DnDHighlight ? \"highlight\" : \"\"} />\r\n      </div> : <></>}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Owners(props: { owners: User[], gameTitle: string }) {\r\n  return (\r\n    <>\r\n      {props.owners.map((owner, index) =>\r\n        <Tooltip position=\"bottom-left\" tooltip={<UserCard user={owner} />} key={index}>\r\n          <img\r\n            src={owner.avatar}\r\n            alt=\"\"\r\n            height=\"16px\"\r\n            width=\"16px\"\r\n            className=\"owner\"\r\n            loading=\"lazy\"\r\n          />\r\n        </Tooltip>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction getImage(appid: number | string, hash: number | string): string {\r\n  return `https://media.steampowered.com/steamcommunity/public/images/apps/${appid}/${hash}.jpg`;\r\n}\r\n\r\nfunction getStorePage(appid: number | string): string {\r\n  return `https://store.steampowered.com/app/${appid}`;\r\n}\r\n\r\nfunction convertWeightToPercentage(weight: number): string {\r\n  // Get weight as rounded percentage with 2 trailing decimals\r\n  const num = (Math.round(weight * 10000) / 100).toFixed(2);\r\n  // remove trailing zeros using parseFloat\r\n  return `${parseFloat(num)}%`;\r\n}\r\n","import React, { memo } from \"react\"\nimport { Draggable } from \"react-beautiful-dnd\"\nimport Game from \"./Game\"\n\ntype DraggableGameProps = {\n  game: Game,\n  index: number,\n  hide?: boolean,\n  DnDHighlight?: boolean\n}\n\nfunction DraggableGame(props: DraggableGameProps) {\n  return (\n    <Draggable draggableId={`${props.game.appid}`} index={props.index}>\n      {provided => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          {props.hide ? <></> :\n            <Game\n              game={props.game}\n              isDnD\n              DnDHighlight={props.DnDHighlight}\n            />\n          }\n        </div>\n      )}\n    </Draggable>\n\n  )\n}\n\nfunction areEqual(prevProps: DraggableGameProps, nextProps: DraggableGameProps) {\n  return (prevProps.game.appid === nextProps.game.appid\n    && prevProps.index === nextProps.index\n    && prevProps.hide === nextProps.hide\n    && prevProps.DnDHighlight === nextProps.DnDHighlight\n  );\n}\n\nexport default memo(DraggableGame, areEqual);\n","import { DragDropContext, Droppable, DropResult, ResponderProvided } from \"react-beautiful-dnd\";\r\nimport React, { createRef, RefObject, useEffect, useState } from \"react\"\r\nimport { compareTwoStrings } from \"string-similarity\";\r\nimport DraggableGame from \"./DraggableGame\";\r\nimport Game from \"./Game\";\r\n\r\n\r\nexport default function GamesList(props: {\r\n  games: Game[] | MatchedGame[],\r\n  onlyCommonGames?: boolean,\r\n  commonAppIds: number[],\r\n  droppableId?: string, // If this is given, the output list will be a drag & drop list\r\n  onDragEnd?: (result: DropResult, provided: ResponderProvided) => void,\r\n  header?: JSX.Element,\r\n  gameSearch?: string,\r\n  className?: string\r\n}) {\r\n  const header = props.header ?? \"\";\r\n  const dndListRef: RefObject<HTMLDivElement> = createRef();\r\n  const onlyCommonGames = props.onlyCommonGames ?? false;\r\n\r\n  useEffect(() => {\r\n    /** Finds the index of the game in games with the highest similarity with a search query */\r\n    const searchGamePosition = (search: string): number => {\r\n      let match = {\r\n        similarity: 0,\r\n        index: 0,\r\n        name: \"\"\r\n      };\r\n      props.games.forEach((game, index) => {\r\n        if (!props.onlyCommonGames || props.commonAppIds.includes(game.appid)) {\r\n          const similarity = compareTwoStrings(game.name.toLowerCase(), search.toLowerCase());\r\n          if (similarity > match.similarity) {\r\n            match = {\r\n              similarity: similarity,\r\n              index: index,\r\n              name: game.name\r\n            }\r\n          }\r\n        }\r\n      });\r\n      console.log(`Best match for game search (\"${search}\"): ${match.name}. Similarity: ${match.similarity}`);\r\n      return match.index;\r\n    }\r\n\r\n    /** Finds the depth in px of the game with the given index. Used for scrollTo() */\r\n    const getDepthForGame = (index: number) => {\r\n      if (!dndListRef.current) {\r\n        return 0;\r\n      }\r\n      let depth = 0;\r\n      for (let i = 0; i < index; i++) {\r\n        depth += dndListRef.current.children[0].children[i].scrollHeight;\r\n      }\r\n      return depth;\r\n    }\r\n\r\n    if (props.gameSearch && props.gameSearch.length > 1 && dndListRef.current) {\r\n      const index = searchGamePosition(props.gameSearch);\r\n      const pos = getDepthForGame(index);\r\n      dndListRef.current.scrollTo({ top: pos, behavior: \"smooth\" });\r\n    }\r\n  }, [dndListRef, props.games, props.gameSearch, props.commonAppIds, props.onlyCommonGames])\r\n\r\n  // Return games as drag & drop list\r\n  if (props.droppableId && props.onDragEnd) {\r\n    return (\r\n      <div className={`games-list ${props.className ?? \"\"}`}>\r\n        <DragDropContext onDragEnd={props.onDragEnd}>\r\n          {header}\r\n          <div className=\"scroll-container\" ref={dndListRef}>\r\n            <Droppable droppableId={props.droppableId}>\r\n              {provided => (\r\n                <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                  <InnerList\r\n                    games={props.games}\r\n                    onlyCommonGames={onlyCommonGames}\r\n                    commonAppIds={props.commonAppIds}\r\n                  />\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n        </DragDropContext>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // Return games as static list if droppableId or onDragEnd is not defined in props\r\n  const games = onlyCommonGames ? props.games.filter(game => props.commonAppIds.includes(game.appid)) : props.games;\r\n  return (\r\n    <div className={`games-list ${props.className ?? \"\"}`}>\r\n      {header}\r\n      <div className=\"scroll-container\">\r\n        {games.map((game, index) => <Game game={game} key={index} showOwners={!onlyCommonGames} />)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// do not re-render if the games list reference has not changed\r\nconst InnerList = React.memo(function InnerList(props: { games: Game[], commonAppIds: number[], onlyCommonGames: boolean }) {\r\n  const [highlightDnd, setHighlightDnd] = useState(false);\r\n\r\n  // Increases brightness of dnd icon for a few seconds after first render\r\n  useEffect(() => {\r\n    const timeoutStart = setTimeout(() => {\r\n      setHighlightDnd(true);\r\n    }, 1000);\r\n\r\n    const timeoutEnd = setTimeout(() => {\r\n      setHighlightDnd(false);\r\n    }, 6000);\r\n\r\n    return () => {\r\n      clearTimeout(timeoutStart);\r\n      clearTimeout(timeoutEnd);\r\n    }\r\n  }, []);\r\n\r\n  const list = props.games.map((game: Game, index: number) => {\r\n    if (!props.onlyCommonGames || props.commonAppIds.includes(game.appid)) {\r\n      return <DraggableGame key={game.appid} game={game} index={index} DnDHighlight={highlightDnd} />\r\n    } else {\r\n      return <DraggableGame key={game.appid} game={game} index={index} hide DnDHighlight={highlightDnd} />\r\n    }\r\n  })\r\n  return <>{list}</>\r\n});\r\n","import React from \"react\"\nimport packageJSON from \"../../package.json\"\nimport Button from \"./Button\";\nimport \"../styles/invite.css\"\n\nexport default function Invite(props: {\n  sessionId: string,\n  className?: string,\n  openFriendsList: () => void;\n}) {\n  const invite = `${window.location.origin}${packageJSON.subUrl}/?sessionId=${encodeURIComponent(props.sessionId)}#/join`;\n  const copyInvite = () => {\n    navigator.clipboard.writeText(invite);\n  }\n  const handleFocus = (event: any) => {\n    event.target.select()\n  }\n\n  return (\n    <div className={`invite-box ${props.className ?? \"\"}`}>\n      <label>Invite your friends</label>\n      <div className=\"invite-row\">\n        <input className=\"invite-input\"\n          type=\"text\"\n          value={invite}\n          readOnly\n          onFocus={handleFocus}\n          title=\"Invite link. Click 'Copy Invite' to copy this link\"\n        />\n        <Button onClick={copyInvite} title=\"Copy invite link\">\n          Copy&nbsp;Invite\n        </Button>\n        <Button\n          onClick={props.openFriendsList}\n          title={\"Open your friends list and create personalized invites. \"\n            + \"This allows your friends to directly join you without looking up their steamId.\"}\n        >\n          Open&nbsp;Friends&nbsp;List\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport \"../styles/loading.css\"\n\nexport default function Loading(props: {\n  className?: string,\n  center?: boolean\n}) {\n  // Loading animation from https://loading.io/css/\n  const centerInner = props.center ? \" v-centered\" : \"\"\n  const content = (\n    <div className={`lds-roller${centerInner} ${props.className ?? \"\"}`}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  )\n\n  if (props.center) {\n    return <div className=\"flex-center\">{content}</div>;\n  }\n\n  return content;\n}\n","import React from \"react\"\nimport \"./../styles/searchBar.css\"\n\nexport default function SearchBar(props: {\n  onChange: (str: string) => void,\n  className?: string,\n  title?: string,\n  placeholder?: string\n}) {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    props.onChange(event.target.value);\n  }\n\n  const handleSubmit = (event: any) => {\n    event.preventDefault();\n    props.onChange(event.target[0].value);\n  }\n\n  return (\n    <form className={`search-bar-form ${props.className ?? \"\"}`} onSubmit={handleSubmit}>\n      <input type=\"text\"\n        onChange={handleChange}\n        placeholder={props.placeholder}\n        title={props.title}\n      />\n      <button type=\"reset\">&times;</button>\n    </form>\n  )\n}\n","import React from \"react\"\r\nimport Button from \"./Button\"\r\nimport SearchBar from \"./SearchBar\";\r\nimport \"../styles/headers.css\"\r\n\r\nexport default function UserHeader(props: {\r\n  title: string,\r\n  user: User,\r\n  className?: string,\r\n  onSearch?: (filter: string) => void,\r\n  onSortByTotal?: () => void,\r\n  onSortByLastTwoWeeks?: () => void\r\n}) {\r\n  const showSubheader = typeof props.onSearch !== \"undefined\"\r\n    && typeof props.onSortByTotal !== \"undefined\"\r\n    && typeof props.onSortByLastTwoWeeks !== \"undefined\";\r\n\r\n  const handleSearchInput = (query: string) => {\r\n    if (typeof props.onSearch !== \"undefined\") {\r\n      props.onSearch(query);\r\n    }\r\n  }\r\n\r\n  const subheader = (\r\n    <div className=\"sub-header\">\r\n      <SearchBar\r\n        placeholder=\"Search Game\"\r\n        onChange={handleSearchInput}\r\n        title=\"Search for a game in your games\"\r\n      />\r\n      <span title=\"Sorts your games according to your total playtime or playtime in the last two weeks\">\r\n        Sort&nbsp;by:\r\n      </span>\r\n      <Button onClick={props.onSortByLastTwoWeeks} title=\"Sorts your games according to your playtime in the last two weeks\">\r\n        Last&nbsp;2&nbsp;Weeks\r\n      </Button>\r\n      <Button onClick={props.onSortByTotal} title=\"Sorts your games according to your total playtime\">\r\n        Total\r\n      </Button>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <div className={`user-header ${showSubheader ? \"has-subheader\" : \"\"} ${props.className ?? \"\"}`}>\r\n        <a href={props.user.profileurl} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Steam profile\">\r\n          <img\r\n            src={props.user.avatarmedium}\r\n            width=\"45\"\r\n            height=\"45\"\r\n            alt=\"avatar\"\r\n          />\r\n        </a>\r\n        <div className=\"user-details\">\r\n          <h2>{props.title}</h2>\r\n          {props.user.preferences ? <div>{props.user.preferences.length}&nbsp;Games</div> : \"\"}\r\n        </div>\r\n      </div>\r\n      {showSubheader ? subheader : <></>}\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\"\nimport \"../styles/headers.css\"\n\nexport default function GroupHeader(props: {\n  title: string,\n  gamesCount: number,\n  commonGames: boolean,\n  className?: string\n}) {\n  return (\n    <div className={`group-header ${props.className ?? \"\"}`}>\n      <div className=\"group-details\">\n        <h2>{props.title}</h2>\n        <div>{props.gamesCount}&nbsp;{props.commonGames ? \"Common Games\" : \"Games\"}</div>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport packageJSON from \"../../package.json\"\nimport Button from \"./Button\";\n\nimport \"../styles/friend.css\"\n\nexport default function Friend(props: {\n  friend: Friend,\n  sessionId: string\n}) {\n  const friend = props.friend;\n  const personaname = (friend.personaname ?? friend.realname) ?? \"\";\n  const invite = `${window.location.origin}${packageJSON.subUrl}/?sessionId=${encodeURIComponent(props.sessionId)}&steamId=${props.friend.steamId}#join`;\n  const copyInvite = () => {\n    navigator.clipboard.writeText(invite);\n  }\n  const openSteamChat = () => {\n    window.open(`steam://friends/message/${friend.steamId}`)\n  }\n\n  return (\n    <div className=\"friend\">\n      <div className=\"friend-info\">\n        <a href={friend.profileurl} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Steam profile\">\n          <img\n            src={friend.avatarmedium}\n            width=\"45\"\n            height=\"45\"\n            alt=\"avatar\"\n          />\n        </a>\n        <div className=\"friend-personal\">\n          <div>{friend.personaname ?? \"\"}</div>\n          {friend.realname ? <div className=\"realname\">{friend.realname}</div> : \"\"}\n        </div>\n      </div>\n      <div className=\"buttons\">\n        <Button\n          onClick={openSteamChat}\n          title={`Opens the steam chat with ${personaname}, if steam is installed.`}\n        >\n          Steam&nbsp;Chat\n        </Button>\n        <Button\n          onClick={copyInvite}\n          title={`Copies a personalized invite for ${personaname}. This allows ${personaname} to join without entering a steamId`}\n        >\n          Copy&nbsp;Invite\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React, { RefObject, useEffect, useState } from \"react\"\r\nimport { compareTwoStrings } from \"string-similarity\";\r\nimport { Socket } from \"socket.io-client\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport Loading from \"./Loading\";\r\nimport Friend from \"./Friend\";\r\nimport Button from \"./Button\";\r\nimport \"../styles/friendslist.css\"\r\n\r\nexport default function FriendsList(props: {\r\n  socket: Socket,\r\n  sessionId: string,\r\n  steamId: string,\r\n  closeFriendsList: () => void;\r\n}) {\r\n  const [friends, setFriends] = useState<Friend[]>([]);\r\n  const [filter, setFilter] = useState<string>(\"\");\r\n  const [list, setList] = useState<JSX.Element[]>([]);\r\n  const listRef: RefObject<HTMLDivElement> = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const cacheFriendsList = (friends: Friend[]) => {\r\n      sessionStorage.setItem(\"friends\", JSON.stringify({\r\n        friends: friends,\r\n        steamId: props.steamId\r\n      }));\r\n    }\r\n\r\n    const loadFriendsList = () => {\r\n      const cached = sessionStorage.getItem(\"friends\");\r\n      if (typeof cached === \"string\") {\r\n        const parsed = JSON.parse(cached);\r\n        if (parsed.steamId === props.steamId) {\r\n          setFriends(parsed.friends as Friend[]);\r\n          return;\r\n        }\r\n      }\r\n      // request from server if not cached\r\n      props.socket.emit(\"getFriendsList\");\r\n    }\r\n\r\n    // set listener and request data\r\n    props.socket.on(\"friendsList\", (msg: any) => {\r\n      console.log(\"friendsList\", msg);\r\n      cacheFriendsList(msg as Friend[]);\r\n      setFriends(msg as Friend[]);\r\n    });\r\n\r\n    loadFriendsList();\r\n\r\n    return () => {\r\n      props.socket.removeAllListeners(\"friendsList\");\r\n    }\r\n  }, [props.socket, props.steamId])\r\n\r\n  // Updates Friendslist when friends are loaded or the search is used\r\n  useEffect(() => {\r\n    const addSimilarity = (friend: Friend): Friend => {\r\n      let similarity = compareTwoStrings(friend.personaname.toLowerCase(), filter.toLowerCase());\r\n      if (friend.realname) {\r\n        similarity += compareTwoStrings(friend.realname.toLowerCase(), filter.toLowerCase());\r\n        similarity /= 2;\r\n      }\r\n      return { ...friend, filterSimilarity: similarity };\r\n    }\r\n\r\n    const sortBySimilarity = (a: Friend, b: Friend) => {\r\n      if (a.filterSimilarity === undefined || b.filterSimilarity === undefined) {\r\n        console.warn(\"filterSimilarity is not defined\");\r\n        return 0;\r\n      }\r\n      return b.filterSimilarity - a.filterSimilarity;\r\n    }\r\n\r\n    const mapToJSXElement = (friend: Friend) => (\r\n      <Friend friend={friend} key={friend.steamId} sessionId={props.sessionId} />\r\n    );\r\n\r\n    if (filter.length < 2) {\r\n      setList(friends.map(mapToJSXElement));\r\n    } else {\r\n      // Apply filter\r\n      setList(friends.map(addSimilarity).sort(sortBySimilarity).map(mapToJSXElement));\r\n    }\r\n  }, [filter, friends, props.sessionId])\r\n\r\n  const handleSearch = (query: string) => {\r\n    setFilter(query);\r\n    if (listRef.current) {\r\n      listRef.current.scrollTo({ top: 0, behavior: 'smooth' });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"friends\">\r\n      <div className=\"friendslist-header\">\r\n        <SearchBar className=\"friend-search\" onChange={handleSearch} placeholder=\"Search Friends\" />\r\n        <Button onClick={props.closeFriendsList} danger>&nbsp;Close&nbsp;Friends&nbsp;</Button>\r\n      </div>\r\n      <div className=\"list\" ref={listRef}>\r\n        {friends.length === 0 ? <Loading center /> : list}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\nimport \"../styles/switch.css\"\n\nexport default function Switch(props: {\n  onChange: (onlyCommonGames: boolean) => void,\n  checked?: boolean,\n  className?: string\n}) {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    props.onChange(event.target.checked);\n  }\n\n  const content = (\n    <div className=\"switch\">\n      <input type=\"checkbox\" onChange={handleChange} checked={props.checked} />\n      <span className=\"slider\"></span>\n    </div>\n  )\n\n  if (props.className) {\n    return <div className={props.className}>{content}</div>;\n  }\n  return content;\n}\n","import React from \"react\"\nimport Switch from \"./Switch\"\nimport \"../styles/settings.css\"\n\nexport default function Settings(props: {\n  settings: Settings,\n  setSettings: (settings: Settings) => void\n}) {\n  const setOnlyCommonGames = (onlyCommonGames: boolean) => {\n    const settings = { ...props.settings };\n    settings.onlyCommonGames = onlyCommonGames;\n    props.setSettings(settings);\n  }\n\n  return (\n    <div className=\"settings\">\n      <label>Only&nbsp;Common&nbsp;Games\n        <Switch className=\"padding-switch\" onChange={setOnlyCommonGames} checked={props.settings.onlyCommonGames} />\n      </label>\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\nimport Button from \"./Button\";\nimport \"./../styles/tabs.css\"\n\nexport default function Tabs(props: {\n  children: JSX.Element[],\n  titles: string[],\n  className?: string\n}) {\n  const [activeChild, setActiveChild] = useState(0);\n\n  return (\n    <div className={props.className}>\n      <ul className=\"tabs\">\n        {props.titles.map((title, index) => (\n          <li key={index}\n            className={`tabs-item ${activeChild === index ? \" active\" : \"\"}`}\n          >\n            <Button onClick={() => setActiveChild(index)}>\n              {title}\n            </Button>\n          </li>\n        ))}\n      </ul>\n      {props.children[activeChild]}\n    </div >\n  )\n}\n","import React from \"react\"\nimport { useMediaQuery } from \"react-responsive\"\nimport Tabs from \"./Tabs\";\nimport \"./../styles/container.css\"\n\nexport default function Container(props: {\n  children: JSX.Element[],\n  titles: string[],\n  minTitles: string[]\n}) {\n  const isDesktop = useMediaQuery({ query: '(min-width: 1100px)' });\n  const showMinTitles = useMediaQuery({ query: '(max-width: 450px)' });\n  const titles = showMinTitles ? props.minTitles : props.titles;\n\n  if (!isDesktop) {\n    return (\n      <Tabs titles={titles} className=\"container-tabs\">\n        {props.children}\n      </Tabs>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      {props.children}\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\"\nimport \"./../styles/modal.css\"\n\nexport default function Modal(props: {\n  children: JSX.Element,\n  visible: boolean,\n  setVisible: (visible: boolean) => void\n}) {\n  /* close if esc is pressed */\n  useEffect(() => {\n    const listener = (event: any) => {\n      if (event.code === \"Escape\") {\n        event.preventDefault();\n        props.setVisible(false);\n      }\n    };\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n  }, [props]);\n\n  if (!props.visible) {\n    return <></>;\n  }\n\n  const close = () => {\n    props.setVisible(false);\n  }\n\n  return (\n    <div className=\"modal\">\n      <div className=\"blur-bg\" onClick={close}></div>\n      {props.children}\n    </div>\n  )\n}\n","import React, { useEffect } from \"react\"\nimport Button from \"./Button\"\nimport Modal from \"./Modal\"\nimport \"./../styles/confirmation.css\"\n\nexport default function Confirmation(props: {\n  text: string,\n  abortText?: string,\n  confirmText?: string,\n  visible?: boolean,\n  onAbort: () => void,\n  onConfirm: () => void\n}) {\n  const handleModal = (visible: boolean) => {\n    if (!visible) {\n      props.onAbort();\n    }\n  }\n\n  const confirm = (event: any) => {\n    event.preventDefault();\n    props.onConfirm();\n  }\n  const abort = (event: any) => {\n    event.preventDefault();\n    props.onAbort();\n  }\n\n  /* confirm if enter is pressed */\n  useEffect(() => {\n    const listener = (event: any) => {\n      if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n        event.preventDefault();\n        props.onConfirm();\n      }\n    };\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n  }, [props]);\n\n  return (\n    <Modal visible={props.visible ?? true} setVisible={handleModal}>\n      <div className=\"confirmation\">\n        <p className=\"text\">{props.text}</p>\n        <div className=\"confirmation-footer\">\n          <Button onClick={abort}>\n            {props.abortText ? props.abortText : \"Abort\"}\n          </Button>\n          <Button onClick={confirm} danger>\n            {props.confirmText ? props.confirmText : \"Confirm\"}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  )\n}\n","import { useEffect, useState } from \"react\";\r\nimport { DropResult } from \"react-beautiful-dnd\";\r\nimport { io, Socket } from \"socket.io-client\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport Collapsible from \"./Collapsible\";\r\nimport GamesList from \"./GamesList\";\r\nimport Invite from \"./Invite\";\r\nimport Loading from \"./Loading\";\r\nimport UserHeader from \"./UserHeader\";\r\nimport GroupHeader from \"./GroupHeader\";\r\nimport FriendsList from \"./FriendsList\";\r\nimport Settings from \"./Settings\";\r\nimport Container from \"./Container\";\r\nimport Confirmation from \"./Confirmation\";\r\nimport Modal from \"./Modal\";\r\n\r\nfunction initiateSocket(steamId: string, sessionId?: string) {\r\n  let query;\r\n  if (sessionId) {\r\n    query = { steamId: steamId, sessionId: sessionId };\r\n  } else {\r\n    query = { steamId: steamId };\r\n  }\r\n  const url = process.env.NODE_ENV === \"production\" ? \"https://common-steam-games.herokuapp.com/\" : \"http://localhost:3030\";\r\n  return io(url, {\r\n    query: query,\r\n    reconnectionAttempts: 4\r\n  });\r\n}\r\n\r\nfunction Matching(props: {\r\n  steamId: string,\r\n  sessionId?: string,\r\n  addError: (error: ErrorType) => void\r\n}) {\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [self, setSelf] = useState<User>({ steamId: props.steamId });\r\n  const [matchedGames, setMatchedGames] = useState<MatchedGame[]>([]);\r\n  const [sessionId, setSessionId] = useState<string>(\"\");\r\n  const [preferencesChanged, setPreferencesChanged] = useState(false);\r\n  const [socket, setSocket] = useState<Socket | undefined>(undefined);\r\n  const [showFriendslist, setShowFriendslist] = useState<boolean>(false);\r\n  const [showLeaveModal, setShowLeaveModal] = useState<boolean>(false);\r\n  const [settings, setSettings] = useState<Settings>({ onlyCommonGames: true });\r\n  const [commonAppIds, setCommonAppIds] = useState<number[]>([]);\r\n  const [gameSearch, setGameSearch] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n  const showFullName = useMediaQuery({ query: '(min-width: 530px)' });\r\n\r\n  /** updates settings (state) and sends updateSettings event to backend */\r\n  const updateSettings = (settings: Settings) => {\r\n    if (socket) {\r\n      console.log(\"Sending settings\");\r\n      socket.emit(\"updateSettings\", settings);\r\n    }\r\n    setSettings(settings);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setCommonAppIds(getCommonAppIds(users.concat(self)));\r\n  }, [users, self])\r\n\r\n  useEffect(() => {\r\n    const handleSession = (msg: any) => {\r\n      console.log(\"Received session:\", msg);\r\n      if (!msg) return;\r\n      if (users.length > 0) {\r\n        console.warn(\"Received session but already is part of a session\");\r\n        return;\r\n      }\r\n\r\n      const session = msg as Session;\r\n      const ownSteamId = session.you ?? self.steamId;\r\n      const newUsers = session.users.filter(user => user.steamId !== ownSteamId);\r\n      const newSelf = session.users.find(user => user.steamId === ownSteamId);\r\n      if (!newSelf) {\r\n        props.addError({ status: 400, msg: \"Failed to connect to session. Did not find self.\" });\r\n        if (socket) socket.disconnect();\r\n        history.replace(\"/create\");\r\n        return;\r\n      }\r\n\r\n      sessionStorage.setItem(\"sessionId\", session.sessionId);\r\n      setSessionId(session.sessionId);\r\n      setSelf(newSelf);\r\n      setUsers(newUsers);\r\n      if (session.settings) {\r\n        setSettings(session.settings);\r\n      }\r\n    }\r\n\r\n    const handleUserJoined = (msg: any) => {\r\n      console.log(\"Received handleUserJoined:\", msg, \"users:\", users);\r\n      const newUsers = [...users];\r\n      newUsers.push(msg as User);\r\n      setUsers(newUsers);\r\n    }\r\n\r\n    const handleUserDisconnect = (msg: any) => {\r\n      console.log(\"Received handleUserDisconnect:\", msg, \"users:\", users);\r\n      const newUsers = users.filter(user => user.steamId !== msg as string);\r\n      setUsers(newUsers);\r\n    }\r\n\r\n    const handleUpdateSettings = (msg: any) => {\r\n      console.log(\"Received settings:\", msg);\r\n      setSettings(msg as Settings);\r\n    }\r\n\r\n    const handleUpdatePreferences = (msg: any) => {\r\n      console.log(\"Received updatePreferences:\", msg);\r\n      const data = msg as PreferencesUpdate;\r\n      // TODO check data\r\n\r\n      const newUsers = [...users];\r\n      const changedUserIndex = newUsers.findIndex(user => user.steamId === data.steamId);\r\n      if (changedUserIndex !== -1) {\r\n        console.log(`Updating preferences for ${newUsers[changedUserIndex].personaname} (${data.steamId})`, changedUserIndex);\r\n        newUsers[changedUserIndex].preferences = data.preferences;\r\n        setUsers(newUsers);\r\n      } else {\r\n        console.log(`Tried to update preferences for ${data.steamId} but did not find user`);\r\n      }\r\n    }\r\n\r\n    const handleError = (error: any) => {\r\n      const err = error as ErrorType;\r\n      err.timeout = 15000;\r\n      props.addError(err);\r\n      if (err.status === 550) {\r\n        setShowFriendslist(false);\r\n        return;\r\n      }\r\n      if (socket) socket.disconnect();\r\n      history.replace(\"/create\");\r\n    }\r\n\r\n    if (socket) {\r\n      socket.removeAllListeners(\"error\");\r\n      socket.removeAllListeners(\"session\");\r\n      socket.removeAllListeners(\"userJoined\");\r\n      socket.removeAllListeners(\"userDisconnect\");\r\n      socket.removeAllListeners(\"updateSettings\");\r\n      socket.removeAllListeners(\"updatePreferences\");\r\n\r\n      socket.on(\"error\", handleError);\r\n      socket.on(\"session\", handleSession);\r\n      socket.on(\"userJoined\", handleUserJoined);\r\n      socket.on(\"userDisconnect\", handleUserDisconnect);\r\n      socket.on(\"updateSettings\", handleUpdateSettings);\r\n      socket.on(\"updatePreferences\", handleUpdatePreferences);\r\n    }\r\n  }, [self.steamId, users, socket, props, history]);\r\n\r\n  useEffect(() => {\r\n    const socket = initiateSocket(props.steamId, props.sessionId);\r\n    setSocket(socket);\r\n\r\n    socket.io.on(\"reconnect_failed\", () => {\r\n      console.log(\"Failed to reconnect\");\r\n      props.addError({ status: 500, msg: \"Lost connection to server\", timeout: 15000 });\r\n      history.push(\"/create\");\r\n    });\r\n    socket.io.on(\"reconnect_attempt\", (attempt) => {\r\n      const msg = `Lost connection to server, attempting to reconnect. Attempt (${attempt}/${socket.io.reconnectionAttempts()})`\r\n      console.log(msg);\r\n      props.addError({ status: 500, msg: msg, timeout: 6000 });\r\n    });\r\n\r\n    return () => {\r\n      console.log(\"#### disconnecting ###\");\r\n      if (socket) socket.disconnect();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.sessionId, props.steamId]);\r\n\r\n  // Update group preferences\r\n  useEffect(() => {\r\n    console.log(\"calculatePreferences\");\r\n    const appIds = settings.onlyCommonGames ? commonAppIds : [];\r\n    setMatchedGames(calculatePreferences(users.concat(self), appIds));\r\n  }, [users, self, settings.onlyCommonGames, commonAppIds]);\r\n\r\n  // Send preferences to backend when changed\r\n  useEffect(() => {\r\n    if (!preferencesChanged || !self.preferences) return;\r\n    if (!socket) {\r\n      console.error(\"Socket is not defined\");\r\n      return;\r\n    }\r\n    console.log(\"Sending preferences\");\r\n    socket.emit(\"updatePreferences\", self.preferences);\r\n    setPreferencesChanged(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [self.preferences, preferencesChanged])\r\n\r\n  const onDragEnd = (result: DropResult): void => {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n    const newSelf: User = { ...self } as User;\r\n    newSelf.preferences = reorder(\r\n      (self as User).preferences ?? [],\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n    if (gameSearch.length > 0) {\r\n      // Reset game search to avoid unwanted scrolling after changing preferences.\r\n      // Does not update value in UserHeader so the user can build upon the old search query.\r\n      setGameSearch(\"\");\r\n    }\r\n    setSelf(newSelf);\r\n    setPreferencesChanged(true);\r\n  }\r\n\r\n  const sortPreferences = (sortBy: \"total\" | \"recent\") => {\r\n    // select the correct sort function dependant on the sortBy argument\r\n    let sortFunc: (a: Game, b: Game) => number;\r\n    if (sortBy === \"total\") {\r\n      sortFunc = (a: Game, b: Game) => b.playtime_forever - a.playtime_forever\r\n    } else {\r\n      sortFunc = (a: Game, b: Game) => {\r\n        const aPlaytime = a.playtime_2weeks ?? 0;\r\n        const bPlaytime = b.playtime_2weeks ?? 0;\r\n        if (aPlaytime === bPlaytime) {\r\n          // Fallback if playtime in the last two weeks is equal\r\n          return b.playtime_forever - a.playtime_forever;\r\n        }\r\n        return bPlaytime - aPlaytime;\r\n      }\r\n    }\r\n    // Sort preferences using sortFunc\r\n    const newSelf: User = { ...self };\r\n    if (newSelf.preferences) {\r\n      newSelf.preferences = newSelf.preferences.sort(sortFunc);\r\n      setSelf(newSelf);\r\n      setPreferencesChanged(true);\r\n    }\r\n  }\r\n\r\n  // loading \r\n  if (!self.preferences) {\r\n    return <Loading className=\"v-centered\" center />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal visible={showFriendslist && typeof socket !== \"undefined\"} setVisible={setShowFriendslist}>\r\n        <FriendsList\r\n          socket={socket!}\r\n          sessionId={sessionId}\r\n          closeFriendsList={() => setShowFriendslist(false)}\r\n          steamId={self.steamId}\r\n        />\r\n      </Modal>\r\n      <Confirmation\r\n        visible={showLeaveModal}\r\n        onAbort={() => setShowLeaveModal(false)}\r\n        onConfirm={() => history.push(\"/create\")}\r\n        text=\"Do you really want to leave this session?\"\r\n        confirmText=\"Leave Session\"\r\n      />\r\n      <header className=\"app-header\">\r\n        <h1 className=\"title\" onClick={() => setShowLeaveModal(true)}>\r\n          {showFullName ? \"Common Steam Games\" : \"C.S.G.\"}\r\n        </h1>\r\n        <Settings settings={settings} setSettings={updateSettings} />\r\n      </header>\r\n      <Container\r\n        titles={[\"Your Preferences\", \"Group Preferences\", \"Peers Preferences\"]}\r\n        minTitles={[\"You\", \"Group\", \"Peers\"]}\r\n      >\r\n        <GamesList\r\n          games={self.preferences ?? []}\r\n          onlyCommonGames={settings.onlyCommonGames}\r\n          commonAppIds={commonAppIds}\r\n          onDragEnd={onDragEnd}\r\n          droppableId={`${self.personaname}'s Preferences`}\r\n          gameSearch={gameSearch}\r\n          header={\r\n            <UserHeader\r\n              title=\"Your Preferences\"\r\n              user={self}\r\n              onSearch={setGameSearch}\r\n              onSortByTotal={() => sortPreferences(\"total\")}\r\n              onSortByLastTwoWeeks={() => sortPreferences(\"recent\")}\r\n            />\r\n          }\r\n        />\r\n        <GamesList\r\n          games={matchedGames}\r\n          onlyCommonGames={settings.onlyCommonGames}\r\n          commonAppIds={commonAppIds}\r\n          header={<GroupHeader title=\"Group Preferences\" gamesCount={matchedGames.length} commonGames={settings.onlyCommonGames} />}\r\n        />\r\n        <div className=\"peers\">\r\n          <Invite sessionId={sessionId}\r\n            className={users.length > 0 ? \"no-br-bottom\" : \"\"}\r\n            openFriendsList={() => setShowFriendslist(true)}\r\n          />\r\n          {users.map((user, index) =>\r\n            <Collapsible\r\n              header={<UserHeader title={`${user.personaname}'s preferences`} user={user} className=\"no-br no-bg\" />}\r\n              key={`${index}-${user.steamId}`}\r\n              title={`Show ${user.personaname ?? user.realname}'s' preferences`}\r\n            >\r\n              <GamesList\r\n                games={user.preferences ?? []}\r\n                onlyCommonGames={settings.onlyCommonGames}\r\n                commonAppIds={commonAppIds}\r\n                key={index}\r\n                className=\"no-br-top\"\r\n              />\r\n            </Collapsible>\r\n          )}\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction calculatePreferences(users: User[], commonAppIds: number[]): MatchedGame[] {\r\n  const matchedGames: Map<number, MatchedGame> = new Map();\r\n  const maxGames = commonAppIds.length > 0 ? commonAppIds.length : (\r\n    Math.max(...users.map(user => user.preferences ? user.preferences.length : 0)));\r\n\r\n  users.forEach(user => {\r\n    if (user.preferences) {\r\n      const preferences = commonAppIds.length > 0 ? (\r\n        user.preferences.filter(pref => commonAppIds.includes(pref.appid))\r\n      ) : user.preferences;\r\n\r\n      preferences.forEach((game, index) => {\r\n        const weight = getWeight(index, maxGames - 1);\r\n        let matchedGame: MatchedGame;\r\n        // Check if the game already exists. Otherwise add it to matchedGames.\r\n        if (matchedGames.has(game.appid)) {\r\n          matchedGame = matchedGames.get(game.appid)!;\r\n          matchedGame.weight += weight / users.length;\r\n          matchedGame.playtime_forever += game.playtime_forever / users.length;\r\n          if (matchedGame.owners) {\r\n            matchedGame.owners.push(user)\r\n          }\r\n        } else {\r\n          matchedGame = {\r\n            appid: game.appid,\r\n            name: game.name,\r\n            img_icon_url: game.img_icon_url,\r\n            img_logo_url: game.img_logo_url,\r\n            has_community_visible_stats: game.has_community_visible_stats ?? undefined,\r\n            playtime_2weeks: game.playtime_2weeks ? (game.playtime_2weeks / users.length) : undefined,\r\n            playtime_forever: game.playtime_forever / users.length,\r\n            weight: weight / users.length,\r\n            owners: [user]\r\n          };\r\n        }\r\n        matchedGames.set(game.appid, matchedGame);\r\n      });\r\n    }\r\n  });\r\n  const result = Array.from(matchedGames.values());\r\n  result.sort((a, b) => b.weight - a.weight);\r\n\r\n  return result\r\n}\r\n\r\nfunction getWeight(index: number, maxGames: number): number {\r\n  const weight = (maxGames - index) / maxGames;\r\n  return (!isNaN(weight) && weight >= 0) ? weight * weight : 0;\r\n}\r\n\r\nconst reorder = (games: Game[], startIndex: number, endIndex: number) => {\r\n  const result = Array.from(games);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n  return result;\r\n};\r\n\r\n/** Gets a list with appids for games owned by all users (incl. self) */\r\nconst getCommonAppIds = (users: User[]) => {\r\n  const appOwners: { appid: number, owners: number }[] = [];\r\n  let maxOwners = users.length;\r\n  for (const user of users) {\r\n    if (!user.preferences) {\r\n      maxOwners--;\r\n      continue;\r\n    }\r\n    for (const game of user.preferences) {\r\n      const index = appOwners.findIndex(elem => elem.appid === game.appid);\r\n      if (index >= 0) {\r\n        appOwners[index].owners++;\r\n      } else {\r\n        appOwners.push({ appid: game.appid, owners: 1 });\r\n      }\r\n    }\r\n  }\r\n  const ids = appOwners.filter(elem => elem.owners >= maxOwners).map(elem => elem.appid);\r\n  return ids;\r\n}\r\n\r\nexport default Matching;\r\n","import React, { useEffect } from 'react'\nimport \"../styles/error.css\"\n\nexport default function Error(props: {\n  error: ErrorType\n  removeError: () => void\n}) {\n  useEffect(() => {\n    const timeout = props.error.timeout;\n    let timer: NodeJS.Timeout | undefined;\n    if (timeout) {\n      timer = setTimeout(() => {\n        props.removeError();\n      }, timeout);\n    }\n    return () => {\n      if (timer) clearTimeout(timer);\n    };\n  }, [props]);\n\n  return (\n    <div className=\"error-popup\">\n      {props.error.msg}\n      <div className=\"error-close\" onClick={props.removeError}></div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Error from \"./Error\"\nimport \"../styles/error.css\"\n\nexport default function ErrorList(props: {\n  errors: ErrorType[],\n  setErrors: (err: ErrorType[]) => void\n}) {\n  const getRemoveErrorFnc = (error: ErrorType) => {\n    return () => props.setErrors(props.errors.filter(err => err !== error));\n  }\n\n  return (\n    <div className=\"error-popup-list\">\n      <div>\n        {props.errors.map((error, index) => <Error removeError={getRemoveErrorFnc(error)} error={error} key={index} />)}\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport Button from \"./Button\"\nimport \"./../styles/about.css\"\n\nexport default function About() {\n  const history = useHistory();\n\n  return (\n    <div className=\"about-wrapper\">\n      <div className=\"about\">\n        <Link to=\"/create\" className=\"title\">\n          <h1>About Common Steam Games</h1>\n        </Link>\n        <h2>What Is Common Steam Games?</h2>\n        <p>\n          Common Steam Games is a web application that enables groups of users\n          to discover common games regarding their steam accounts and vote on\n          games to find common preferences.\n        </p>\n        <h2>Use Case</h2>\n        <p>\n          Ever played with a group of friends and could not decide on what to\n          play? Then Common Steam Games is for you!\n        </p>\n        <p>\n          Create a session, invite your friends and instantly see your common\n          games. Sort your preferences using easy to use drag n drop and see\n          the group preferences adopt.\n          Find old classics or games you did not know all of you had in common.\n        </p>\n        <h2>Requirements</h2>\n        <p>\n          To allow Common Steam Games to access your steam games, your steam\n          profile and game details must be set to public.\n          <br />\n          Optionally: set friends list public to access it in this app.\n        </p>\n        <p>\n          If any of the above settings are not correct, you will receive an\n          error. You can change your settings under: <em>your profile</em> &gt;\n          edit profile &gt; privacy settings.\n        </p>\n        <h2>\n          Features\n        </h2>\n        <ul>\n          <li>Live sessions with your peers</li>\n          <li>Preference matching</li>\n          <li>Games search &amp; drag n drop</li>\n          <li>Steam games &amp; friendslist integration</li>\n          <li><em>...</em></li>\n        </ul>\n        <h2>Contact</h2>\n        <p>\n          For suggestions, bug reports or other project related topics, feel\n          free to create an issue on{\" \"}\n          <a href=\"https://github.com/aliebald/common-steam-games\">GitHub</a>.\n          <br />\n          Otherwise, for general feedback or other inquiries, please contact me\n          via mail: contact.liebald (at) gmail.com.\n        </p>\n        <div className=\"about-nav\">\n          <Button onClick={history.goBack}>\n            Go&nbsp;Back\n          </Button>\n          <Button onClick={() => history.push(\"create\")}>\n            Create&nbsp;new&nbsp;Session\n          </Button>\n          <Button onClick={() => history.push(\"join\")}>\n            Join&nbsp;Session\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState } from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport CreateSession from \"./components/CreateSession\";\r\nimport Footer from \"./components/Footer\";\r\nimport JoinSession from \"./components/JoinSession\";\r\nimport UnknownPage from \"./components/UnknownPage\";\r\nimport Matching from \"./components/Matching\";\r\nimport ErrorList from \"./components/ErrorList\"\r\nimport About from \"./components/About\";\r\n// import packageJSON from \"../package.json\"\r\nimport \"./styles/app.css\";\r\n\r\nexport default function App(this: any) {\r\n  const [steamId, setSteamId] = useState<string | undefined>(getSteamId());\r\n  const [joinSessionId, setJoinSessionId] = useState<string | undefined>(getSessionId());\r\n  const [errors, setErrors] = useState<ErrorType[]>([]);\r\n\r\n  const addError = (error: ErrorType) => {\r\n    setErrors(errors.concat(error));\r\n  }\r\n\r\n  const createNewSession = (steamId: string) => {\r\n    sessionStorage.setItem(\"steamId\", steamId);\r\n    sessionStorage.removeItem(\"sessionId\");\r\n\r\n    setSteamId(steamId);\r\n    setJoinSessionId(undefined);\r\n  }\r\n\r\n  const joinSession = (steamId: string, sessionId: string) => {\r\n    sessionStorage.setItem(\"steamId\", steamId);\r\n    sessionStorage.setItem(\"sessionId\", sessionId);\r\n\r\n    setSteamId(steamId);\r\n    setJoinSessionId(sessionId);\r\n  }\r\n\r\n  const matching = steamId ? <Matching steamId={steamId} sessionId={joinSessionId} addError={addError} /> : <Redirect to=\"/\" />\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <ErrorList errors={errors} setErrors={setErrors} />\r\n      <Router>{/*basename={packageJSON.subUrl}*/}\r\n        <Switch>\r\n          <Route path=\"/matching\" exact>\r\n            {matching}\r\n          </Route>\r\n          <Route path=\"/join\" exact>\r\n            {canAutoJoin() ? <Redirect to=\"/matching\" push /> :\r\n              <JoinSession onSubmit={joinSession} sessionId={joinSessionId} steamId={steamId} />}\r\n          </Route>\r\n          <Route path=\"/create\" exact>\r\n            <CreateSession onSubmit={createNewSession} steamId={steamId} />\r\n          </Route>\r\n          <Route path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/\" exact>\r\n            <Redirect to=\"/create\" />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <UnknownPage />\r\n          </Route>\r\n        </Switch>\r\n        <Footer />\r\n      </Router>\r\n      <div className=\"background\" />\r\n    </div>\r\n  )\r\n}\r\n\r\n/**\r\n * Checks if a session id was passed in the url or is cached in the sessionStorage\r\n * @returns sessionId (string) or undefined\r\n */\r\nfunction getSessionId(): string | undefined {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const encodedSessionId = urlParams.get(\"sessionId\");\r\n  if (encodedSessionId) {\r\n    const sessionId = decodeURIComponent(encodedSessionId)\r\n    sessionStorage.setItem(\"sessionId\", sessionId);\r\n    return sessionId;\r\n  }\r\n  const cachedSessionId = sessionStorage.getItem(\"sessionId\");\r\n  if (cachedSessionId) {\r\n    return cachedSessionId;\r\n  }\r\n  return undefined;\r\n}\r\n\r\n/**\r\n * Checks if a steam id was passed in the url or is cached in the sessionStorage\r\n * @returns steamId (string) or undefined\r\n */\r\nfunction getSteamId(): string | undefined {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const encodedSteamId = urlParams.get(\"steamId\");\r\n  if (encodedSteamId) {\r\n    const steamId = decodeURIComponent(encodedSteamId);\r\n    sessionStorage.setItem(\"steamId\", steamId);\r\n    return steamId;\r\n  }\r\n  const cachedSteamId = sessionStorage.getItem(\"steamId\");\r\n  if (cachedSteamId) {\r\n    return cachedSteamId;\r\n  }\r\n  return undefined;\r\n}\r\n\r\nconst canAutoJoin = () => {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  return urlParams.has(\"steamId\") && urlParams.has(\"sessionId\");\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}