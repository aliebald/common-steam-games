{"version":3,"sources":["components/CreateSession.tsx","components/Footer.tsx","security/mail.js","components/JoinSession.tsx","components/UnknownPage.tsx","components/Collapsible.tsx","components/Game.tsx","components/DraggableGame.tsx","components/GamesList.tsx","components/Button.tsx","components/Invite.tsx","components/Loading.tsx","components/UserHeader.tsx","components/GroupHeader.tsx","components/Friend.tsx","components/FriendsList.tsx","components/Switch.tsx","components/Settings.tsx","components/Matching.tsx","components/Error.tsx","components/ErrorList.tsx","App.tsx","index.tsx"],"names":["CreateSession","props","useState","steamId","setSteamId","history","useHistory","handleSubmit","event","a","preventDefault","onSubmit","push","className","type","name","id","onChange","target","value","defaultValue","required","to","Footer","href","rel","title","onClick","encrypted","decrypted","i","length","charCodeAt","String","fromCharCode","charAt","window","open","toMail","src","packageJSON","subUrl","alt","height","width","JoinSession","sessionId","setSessionId","htmlFor","UnknownPage","Collapsible","collapsed","setCollapsed","hideContent","setHideContent","undefined","lastTimeout","setLastTimeout","content","children","clearTimeout","timeout","setTimeout","header","Game","playtimeText","appid","playtime","Math","round","game","playtime_forever","Number","EPSILON","playtime2weeks","playtime_2weeks","weight","getImage","img_icon_url","hash","DraggableGame","draggableId","index","provided","ref","innerRef","draggableProps","dragHandleProps","GamesList","droppableId","onDragEnd","droppableProps","games","onlyCommonGames","commonAppIds","placeholder","filter","includes","map","InnerList","React","memo","list","Button","danger","Invite","invite","location","origin","encodeURIComponent","readOnly","onFocus","select","navigator","clipboard","writeText","openFriendsList","Loading","centerInner","center","UserHeader","user","profileurl","avatarmedium","preferences","GroupHeader","gamesCount","commonGamesCount","Friend","friend","personaname","realname","FriendsList","friends","setFriends","setFilter","setList","listRef","createRef","useEffect","socket","on","msg","console","log","emit","removeAllListeners","mapToJSXElement","similarity","compareTwoStrings","filterSimilarity","sort","b","warn","closeFriendsList","current","scrollTo","top","behavior","Switch","checked","Settings","settings","setSettings","reorder","startIndex","endIndex","result","Array","from","splice","removed","getCommonAppIds","users","appOwners","maxOwners","findIndex","elem","owners","Matching","setUsers","self","setSelf","matchedGames","setMatchedGames","preferencesChanged","setPreferencesChanged","setSocket","showFriendslist","setShowFriendslist","setCommonAppIds","concat","error","err","addError","status","disconnect","replace","session","newUsers","newSelf","find","data","changedUserIndex","query","io","reconnectionAttempts","initiateSocket","attempt","appIds","Map","maxGames","max","forEach","pref","matchedGame","isNaN","getWeight","has","get","img_logo_url","has_community_visible_stats","set","values","calculatePreferences","destination","source","Error","timer","removeError","ErrorList","getRemoveErrorFnc","setErrors","errors","App","encodedSteamId","URLSearchParams","search","decodeURIComponent","sessionStorage","setItem","cachedSteamId","getItem","getSteamId","encodedSessionId","cachedSessionId","getSessionId","joinSessionId","setJoinSessionId","switchToJoinPage","pathname","matching","basename","path","exact","canAutoJoin","removeItem","urlParams","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.582ca605.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom';\n\nexport default function CreateSession(props: {\n  steamId?: string,\n  onSubmit: (steamId: string) => void,\n}) {\n  const [steamId, setSteamId] = useState<string>(props.steamId ?? \"\");\n  const history = useHistory();\n\n  const handleSteamIdChange = (event: any) => {\n    setSteamId(event.target.value);\n  }\n\n  const handleSubmit = async (event: any) => {\n    event.preventDefault();\n    props.onSubmit(steamId);\n    history.push(\"/matching\");\n  }\n\n  return (\n    <div className=\"user-forms\">\n      <div className=\"create-session\">\n        <h2>Create a new Session</h2>\n        <form onSubmit={handleSubmit}>\n          <label>Steam Id:\n            <input type=\"number\"\n              name=\"steamId\"\n              id=\"createSessionSteamId\"\n              onChange={handleSteamIdChange}\n              className=\"d-table-cell\"\n              defaultValue={steamId}\n              required\n            />\n          </label>\n          <input type=\"submit\" value=\"Create New Session\" className=\"btn\" />\n        </form>\n        <p className=\"t-center\">\n          Or <Link to=\"/join\">join a existing session</Link>\n        </p>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport packageJSON from \"../../package.json\"\nimport toMail from \"../security/mail\"\nimport \"../styles/footer.css\"\n\nexport default function Footer() {\n  return (\n    <div className=\"footer\">\n      <div className=\"f-left\">\n        This project is not affiliated with Valve or Steam\n      </div>\n      <div className=\"f-right\">\n        <a\n          className=\"impressum\"\n          href=\"https://aliebald.github.io/impressum/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          title=\"Impressum gemäß § 5 TMG\"\n        >\n          Impressum\n        </a>\n        <div title=\"Send me a mail\" onClick={() => toMail(\"𝕔𝕠𝕟𝕥𝕒𝕔𝕥.𝕝𝕚𝕖𝕓𝕒𝕝𝕕@𝕘𝕞𝕒𝕚𝕝.𝕔𝕠𝕞\")}>\n          <img src={`${packageJSON.subUrl}/email.svg`} alt=\"contact\" height=\"20px\" width=\"20px\" className=\"contact\" />\n        </div>\n        <a\n          href=\"https://github.com/aliebald/common-steam-games\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          title=\"GitHub Repository\"\n        >\n          <img src={`${packageJSON.subUrl}/github.svg`} alt=\"github\" height=\"18px\" width=\"18px\" className=\"github\" />\n        </a>\n      </div>\n    </div>\n  )\n}\n","/**\n * Takes an \"encrypted\" mail address, converts it to a real mail address\n * and opens the mailto link if possible\n * @param {string} encrypted - encrypted mail address written in\n *   lower-case mathematical double struck letters (𝕒-𝕫) and \"normal\"\n *   characters (all characters with character codes under 122)\n * @returns {void}\n * @author Leonard Goldstein\n * @see {@link https://github.com/goldst/goldst.github.io/blob/7d7e3c3c5eb9563fe83a47f62460e4536b9a3159/js/safety/safety.js}\n */\nexport default function toMail(encrypted) {\n  let decrypted = \"\";\n  for (let i = 0; i < encrypted.length; i++) {\n    if (encrypted.charCodeAt(i) > 122) {\n      decrypted += String.fromCharCode(\n        encrypted.charCodeAt(i + 1) - 56561\n      );\n\n      i++;\n    } else {\n      decrypted += encrypted.charAt(i);\n    }\n  }\n  window.open(\"mailto:\" + decrypted, \"_self\");\n};\n","import React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom';\n\nexport default function JoinSession(props: {\n  sessionId?: string,\n  steamId?: string,\n  onSubmit: (steamId: string, sessionId: string) => void,\n  id?: string\n}) {\n  const [steamId, setSteamId] = useState<string>(props.steamId ?? \"\");\n  const [sessionId, setSessionId] = useState<string>(props.sessionId ?? \"\");\n  const history = useHistory();\n  const handleSteamIdChange = (event: any) => {\n    setSteamId(event.target.value);\n  }\n\n  const handleSessionIdChange = (event: any) => {\n    setSessionId(event.target.value);\n  }\n\n  const handleSubmit = async (event: any) => {\n    event.preventDefault();\n    props.onSubmit(steamId, sessionId);\n    history.push(\"/matching\");\n  }\n\n  return (\n    <div className=\"user-forms\">\n      <div className=\"join-session\">\n        <h2>Join a Session</h2>\n        <form className=\"d-table\" onSubmit={handleSubmit}>\n          <div className=\"d-table-row\">\n            <label htmlFor=\"steamId\" className=\"d-table-cell\">Steam Id:&nbsp;</label>\n            <input type=\"number\"\n              name=\"steamId\"\n              id=\"steamId\"\n              onChange={handleSteamIdChange}\n              className=\"d-table-cell\"\n              defaultValue={steamId}\n              required\n            />\n          </div>\n          <div className=\"d-table-row\">\n            <label htmlFor=\"sessionId\" className=\"d-table-cell\">Session Id:&nbsp;</label>\n            <input type=\"text\"\n              name=\"sessionId\"\n              id=\"sessionId\"\n              onChange={handleSessionIdChange}\n              className=\"d-table-cell\"\n              defaultValue={sessionId}\n              required\n            />\n          </div>\n          <div className=\"d-table-row\">\n            <div className=\"d-table-cell\"></div>\n            <div className=\"d-table-cell\">\n              <input type=\"submit\" value=\"Join Session\" className=\"btn\" />\n            </div>\n          </div>\n        </form>\n        <p className=\"t-center\">\n          Or <Link to=\"/\">create a new session</Link>\n        </p>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport \"../styles/unknownPage.css\"\n\n/**\n * Simple page for 404 errors\n */\nexport default function UnknownPage() {\n  return (\n    <div className=\"unknown-page\">\n      <p>The page you are looking for was not found.</p>\n      <p>You can <Link to=\"/create\">create a new session</Link> or <Link to=\"/join\">join an existing session</Link>.</p>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\n\nexport default function Collapsible(props: {\n  header?: string | JSX.Element,\n  children?: JSX.Element\n}) {\n  const [collapsed, setCollapsed] = useState(true);\n  const [hideContent, setHideContent] = useState(true);\n  const [lastTimeout, setLastTimeout] = useState<NodeJS.Timeout | undefined>(undefined);\n\n  const toggle = () => {\n    // Abort last timeout to avoid setting hideContent true,\n    // if the content was collapsed and opened again immediately \n    if (lastTimeout) {\n      clearTimeout(lastTimeout);\n      setLastTimeout(undefined);\n    }\n\n    // Toggle collapsed state. Hide content after animation delay\n    if (collapsed) {\n      setHideContent(false);\n    } else {\n      const timeout = setTimeout(() => setHideContent(true), 500);\n      setLastTimeout(timeout);\n    }\n    setCollapsed(!collapsed);\n  }\n\n  const content = props.children ?? \"No Content\";\n  return (\n    <>\n      <button type=\"button\" className=\"collapsible\" onClick={toggle}>\n        {props.header ?? \"Open\"}\n        <i className={collapsed ? \"arrow-down\" : \"arrow-up\"}></i>\n      </button>\n      <div className={`content ${collapsed ? \"content-collapsed\" : \"\"}`}>\n        {hideContent ? <></> : content}\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport '../styles/game.css'\n\n\nexport default function Game(props: { game: Game | MatchedGame }) {\n  const playtime = Math.round(((props.game.playtime_forever / 60) + Number.EPSILON) * 100) / 100\n  const playtime2weeks = props.game.playtime_2weeks ? Math.round(((props.game.playtime_2weeks / 60) + Number.EPSILON) * 100) / 100 : 0\n\n  let playtimeText: string;\n  if ((props.game as MatchedGame).weight) {\n    playtimeText = `Average Playtime ${playtime}h - w: ${(props.game as MatchedGame).weight}`;\n  } else {\n    playtimeText = playtime2weeks > 0 ? `Playtime: ${playtime}h / ${playtime2weeks}h` : `Playtime: ${playtime}h`\n  }\n\n\n  return (\n    <div className=\"game\">\n      <div className=\"gameInner\">\n        <a href={getStorePage(props.game.appid)} target=\"_blank\" rel=\"noopener noreferrer\" title={`${props.game.name} steam page`}>\n          <img\n            src={getImage(props.game.appid, props.game.img_icon_url)}\n            width=\"32\"\n            height=\"32\"\n            alt=\"icon\"\n          />\n        </a>\n        <div className=\"game-info\">\n          <div className=\"title\">{props.game.name}</div>\n          <div className=\"playtime\">{playtimeText}</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction getImage(appid: number | string, hash: number | string): string {\n  return `https://media.steampowered.com/steamcommunity/public/images/apps/${appid}/${hash}.jpg`\n}\n\nfunction getStorePage(appid: number | string): string {\n  return `https://store.steampowered.com/app/${appid}`\n}\n","import React from 'react'\nimport { Draggable } from 'react-beautiful-dnd'\nimport Game from './Game'\n\n\nexport default function DraggableGame(props: { game: Game, index: number, className?: string }) {\n  return (\n    <Draggable draggableId={`${props.game.appid}`} index={props.index}>\n      {provided => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          className={props.className}\n        >\n          <Game game={props.game} />\n        </div>\n      )}\n    </Draggable>\n\n  )\n}\n","import React from 'react'\nimport { DragDropContext, Droppable, DropResult, ResponderProvided } from \"react-beautiful-dnd\";\nimport DraggableGame from './DraggableGame';\nimport Game from './Game';\n\nexport default function GamesList(props: {\n  games: Game[] | MatchedGame[],\n  onlyCommonGames?: boolean,\n  commonAppIds: number[],\n  droppableId?: string, // If this is given, the output list will be a drag & drop list\n  onDragEnd?: (result: DropResult, provided: ResponderProvided) => void,\n  header?: JSX.Element,\n  className?: string\n}) {\n  const header = props.header ?? \"\";\n  if (props.droppableId && props.onDragEnd) {\n    return (\n      <div className={`games-list ${props.className ?? \"\"}`}>\n        <DragDropContext onDragEnd={props.onDragEnd}>\n          {header}\n          <div className=\"scroll-container\">\n            <Droppable droppableId={props.droppableId}>\n              {provided => (\n                <div {...provided.droppableProps} ref={provided.innerRef}>\n                  <InnerList\n                    games={props.games}\n                    onlyCommonGames={props.onlyCommonGames ?? false}\n                    commonAppIds={props.commonAppIds}\n                  />\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </div>\n        </DragDropContext>\n      </div>\n    )\n  }\n\n  const games = props.onlyCommonGames ? props.games.filter(game => props.commonAppIds.includes(game.appid)) : props.games;\n  return (\n    <div className={`games-list ${props.className ?? \"\"}`}>\n      {header}\n      <div className=\"scroll-container\">\n        {games.map((game, index) => <Game game={game} key={index} />)}\n      </div>\n    </div>\n  )\n}\n\n// do not re-render if the games list reference has not changed\nconst InnerList = React.memo(function InnerList(props: { games: Game[], commonAppIds: number[], onlyCommonGames: boolean }) {\n  // const games = props.onlyCommonGames ? props.games.filter(game => game.ownedByAll) : props.games;\n  const list = props.games.map((game: Game, index: number) => {\n    if (!props.onlyCommonGames || props.commonAppIds.includes(game.appid)) {\n      return <DraggableGame key={game.appid} game={game} index={index} />\n    } else {\n      return <DraggableGame key={game.appid} game={game} index={index} className=\"d-none\" />\n    }\n  })\n  return <>{list}</>\n});\n","import React from 'react'\n\nexport default function Button(props: {\n  className?: string,\n  onClick?: React.MouseEventHandler<HTMLButtonElement>,\n  danger?: boolean,\n  children?: JSX.Element | string\n}) {\n  const danger = props.danger ? \" danger\" : \"\"\n  return (\n    <button\n      className={`btn${danger} ${props.className ?? \"\"}`}\n      onClick={props.onClick}\n    >\n      {props.children ?? \"\"}\n    </button>\n  )\n}\n","import React from \"react\"\nimport packageJSON from \"../../package.json\"\nimport Button from \"./Button\";\nimport \"../styles/invite.css\"\n\nexport default function Invite(props: {\n  sessionId: string,\n  className?: string,\n  openFriendsList: () => void;\n}) {\n  const invite = `${window.location.origin}${packageJSON.subUrl}/join?sessionId=${encodeURIComponent(props.sessionId)}`;\n  const copyInvite = () => {\n    navigator.clipboard.writeText(invite);\n  }\n  const handleFocus = (event: any) => {\n    event.target.select()\n  }\n\n  return (\n    <div className={`invite-box ${props.className ?? \"\"}`}>\n      <label>Invite your friends</label>\n      <div className=\"invite-row\">\n        <input className=\"invite-input\" type=\"text\" value={invite} readOnly onFocus={handleFocus} />\n        <Button onClick={copyInvite}>Copy&nbsp;Invite</Button>\n        <Button onClick={props.openFriendsList}>Open&nbsp;Friends&nbsp;List</Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport \"../styles/loading.css\"\n\nexport default function Loading(props: {\n  className?: string,\n  center?: boolean\n}) {\n  // Loading animation from https://loading.io/css/\n  const centerInner = props.center ? \" v-centered\" : \"\"\n  const content = (\n    <div className={`lds-roller${centerInner} ${props.className ?? \"\"}`}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  )\n\n  if (props.center) {\n    return <div className=\"flex-center\">{content}</div>;\n  }\n\n  return content;\n}\n","import React from \"react\"\r\nimport \"../styles/headers.css\"\r\n\r\nexport default function UserHeader(props: {\r\n  title: string,\r\n  user: User,\r\n  className?: string\r\n}) {\r\n  return (\r\n    <div className={`user-header ${props.className ?? \"\"}`}>\r\n      <a href={props.user.profileurl} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Steam profile\">\r\n        <img\r\n          src={props.user.avatarmedium}\r\n          width=\"45\"\r\n          height=\"45\"\r\n          alt=\"avatar\"\r\n        />\r\n      </a>\r\n      <div className=\"user-details\">\r\n        <h2>{props.title}</h2>\r\n        {props.user.preferences ? <div>{props.user.preferences.length}&nbsp;Games</div> : \"\"}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\nimport \"../styles/headers.css\"\n\nexport default function GroupHeader(props: {\n  title: string,\n  gamesCount: number,\n  commonGamesCount: number,\n  className?: string\n}) {\n  return (\n    <div className={`group-header ${props.className ?? \"\"}`}>\n      <div className=\"group-details\">\n        <h2>{props.title}</h2>\n        <div>{props.gamesCount}&nbsp;Games / {props.commonGamesCount}&nbsp;Common&nbsp;Games</div>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport packageJSON from \"../../package.json\"\nimport Button from \"./Button\";\n\nimport \"../styles/friend.css\"\n\nexport default function Friend(props: {\n  friend: Friend,\n  sessionId: string\n}) {\n  const friend = props.friend;\n  const invite = `${window.location.origin}${packageJSON.subUrl}/join?sessionId=${encodeURIComponent(props.sessionId)}&steamId=${props.friend.steamId}`;\n  const copyInvite = () => {\n    navigator.clipboard.writeText(invite);\n  }\n  const openSteamChat = () => {\n    window.open(`steam://friends/message/${friend.steamId}`)\n  }\n\n  return (\n    <div className=\"friend\">\n      <div className=\"friend-info\">\n        <a href={friend.profileurl} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Steam profile\">\n          <img\n            src={friend.avatarmedium}\n            width=\"45\"\n            height=\"45\"\n            alt=\"avatar\"\n          />\n        </a>\n        <div className=\"friend-personal\">\n          <div>{friend.personaname}</div>\n          <div>{friend.realname ? <span>(<em>{friend.realname}</em>)</span> : \"\"}</div>\n        </div>\n      </div>\n      <div className=\"buttons\">\n        <Button onClick={openSteamChat}>Steam&nbsp;Chat</Button>\n        <Button onClick={copyInvite}>Copy&nbsp;Invite</Button>\n      </div>\n    </div>\n  )\n}\n","import React, { RefObject, useEffect, useState } from \"react\"\nimport { Socket } from \"socket.io-client\";\nimport Friend from \"./Friend\";\nimport Loading from \"./Loading\";\nimport { compareTwoStrings } from \"string-similarity\";\nimport \"../styles/friendslist.css\"\nimport Button from \"./Button\";\n\nexport default function FriendsList(props: {\n  socket: Socket,\n  sessionId: string,\n  closeFriendsList: () => void;\n}) {\n  const [friends, setFriends] = useState<Friend[]>([]);\n  const [filter, setFilter] = useState<string>(\"\");\n  const [list, setList] = useState<JSX.Element[]>([]);\n  const listRef: RefObject<HTMLDivElement> = React.createRef();\n\n  useEffect(() => {\n    // set listener and request data\n    props.socket.on(\"friendsList\", (msg: any) => {\n      console.log(\"friendsList\", msg);\n      setFriends(msg as Friend[]);\n    });\n    props.socket.emit(\"getFriendsList\");\n\n    return () => {\n      props.socket.removeAllListeners(\"friendslist\");\n    }\n  }, [props.socket])\n\n  // Updates Friendslist when friends are loaded or the search is used\n  useEffect(() => {\n    const addSimilarity = (friend: Friend): Friend => {\n      let similarity = compareTwoStrings(friend.personaname, filter);\n      if (friend.realname) {\n        similarity += compareTwoStrings(friend.realname, filter);\n        similarity /= 2;\n      }\n      return { ...friend, filterSimilarity: similarity };\n    }\n\n    const sortBySimilarity = (a: Friend, b: Friend) => {\n      if (a.filterSimilarity === undefined || b.filterSimilarity === undefined) {\n        console.warn(\"filterSimilarity is not defined\");\n        return 0;\n      }\n      return b.filterSimilarity - a.filterSimilarity;\n    }\n\n    const mapToJSXElement = (friend: Friend) => (\n      <Friend friend={friend} key={friend.steamId} sessionId={props.sessionId} />\n    );\n\n    if (filter.length < 2) {\n      setList(friends.map(mapToJSXElement));\n    } else {\n      // Apply filter\n      setList(friends.map(addSimilarity).sort(sortBySimilarity).map(mapToJSXElement));\n    }\n  }, [filter, friends, props.sessionId])\n\n  const handleFilterChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(event.target.value);\n    setFilter(event.target.value);\n    if (listRef.current) listRef.current.scrollTo({ top: 0, behavior: 'smooth' });\n  }\n\n  return (\n    <div className=\"friendslist\">\n      <div className=\"blur-bg\" onClick={props.closeFriendsList}></div>\n      <div className=\"friends\">\n        <div className=\"friendslist-header\">\n          <input className=\"friend-search\" type=\"text\" onChange={handleFilterChange} placeholder=\"Search Friends\" />\n          <Button onClick={props.closeFriendsList} danger>&nbsp;Close&nbsp;Friends&nbsp;</Button>\n        </div>\n        <div className=\"list\" ref={listRef}>\n          {friends.length === 0 ? <Loading center /> : list}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport \"../styles/switch.css\"\n\nexport default function Switch(props: {\n  onChange: (onlyCommonGames: boolean) => void,\n  checked?: boolean,\n  className?: string\n}) {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    props.onChange(event.target.checked);\n  }\n\n  const content = (\n    <div className=\"switch\">\n      <input type=\"checkbox\" onChange={handleChange} checked={props.checked} />\n      <span className=\"slider\"></span>\n    </div>\n  )\n\n  if (props.className) {\n    return <div className={props.className}>{content}</div>;\n  }\n  return content;\n}\n","import React from \"react\"\nimport Switch from \"./Switch\"\nimport \"../styles/settings.css\"\n\nexport default function Settings(props: {\n  settings: Settings,\n  setSettings: (settings: Settings) => void\n}) {\n  const setOnlyCommonGames = (onlyCommonGames: boolean) => {\n    const settings = { ...props.settings };\n    settings.onlyCommonGames = onlyCommonGames;\n    props.setSettings(settings);\n  }\n\n  return (\n    <div className=\"settings\">\n      <label>Only&nbsp;Common&nbsp;Games\n        <Switch className=\"padding-switch\" onChange={setOnlyCommonGames} checked={props.settings.onlyCommonGames} />\n      </label>\n    </div>\n  )\n}\n","import { useEffect, useState } from \"react\";\r\nimport { DropResult } from \"react-beautiful-dnd\";\r\nimport { io, Socket } from \"socket.io-client\";\r\nimport { useHistory } from \"react-router\";\r\nimport Collapsible from \"./Collapsible\";\r\nimport GamesList from \"./GamesList\";\r\nimport Invite from \"./Invite\";\r\nimport Loading from \"./Loading\";\r\nimport UserHeader from \"./UserHeader\";\r\nimport GroupHeader from \"./GroupHeader\";\r\nimport FriendsList from \"./FriendsList\";\r\nimport Settings from \"./Settings\";\r\n\r\nfunction initiateSocket(steamId: string, sessionId?: string) {\r\n  let query;\r\n  if (sessionId) {\r\n    query = { steamId: steamId, sessionId: sessionId };\r\n  } else {\r\n    query = { steamId: steamId };\r\n  }\r\n  const url = process.env.NODE_ENV === \"production\" ? \"https://common-steam-games.herokuapp.com/\" : \"http://localhost:3030\";\r\n  return io(url, {\r\n    query: query,\r\n    reconnectionAttempts: 4\r\n  });\r\n}\r\n\r\nfunction Matching(props: {\r\n  steamId: string,\r\n  sessionId?: string,\r\n  addError: (error: ErrorType) => void\r\n}) {\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [self, setSelf] = useState<User>({ steamId: props.steamId });\r\n  const [matchedGames, setMatchedGames] = useState<MatchedGame[]>([]);\r\n  const [sessionId, setSessionId] = useState<string>(\"\");\r\n  const [preferencesChanged, setPreferencesChanged] = useState(false);\r\n  const [socket, setSocket] = useState<Socket | undefined>(undefined);\r\n  const [showFriendslist, setShowFriendslist] = useState<boolean>(false);\r\n  const [settings, setSettings] = useState<Settings>({ onlyCommonGames: true });\r\n  const [commonAppIds, setCommonAppIds] = useState<number[]>([])\r\n  const history = useHistory();\r\n\r\n  /** updates settings (state) and sends updateSettings event to backend */\r\n  const updateSettings = (settings: Settings) => {\r\n    if (socket) {\r\n      console.log(\"Sending settings\");\r\n      socket.emit(\"updateSettings\", settings);\r\n    }\r\n    setSettings(settings);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"setCommonAppIds\");\r\n    setCommonAppIds(getCommonAppIds(users.concat(self)));\r\n  }, [users, self])\r\n\r\n  useEffect(() => {\r\n    const handleSession = (msg: any) => {\r\n      console.log(\"Received session:\", msg);\r\n      if (!msg) return;\r\n      if (users.length > 0) {\r\n        console.warn(\"Received session but already is part of a session\");\r\n        return;\r\n      }\r\n\r\n      const session = msg as Session;\r\n      const newUsers = session.users.filter(user => user.steamId !== self.steamId);\r\n      const newSelf = session.users.find(user => user.steamId === self.steamId);\r\n      if (!newSelf) {\r\n        props.addError({ status: 400, msg: \"Failed to connect to session. Did not find self.\" });\r\n        if (socket) socket.disconnect();\r\n        history.replace(\"/create\");\r\n        return;\r\n      }\r\n\r\n      setSessionId(session.sessionId);\r\n      setSelf(newSelf);\r\n      setUsers(newUsers);\r\n      if (session.settings) {\r\n        setSettings(session.settings);\r\n      }\r\n    }\r\n\r\n    const handleUserJoined = (msg: any) => {\r\n      console.log(\"Received handleUserJoined:\", msg, \"users:\", users);\r\n      const newUsers = [...users];\r\n      newUsers.push(msg as User);\r\n      setUsers(newUsers);\r\n    }\r\n\r\n    const handleUserDisconnect = (msg: any) => {\r\n      console.log(\"Received handleUserDisconnect:\", msg, \"users:\", users);\r\n      const newUsers = users.filter(user => user.steamId !== msg as string);\r\n      setUsers(newUsers);\r\n    }\r\n\r\n    const handleUpdateSettings = (msg: any) => {\r\n      console.log(\"Received settings:\", msg);\r\n      setSettings(msg as Settings);\r\n    }\r\n\r\n    const handleUpdatePreferences = (msg: any) => {\r\n      console.log(\"Received updatePreferences:\", msg);\r\n      const data = msg as PreferencesUpdate;\r\n      // TODO check data\r\n\r\n      const newUsers = [...users];\r\n      const changedUserIndex = newUsers.findIndex(user => user.steamId === data.steamId);\r\n      if (changedUserIndex !== -1) {\r\n        console.log(`Updating preferences for ${newUsers[changedUserIndex].personaname} (${data.steamId})`, changedUserIndex);\r\n        newUsers[changedUserIndex].preferences = data.preferences;\r\n        setUsers(newUsers);\r\n      } else {\r\n        console.log(`Tried to update preferences for ${data.steamId} but did not find user`);\r\n      }\r\n    }\r\n\r\n    const handleError = (error: any) => {\r\n      const err = error as ErrorType;\r\n      err.timeout = 15000;\r\n      props.addError(err);\r\n      if (err.status === 550) {\r\n        setShowFriendslist(false);\r\n        return;\r\n      }\r\n      if (socket) socket.disconnect();\r\n      history.replace(\"/create\");\r\n    }\r\n\r\n    if (socket) {\r\n      socket.removeAllListeners(\"error\");\r\n      socket.removeAllListeners(\"session\");\r\n      socket.removeAllListeners(\"userJoined\");\r\n      socket.removeAllListeners(\"userDisconnect\");\r\n      socket.removeAllListeners(\"updateSettings\");\r\n      socket.removeAllListeners(\"updatePreferences\");\r\n\r\n      socket.on(\"error\", handleError);\r\n      socket.on(\"session\", handleSession);\r\n      socket.on(\"userJoined\", handleUserJoined);\r\n      socket.on(\"userDisconnect\", handleUserDisconnect);\r\n      socket.on(\"updateSettings\", handleUpdateSettings);\r\n      socket.on(\"updatePreferences\", handleUpdatePreferences);\r\n    }\r\n  }, [self.steamId, users, socket, props, history]);\r\n\r\n  useEffect(() => {\r\n    const socket = initiateSocket(props.steamId, props.sessionId);\r\n    setSocket(socket);\r\n\r\n    socket.io.on(\"reconnect_failed\", () => {\r\n      console.log(\"Failed to reconnect\");\r\n      props.addError({ status: 500, msg: \"Lost connection to server\", timeout: 15000 });\r\n      history.push(\"/create\");\r\n    });\r\n    socket.io.on(\"reconnect_attempt\", (attempt) => {\r\n      const msg = `Lost connection to server, attempting to reconnect. Attempt (${attempt}/${socket.io.reconnectionAttempts()})`\r\n      console.log(msg);\r\n      props.addError({ status: 500, msg: msg, timeout: 6000 });\r\n    });\r\n\r\n    return () => {\r\n      console.log(\"#### disconnecting ###\");\r\n      if (socket) socket.disconnect();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.sessionId, props.steamId]);\r\n\r\n  // Update group preferences\r\n  useEffect(() => {\r\n    console.log(\"calculatePreferences\");\r\n    const appIds = settings.onlyCommonGames ? commonAppIds : [];\r\n    setMatchedGames(calculatePreferences(users.concat(self), appIds));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [users, self, settings.onlyCommonGames]);\r\n\r\n  // Send preferences to backend when changed\r\n  useEffect(() => {\r\n    if (!preferencesChanged || !self.preferences) return;\r\n    if (!socket) {\r\n      console.error(\"Socket is not defined\");\r\n      return;\r\n    }\r\n    console.log(\"Sending preferences\");\r\n    socket.emit(\"updatePreferences\", self.preferences);\r\n    setPreferencesChanged(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [self.preferences, preferencesChanged])\r\n\r\n  const onDragEnd = (result: DropResult): void => {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n    const newSelf: User = { ...self } as User;\r\n    newSelf.preferences = reorder(\r\n      (self as User).preferences ?? [],\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n    setSelf(newSelf);\r\n    setPreferencesChanged(true);\r\n  }\r\n\r\n  // loading \r\n  if (!self.preferences) {\r\n    return <Loading className=\"v-centered\" center />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {showFriendslist && socket ? <FriendsList socket={socket} sessionId={sessionId} closeFriendsList={() => setShowFriendslist(false)} /> : \"\"}\r\n      <header className=\"app-header\">\r\n        <h1 className=\"title\">Common Steam Games</h1>\r\n        <Settings settings={settings} setSettings={updateSettings} />\r\n      </header>\r\n      <div className=\"container\">\r\n        <GamesList\r\n          games={self.preferences ?? []}\r\n          onlyCommonGames={settings.onlyCommonGames}\r\n          commonAppIds={commonAppIds}\r\n          onDragEnd={onDragEnd}\r\n          droppableId={`${self.personaname}'s Preferences`}\r\n          header={<UserHeader title=\"Your Preferences\" user={self} />}\r\n          className=\"col\"\r\n        />\r\n        <GamesList\r\n          games={matchedGames}\r\n          onlyCommonGames={settings.onlyCommonGames}\r\n          commonAppIds={commonAppIds}\r\n          header={<GroupHeader title=\"Group Preferences\" gamesCount={matchedGames.length} commonGamesCount={commonAppIds.length} />}\r\n          className=\"col\"\r\n        />\r\n        <div className=\"col mb-0\">\r\n          <Invite sessionId={sessionId} className=\"no-br-bottom\" openFriendsList={() => setShowFriendslist(true)} />\r\n          {users.map((user, index) =>\r\n            <Collapsible\r\n              header={<UserHeader title={`${user.personaname}'s preferences`} user={user} className=\"no-br no-bg\" />}\r\n              key={`${index}-${user.steamId}`}\r\n            >\r\n              <GamesList\r\n                games={user.preferences ?? []}\r\n                onlyCommonGames={settings.onlyCommonGames}\r\n                commonAppIds={commonAppIds}\r\n                key={index}\r\n                className=\"no-br-top\"\r\n              />\r\n            </Collapsible>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction calculatePreferences(users: User[], commonAppIds: number[]): MatchedGame[] {\r\n  const matchedGames: Map<number, MatchedGame> = new Map();\r\n  const maxGames = commonAppIds.length > 0 ? commonAppIds.length : (\r\n    Math.max(...users.map(user => user.preferences ? user.preferences.length : 0)));\r\n\r\n  users.forEach(user => {\r\n    if (user.preferences) {\r\n      const preferences = commonAppIds.length > 0 ? (\r\n        user.preferences.filter(pref => commonAppIds.includes(pref.appid))\r\n      ) : user.preferences;\r\n\r\n      preferences.forEach((game, index) => {\r\n        const weight = getWeight(index, maxGames - 1);\r\n        let matchedGame: MatchedGame;\r\n        // Check if the game already exists. Otherwise add it to matchedGames.\r\n        if (matchedGames.has(game.appid)) {\r\n          matchedGame = matchedGames.get(game.appid)!;\r\n          matchedGame.weight += weight;\r\n          matchedGame.playtime_forever += game.playtime_forever / users.length;\r\n        } else {\r\n          matchedGame = {\r\n            appid: game.appid,\r\n            name: game.name,\r\n            img_icon_url: game.img_icon_url,\r\n            img_logo_url: game.img_logo_url,\r\n            has_community_visible_stats: game.has_community_visible_stats ?? undefined,\r\n            playtime_2weeks: game.playtime_2weeks ? (game.playtime_2weeks / users.length) : undefined,\r\n            playtime_forever: game.playtime_forever / users.length,\r\n            weight: weight\r\n          };\r\n        }\r\n        matchedGames.set(game.appid, matchedGame);\r\n      });\r\n    }\r\n  });\r\n  const result = Array.from(matchedGames.values());\r\n  result.sort((a, b) => {\r\n    return b.weight - a.weight;\r\n  });\r\n\r\n  return result\r\n}\r\n\r\nfunction getWeight(index: number, maxGames: number): number {\r\n  const weight = (maxGames - index) / maxGames;\r\n  return (!isNaN(weight) && weight >= 0) ? weight * weight : 0;\r\n}\r\n\r\nconst reorder = (games: Game[], startIndex: number, endIndex: number) => {\r\n  const result = Array.from(games);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n  return result;\r\n};\r\n\r\n/** Gets a list with appids for games owned by all users (incl. self) */\r\nconst getCommonAppIds = (users: User[]) => {\r\n  const appOwners: { appid: number, owners: number }[] = [];\r\n  let maxOwners = users.length;\r\n  for (const user of users) {\r\n    if (!user.preferences) {\r\n      maxOwners--;\r\n      continue;\r\n    }\r\n    for (const game of user.preferences) {\r\n      const index = appOwners.findIndex(elem => elem.appid === game.appid);\r\n      if (index >= 0) {\r\n        appOwners[index].owners++;\r\n      } else {\r\n        appOwners.push({ appid: game.appid, owners: 1 });\r\n      }\r\n    }\r\n  }\r\n  const ids = appOwners.filter(elem => elem.owners >= maxOwners).map(elem => elem.appid);\r\n  return ids;\r\n}\r\n\r\nexport default Matching;\r\n","import React, { useEffect } from 'react'\nimport \"../styles/error.css\"\n\nexport default function Error(props: {\n  error: ErrorType\n  removeError: () => void\n}) {\n  useEffect(() => {\n    const timeout = props.error.timeout;\n    let timer: NodeJS.Timeout | undefined;\n    if (timeout) {\n      timer = setTimeout(() => {\n        props.removeError();\n      }, timeout);\n    }\n    return () => {\n      if (timer) clearTimeout(timer);\n    };\n  }, [props]);\n\n  return (\n    <div className=\"error-popup\">\n      {props.error.msg}\n      <div className=\"error-close\" onClick={props.removeError}></div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Error from \"./Error\"\nimport \"../styles/error.css\"\n\nexport default function ErrorList(props: {\n  errors: ErrorType[],\n  setErrors: (err: ErrorType[]) => void\n}) {\n  const getRemoveErrorFnc = (error: ErrorType) => {\n    return () => props.setErrors(props.errors.filter(err => err !== error));\n  }\n\n  return (\n    <div className=\"error-popup-list\">\n      <div>\n        {props.errors.map((error, index) => <Error removeError={getRemoveErrorFnc(error)} error={error} key={index} />)}\n      </div>\n    </div>\n  )\n}\n","import { useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport CreateSession from \"./components/CreateSession\";\r\nimport Footer from \"./components/Footer\";\r\nimport JoinSession from \"./components/JoinSession\";\r\nimport UnknownPage from \"./components/UnknownPage\";\r\nimport Matching from \"./components/Matching\";\r\nimport ErrorList from \"./components/ErrorList\"\r\nimport packageJSON from \"../package.json\"\r\nimport \"./styles/app.css\";\r\n\r\nexport default function App(this: any) {\r\n  const [steamId, setSteamId] = useState<string | undefined>(getSteamId());\r\n  const [joinSessionId, setJoinSessionId] = useState<string | undefined>(getSessionId());\r\n  const [errors, setErrors] = useState<ErrorType[]>([]);\r\n\r\n  const addError = (error: ErrorType) => {\r\n    setErrors(errors.concat(error));\r\n  }\r\n\r\n  const createNewSession = (steamId: string) => {\r\n    sessionStorage.setItem(\"steamId\", steamId);\r\n    sessionStorage.removeItem(\"sessionId\");\r\n\r\n    setSteamId(steamId);\r\n    setJoinSessionId(undefined);\r\n  }\r\n\r\n  const joinSession = (steamId: string, sessionId: string) => {\r\n    sessionStorage.setItem(\"steamId\", steamId);\r\n    sessionStorage.setItem(\"sessionId\", sessionId);\r\n\r\n    setSteamId(steamId);\r\n    setJoinSessionId(sessionId);\r\n  }\r\n\r\n  const switchToJoinPage = joinSessionId && window.location.pathname !== `${packageJSON.subUrl}/join`;\r\n  const matching = steamId ? <Matching steamId={steamId} sessionId={joinSessionId} addError={addError} /> : <Redirect to=\"/\" />\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <ErrorList errors={errors} setErrors={setErrors} />\r\n      <Router basename={packageJSON.subUrl}>\r\n        <Switch>\r\n          <Route path=\"/matching\" exact>\r\n            {matching}\r\n          </Route>\r\n          <Route path=\"/join\" exact>\r\n            {canAutoJoin() ? <Redirect to=\"/matching\" push /> :\r\n              <JoinSession onSubmit={joinSession} sessionId={joinSessionId} steamId={steamId} />}\r\n          </Route>\r\n          <Route path=\"/create\" exact>\r\n            {switchToJoinPage ? <Redirect to=\"/join\" /> : <CreateSession onSubmit={createNewSession} steamId={steamId} />}\r\n          </Route>\r\n          <Route path=\"/\" exact>\r\n            <Redirect to=\"/create\" />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <UnknownPage />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n      <Footer />\r\n      <div className=\"background\" />\r\n    </div>\r\n  )\r\n}\r\n\r\n/**\r\n * Checks if a session id was passed in the url or is cached in the sessionStorage\r\n * @returns sessionId (string) or undefined\r\n */\r\nfunction getSessionId(): string | undefined {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const encodedSessionId = urlParams.get(\"sessionId\");\r\n  if (encodedSessionId) {\r\n    const sessionId = decodeURIComponent(encodedSessionId)\r\n    sessionStorage.setItem(\"sessionId\", sessionId);\r\n    return sessionId;\r\n  }\r\n  const cachedSessionId = sessionStorage.getItem(\"sessionId\");\r\n  if (cachedSessionId) {\r\n    return cachedSessionId;\r\n  }\r\n  return undefined;\r\n}\r\n\r\n/**\r\n * Checks if a steam id was passed in the url or is cached in the sessionStorage\r\n * @returns steamId (string) or undefined\r\n */\r\nfunction getSteamId(): string | undefined {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const encodedSteamId = urlParams.get(\"steamId\");\r\n  if (encodedSteamId) {\r\n    const steamId = decodeURIComponent(encodedSteamId);\r\n    sessionStorage.setItem(\"steamId\", steamId);\r\n    return steamId;\r\n  }\r\n  const cachedSteamId = sessionStorage.getItem(\"steamId\");\r\n  if (cachedSteamId) {\r\n    return cachedSteamId;\r\n  }\r\n  return undefined;\r\n}\r\n\r\nconst canAutoJoin = () => {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  return urlParams.has(\"steamId\") && urlParams.has(\"sessionId\");\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}