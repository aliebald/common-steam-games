{"version":3,"sources":["components/CreateSession.tsx","components/Footer.tsx","components/JoinSession.tsx","components/UnknownPage.tsx","components/Collapsible.tsx","components/Game.tsx","components/DraggableGame.tsx","components/GamesList.tsx","components/Button.tsx","components/Invite.tsx","components/Loading.tsx","components/UserHeader.tsx","components/Friend.tsx","components/FriendsList.tsx","components/Matching.tsx","components/Error.tsx","components/ErrorList.tsx","App.tsx","index.tsx"],"names":["CreateSession","props","useState","steamId","setSteamId","history","useHistory","handleSubmit","event","a","preventDefault","onSubmit","push","className","type","name","id","onChange","target","value","defaultValue","required","to","Footer","href","rel","title","src","packageJSON","subUrl","alt","height","width","JoinSession","sessionId","setSessionId","htmlFor","UnknownPage","Collapsible","collapsed","setCollapsed","hideContent","setHideContent","undefined","lastTimeout","setLastTimeout","content","children","onClick","clearTimeout","timeout","setTimeout","header","Game","playtimeText","appid","playtime","Math","round","game","playtime_forever","Number","EPSILON","playtime2weeks","playtime_2weeks","weight","getImage","img_icon_url","hash","DraggableGame","draggableId","index","provided","ref","innerRef","draggableProps","dragHandleProps","GamesList","droppableId","onDragEnd","droppableProps","games","placeholder","map","InnerList","React","memo","list","Button","danger","Invite","invite","window","location","origin","encodeURIComponent","readOnly","onFocus","select","navigator","clipboard","writeText","openFriendsList","Loading","centerInner","center","UserHeader","user","profileurl","avatarmedium","preferences","length","Friend","friend","personaname","realname","open","FriendsList","friends","setFriends","filter","setFilter","setList","useEffect","socket","on","msg","console","log","emit","removeAllListeners","mapToJSXElement","similarity","compareTwoStrings","filterSimilarity","sort","b","warn","closeFriendsList","reorder","startIndex","endIndex","result","Array","from","splice","removed","Matching","users","setUsers","self","setSelf","matchedGames","setMatchedGames","preferencesChanged","setPreferencesChanged","setSocket","showFriendslist","setShowFriendslist","error","err","addError","goBack","session","newUsers","newSelf","find","data","changedUserIndex","findIndex","query","io","reconnectionAttempts","initiateSocket","status","attempt","disconnect","Map","maxGames","max","forEach","matchedGame","isNaN","getWeight","has","get","img_logo_url","has_community_visible_stats","set","values","calculatePreferences","concat","destination","source","Error","timer","removeError","ErrorList","getRemoveErrorFnc","setErrors","errors","App","encodedSteamId","URLSearchParams","search","decodeURIComponent","sessionStorage","setItem","cachedSteamId","getItem","getSteamId","encodedSessionId","cachedSessionId","getSessionId","joinSessionId","setJoinSessionId","switchToJoinPage","pathname","matching","basename","path","exact","removeItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12f51eb7.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom';\n\nexport default function CreateSession(props: {\n  steamId?: string,\n  onSubmit: (steamId: string) => void,\n}) {\n  const [steamId, setSteamId] = useState<string>(props.steamId ?? \"\");\n  const history = useHistory();\n\n  const handleSteamIdChange = (event: any) => {\n    setSteamId(event.target.value);\n  }\n\n  const handleSubmit = async (event: any) => {\n    event.preventDefault();\n    props.onSubmit(steamId);\n    history.push(\"/matching\");\n  }\n\n  return (\n    <div className=\"user-forms\">\n      <div className=\"create-session\">\n        <h2>Create a new Session</h2>\n        <form onSubmit={handleSubmit}>\n          <label>Steam Id:\n            <input type=\"text\"\n              name=\"steamId\"\n              id=\"createSessionSteamId\"\n              onChange={handleSteamIdChange}\n              className=\"d-table-cell\"\n              defaultValue={steamId}\n              required\n            />\n          </label>\n          <input type=\"submit\" value=\"Create New Session\" className=\"btn\" />\n        </form>\n        <p className=\"t-center\">\n          Or <Link to=\"/join\">join a existing session</Link>\n        </p>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport \"../styles/footer.css\"\nimport packageJSON from \"../../package.json\"\n\nexport default function Footer() {\n  return (\n    <div className=\"footer\">\n      <div className=\"f-left\">\n        This project is not affiliated with Valve or Steam\n      </div>\n      <a\n        className=\"f-right\"\n        href=\"https://github.com/aliebald/common-steam-games\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        title=\"GitHub Repository\"\n      >\n        <img src={`${packageJSON.subUrl}/github.png`} alt=\"github\" height=\"20px\" width=\"20px\" />\n      </a>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom';\n\nexport default function JoinSession(props: {\n  sessionId?: string,\n  steamId?: string,\n  onSubmit: (steamId: string, sessionId: string) => void,\n  id?: string\n}) {\n  const [steamId, setSteamId] = useState<string>(props.steamId ?? \"\");\n  const [sessionId, setSessionId] = useState<string>(props.sessionId ?? \"\");\n  const history = useHistory();\n  const handleSteamIdChange = (event: any) => {\n    setSteamId(event.target.value);\n  }\n\n  const handleSessionIdChange = (event: any) => {\n    setSessionId(event.target.value);\n  }\n\n  const handleSubmit = async (event: any) => {\n    event.preventDefault();\n    props.onSubmit(steamId, sessionId);\n    history.push(\"/matching\");\n  }\n\n  return (\n    <div className=\"user-forms\">\n      <div className=\"join-session\">\n        <h2>Join a Session</h2>\n        <form className=\"d-table\" onSubmit={handleSubmit}>\n          <div className=\"d-table-row\">\n            <label htmlFor=\"steamId\" className=\"d-table-cell\">Steam Id:&nbsp;</label>\n            <input type=\"text\"\n              name=\"steamId\"\n              id=\"steamId\"\n              onChange={handleSteamIdChange}\n              className=\"d-table-cell\"\n              defaultValue={steamId}\n              required\n            />\n          </div>\n          <div className=\"d-table-row\">\n            <label htmlFor=\"sessionId\" className=\"d-table-cell\">Session Id:&nbsp;</label>\n            <input type=\"text\"\n              name=\"sessionId\"\n              id=\"sessionId\"\n              onChange={handleSessionIdChange}\n              className=\"d-table-cell\"\n              defaultValue={sessionId}\n              required\n            />\n          </div>\n          <div className=\"d-table-row\">\n            <div className=\"d-table-cell\"></div>\n            <div className=\"d-table-cell\">\n              <input type=\"submit\" value=\"Join Session\" className=\"btn\" />\n            </div>\n          </div>\n        </form>\n        <p className=\"t-center\">\n          Or <Link to=\"/\">create a new session</Link>\n        </p>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport \"../styles/unknownPage.css\"\n\n/**\n * Simple page for 404 errors\n */\nexport default function UnknownPage() {\n  return (\n    <div className=\"unknown-page\">\n      <p>The page you are looking for was not found.</p>\n      <p>You can <Link to=\"/create\">create a new session</Link> or <Link to=\"/join\">join an existing session</Link>.</p>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\n\nexport default function Collapsible(props: {\n  header?: string | JSX.Element,\n  children?: JSX.Element\n}) {\n  const [collapsed, setCollapsed] = useState(true);\n  const [hideContent, setHideContent] = useState(true);\n  const [lastTimeout, setLastTimeout] = useState<NodeJS.Timeout | undefined>(undefined);\n\n  const toggle = () => {\n    // Abort last timeout to avoid setting hideContent true,\n    // if the content was collapsed and opened again immediately \n    if (lastTimeout) {\n      clearTimeout(lastTimeout);\n      setLastTimeout(undefined);\n    }\n\n    // Toggle collapsed state. Hide content after animation delay\n    if (collapsed) {\n      setHideContent(false);\n    } else {\n      const timeout = setTimeout(() => setHideContent(true), 500);\n      setLastTimeout(timeout);\n    }\n    setCollapsed(!collapsed);\n  }\n\n  const content = props.children ?? \"No Content\";\n  return (\n    <>\n      <button type=\"button\" className=\"collapsible\" onClick={toggle}>\n        {props.header ?? \"Open\"}\n        <i className={collapsed ? \"arrow-down\" : \"arrow-up\"}></i>\n      </button>\n      <div className={`content ${collapsed ? \"content-collapsed\" : \"\"}`}>\n        {hideContent ? <></> : content}\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport '../styles/game.css'\n\n\nexport default function Game(props: { game: Game | MatchedGame }) {\n  const playtime = Math.round(((props.game.playtime_forever / 60) + Number.EPSILON) * 100) / 100\n  const playtime2weeks = props.game.playtime_2weeks ? Math.round(((props.game.playtime_2weeks / 60) + Number.EPSILON) * 100) / 100 : 0\n\n  let playtimeText: string;\n  if ((props.game as MatchedGame).weight) {\n    playtimeText = `Average Playtime ${playtime}h - w: ${(props.game as MatchedGame).weight}`;\n  } else {\n    playtimeText = playtime2weeks > 0 ? `Playtime: ${playtime}h / ${playtime2weeks}h` : `Playtime: ${playtime}h`\n  }\n\n\n  return (\n    <div className=\"game\">\n      <div className=\"gameInner\">\n        <a href={getStorePage(props.game.appid)} target=\"_blank\" rel=\"noopener noreferrer\" title={`${props.game.name} steam page`}>\n          <img\n            src={getImage(props.game.appid, props.game.img_icon_url)}\n            width=\"32\"\n            height=\"32\"\n            alt=\"icon\"\n          />\n        </a>\n        <div className=\"game-info\">\n          <div className=\"title\">{props.game.name}</div>\n          <div className=\"playtime\">{playtimeText}</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction getImage(appid: number | string, hash: number | string): string {\n  return `https://media.steampowered.com/steamcommunity/public/images/apps/${appid}/${hash}.jpg`\n}\n\nfunction getStorePage(appid: number | string): string {\n  return `https://store.steampowered.com/app/${appid}`\n}\n","import React from 'react'\nimport { Draggable } from 'react-beautiful-dnd'\nimport Game from './Game'\n\n\nexport default function DraggableGame(props: { game: Game, index: number }) {\n  return (\n    <Draggable draggableId={`${props.game.appid}`} index={props.index}>\n      {provided => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <Game game={props.game} />\n        </div>\n      )}\n    </Draggable>\n\n  )\n}\n","import React from 'react'\nimport { DragDropContext, Droppable, DropResult, ResponderProvided } from \"react-beautiful-dnd\";\nimport DraggableGame from './DraggableGame';\nimport Game from './Game';\n\nexport default function GamesList(props: {\n  games: Game[] | MatchedGame[],\n  droppableId?: string, // If this is given, the output list will be a drag & drop list\n  onDragEnd?: (result: DropResult, provided: ResponderProvided) => void,\n  header?: JSX.Element,\n  className?: string\n}) {\n  const header = props.header ?? \"\";\n  if (props.droppableId && props.onDragEnd) {\n    return (\n      <div className={`games-list ${props.className ?? \"\"}`}>\n        <DragDropContext onDragEnd={props.onDragEnd}>\n          {header}\n          <div className=\"scroll-container\">\n            <Droppable droppableId={props.droppableId}>\n              {provided => (\n                <div {...provided.droppableProps} ref={provided.innerRef}>\n                  <InnerList games={props.games} />\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </div>\n        </DragDropContext>\n      </div>\n    )\n  }\n  return (\n    <div className={`games-list ${props.className ?? \"\"}`}>\n      {header}\n      <div className=\"scroll-container\">\n        {props.games.map((game, index) => <Game game={game} key={index} />)}\n      </div>\n    </div>\n  )\n}\n\n// do not re-render if the games list reference has not changed\nconst InnerList = React.memo(function InnerList(props: { games: Game[] }) {\n  const list = props.games.map((game: Game, index: number) => (\n    <DraggableGame key={game.appid} game={game} index={index} />\n  ))\n  return <>{list}</>\n});\n","import React from 'react'\n\nexport default function Button(props: {\n  className?: string,\n  onClick?: React.MouseEventHandler<HTMLButtonElement>,\n  danger?: boolean,\n  children?: JSX.Element | string\n}) {\n  const danger = props.danger ? \" danger\" : \"\"\n  return (\n    <button\n      className={`btn${danger} ${props.className ?? \"\"}`}\n      onClick={props.onClick}\n    >\n      {props.children ?? \"\"}\n    </button>\n  )\n}\n","import React from \"react\"\nimport packageJSON from \"../../package.json\"\nimport Button from \"./Button\";\nimport \"../styles/invite.css\"\n\nexport default function Invite(props: {\n  sessionId: string,\n  className?: string,\n  openFriendsList: () => void;\n}) {\n  const invite = `${window.location.origin}${packageJSON.subUrl}/join?sessionId=${encodeURIComponent(props.sessionId)}`;\n  const copyInvite = () => {\n    navigator.clipboard.writeText(invite);\n  }\n  const handleFocus = (event: any) => {\n    event.target.select()\n  }\n\n  return (\n    <div className={`invite-box ${props.className ?? \"\"}`}>\n      <label>Invite your friends</label>\n      <div className=\"invite-row\">\n        <input className=\"invite-input\" type=\"text\" value={invite} readOnly onFocus={handleFocus} />\n        <Button onClick={copyInvite}>Copy&nbsp;Invite</Button>\n        <Button onClick={props.openFriendsList}>Open&nbsp;Friends&nbsp;List</Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport \"../styles/loading.css\"\n\nexport default function Loading(props: {\n  className?: string,\n  center?: boolean\n}) {\n  // Loading animation from https://loading.io/css/\n  const centerInner = props.center ? \" v-centered\" : \"\"\n  const content = (\n    <div className={`lds-roller${centerInner} ${props.className ?? \"\"}`}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  )\n\n  if (props.center) {\n    return <div className=\"flex-center\">{content}</div>;\n  }\n\n  return content;\n}\n","import React from 'react'\nimport \"../styles/userHeader.css\"\n\nexport default function UserHeader(props: {\n  title: string,\n  user: User,\n  className?: string\n}) {\n  return (\n    <div className={`user-header ${props.className ?? \"\"}`}>\n      <a href={props.user.profileurl} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Steam profile\">\n        <img\n          src={props.user.avatarmedium}\n          width=\"45\"\n          height=\"45\"\n          alt=\"avatar\"\n        />\n      </a>\n      <div className=\"user-details\">\n        <h2>{props.title}</h2>\n        {props.user.preferences ? <div>{props.user.preferences.length}&nbsp;Games</div> : \"\"}\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport packageJSON from \"../../package.json\"\nimport Button from \"./Button\";\n\nimport \"../styles/friend.css\"\n\nexport default function Friend(props: {\n  friend: Friend,\n  sessionId: string\n}) {\n  const friend = props.friend;\n  const invite = `${window.location.origin}${packageJSON.subUrl}/join?sessionId=${encodeURIComponent(props.sessionId)}&steamId=${props.friend.steamId}`;\n  const copyInvite = () => {\n    navigator.clipboard.writeText(invite);\n  }\n  const openSteamChat = () => {\n    window.open(`steam://friends/message/${friend.steamId}`)\n  }\n\n  return (\n    <div className=\"friend\">\n      <div className=\"friend-info\">\n        <a href={friend.profileurl} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Steam profile\">\n          <img\n            src={friend.avatarmedium}\n            width=\"45\"\n            height=\"45\"\n            alt=\"avatar\"\n          />\n        </a>\n        <div className=\"friend-personal\">\n          <div>{friend.personaname}</div>\n          <div>{friend.realname ? <span>(<em>{friend.realname}</em>)</span> : \"\"}</div>\n        </div>\n      </div>\n      <div className=\"buttons\">\n        <Button onClick={openSteamChat}>Steam&nbsp;Chat</Button>\n        <Button onClick={copyInvite}>Copy&nbsp;Invite</Button>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\nimport { Socket } from \"socket.io-client\";\nimport Friend from \"./Friend\";\nimport Loading from \"./Loading\";\nimport { compareTwoStrings } from \"string-similarity\";\nimport \"../styles/friendslist.css\"\nimport Button from \"./Button\";\n\nexport default function FriendsList(props: {\n  socket: Socket,\n  sessionId: string,\n  closeFriendsList: () => void;\n}) {\n  const [friends, setFriends] = useState<Friend[]>([]);\n  const [filter, setFilter] = useState<string>(\"\");\n  const [list, setList] = useState<JSX.Element[]>([]);\n\n  useEffect(() => {\n    // set listener and request data\n    props.socket.on(\"friendsList\", (msg: any) => {\n      console.log(\"friendsList\", msg);\n      setFriends(msg as Friend[]);\n    });\n    props.socket.emit(\"getFriendsList\");\n\n    return () => {\n      props.socket.removeAllListeners(\"friendslist\");\n    }\n  }, [props.socket])\n\n  // Updates Friendslist when friends are loaded or the search is used\n  useEffect(() => {\n    const addSimilarity = (friend: Friend): Friend => {\n      let similarity = compareTwoStrings(friend.personaname, filter);\n      if (friend.realname) {\n        similarity += compareTwoStrings(friend.realname, filter);\n        similarity /= 2;\n      }\n      return { ...friend, filterSimilarity: similarity };\n    }\n\n    const sortBySimilarity = (a: Friend, b: Friend) => {\n      if (a.filterSimilarity === undefined || b.filterSimilarity === undefined) {\n        console.warn(\"filterSimilarity is not defined\");\n        return 0;\n      }\n      return b.filterSimilarity - a.filterSimilarity;\n    }\n\n    const mapToJSXElement = (friend: Friend) => (\n      <Friend friend={friend} key={friend.steamId} sessionId={props.sessionId} />\n    );\n\n    if (filter.length < 2) {\n      setList(friends.map(mapToJSXElement));\n    } else {\n      // Apply filter\n      setList(friends.map(addSimilarity).sort(sortBySimilarity).map(mapToJSXElement));\n    }\n  }, [filter, friends, props.sessionId])\n\n  const handleFilterChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(event.target.value);\n    setFilter(event.target.value);\n  }\n\n  return (\n    <div className=\"friendslist\">\n      <div className=\"blur-bg\" onClick={props.closeFriendsList}></div>\n      <div className=\"friends\">\n        <div className=\"friendslist-header\">\n          <input className=\"friend-search\" type=\"text\" onChange={handleFilterChange} placeholder=\"Search Friends\" />\n          <Button onClick={props.closeFriendsList} danger>&nbsp;Close&nbsp;Friends&nbsp;</Button>\n        </div>\n        <div className=\"list\">\n          {friends.length === 0 ? <Loading center /> : list}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useEffect, useState } from \"react\";\r\nimport { DropResult } from \"react-beautiful-dnd\";\r\nimport { io, Socket } from \"socket.io-client\";\r\nimport { useHistory } from \"react-router\";\r\nimport Collapsible from \"./Collapsible\";\r\nimport GamesList from \"./GamesList\";\r\nimport Invite from \"./Invite\";\r\nimport Loading from \"./Loading\";\r\nimport UserHeader from \"./UserHeader\";\r\nimport FriendsList from \"./FriendsList\";\r\n\r\nfunction initiateSocket(steamId: string, sessionId?: string) {\r\n  let query;\r\n  if (sessionId) {\r\n    query = { steamId: steamId, sessionId: sessionId };\r\n  } else {\r\n    query = { steamId: steamId };\r\n  }\r\n  const url = process.env.NODE_ENV === \"production\" ? \"https://common-steam-games.herokuapp.com/\" : \"http://localhost:3030\";\r\n  return io(url, {\r\n    query: query,\r\n    reconnectionAttempts: 4\r\n  });\r\n}\r\n\r\nfunction Matching(props: {\r\n  steamId: string,\r\n  sessionId?: string,\r\n  addError: (error: ErrorType) => void\r\n}) {\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [self, setSelf] = useState<User>({ steamId: props.steamId });\r\n  const [matchedGames, setMatchedGames] = useState<MatchedGame[]>([]);\r\n  const [sessionId, setSessionId] = useState<string>(\"\");\r\n  const [preferencesChanged, setPreferencesChanged] = useState(false);\r\n  const [socket, setSocket] = useState<Socket | undefined>(undefined);\r\n  const [showFriendslist, setShowFriendslist] = useState<boolean>(false);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const handleSession = (msg: any) => {\r\n      console.log(\"Received session:\", msg);\r\n      if (!msg) return;\r\n      if (users.length > 0) {\r\n        console.warn(\"Received session but already is part of a session\");\r\n        return;\r\n      }\r\n\r\n      const session = msg as Session;\r\n      const newUsers = session.users.filter(user => user.steamId !== self.steamId);\r\n      const newSelf = session.users.find(user => user.steamId === self.steamId);\r\n      // TODO handle case: newSelf = undefined\r\n\r\n      setSessionId(session.sessionId);\r\n      setSelf(newSelf!); // TODO undefined check\r\n      setUsers(newUsers);\r\n    }\r\n\r\n    const handleUserJoined = (msg: any) => {\r\n      console.log(\"Received handleUserJoined:\", msg, \"users:\", users);\r\n      const newUsers = [...users];\r\n      newUsers.push(msg as User);\r\n      setUsers(newUsers);\r\n    }\r\n\r\n    const handleUserDisconnect = (msg: any) => {\r\n      console.log(\"Received handleUserDisconnect:\", msg, \"users:\", users);\r\n      const newUsers = users.filter(user => user.steamId !== msg as string);\r\n      setUsers(newUsers);\r\n    }\r\n\r\n    const handleUpdatePreferences = (msg: any) => {\r\n      console.log(\"Received updatePreferences:\", msg);\r\n      const data = msg as PreferencesUpdate;\r\n      // TODO check data\r\n\r\n      const newUsers = [...users];\r\n      const changedUserIndex = newUsers.findIndex(user => user.steamId === data.steamId);\r\n      if (changedUserIndex !== -1) {\r\n        console.log(`Updating preferences for ${newUsers[changedUserIndex].personaname} (${data.steamId})`, changedUserIndex);\r\n        newUsers[changedUserIndex].preferences = data.preferences;\r\n        setUsers(newUsers);\r\n      } else {\r\n        console.log(`Tried to update preferences for ${data.steamId} but did not find user`);\r\n      }\r\n    }\r\n\r\n    const handleError = (error: any) => {\r\n      const err = error as ErrorType;\r\n      err.timeout = 15000;\r\n      props.addError(err);\r\n      history.goBack();\r\n    }\r\n\r\n    if (socket) {\r\n      socket.removeAllListeners();\r\n\r\n      socket.on(\"error\", handleError);\r\n      socket.on(\"session\", handleSession);\r\n      socket.on(\"userJoined\", handleUserJoined);\r\n      socket.on(\"userDisconnect\", handleUserDisconnect);\r\n      socket.on(\"updatePreferences\", handleUpdatePreferences);\r\n    }\r\n  }, [self.steamId, users, socket, props, history]);\r\n\r\n  useEffect(() => {\r\n    const socket = initiateSocket(props.steamId, props.sessionId);\r\n    setSocket(socket);\r\n\r\n    socket.io.on(\"reconnect_failed\", () => {\r\n      console.log(\"Failed to reconnect\");\r\n      props.addError({ status: 500, msg: \"Lost connection to server\", timeout: 15000 });\r\n      history.push(\"/create\");\r\n    });\r\n    socket.io.on(\"reconnect_attempt\", (attempt) => {\r\n      const msg = `Lost connection to server, attempting to reconnect. Attempt (${attempt}/${socket.io.reconnectionAttempts()})`\r\n      console.log(msg);\r\n      props.addError({ status: 500, msg: msg, timeout: 6000 });\r\n    });\r\n\r\n    return () => {\r\n      console.log(\"#### disconnecting ###\");\r\n      if (socket) socket.disconnect();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.sessionId, props.steamId]);\r\n\r\n  // Update group preferences\r\n  useEffect(() => {\r\n    setMatchedGames(calculatePreferences(users.concat(self)));\r\n  }, [users, self])\r\n\r\n  // Send preferences to backend when changed\r\n  useEffect(() => {\r\n    if (!preferencesChanged || !self.preferences) return;\r\n    if (!socket) {\r\n      console.error(\"Socket is not defined\");\r\n      return;\r\n    }\r\n    console.log(\"Sending preferences\");\r\n    socket.emit(\"updatePreferences\", self.preferences);\r\n    setPreferencesChanged(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [self.preferences, preferencesChanged])\r\n\r\n  const onDragEnd = (result: DropResult): void => {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n    const newSelf: User = { ...self } as User;\r\n    newSelf.preferences = reorder(\r\n      (self as User).preferences ?? [],\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n    setSelf(newSelf);\r\n    setPreferencesChanged(true);\r\n  }\r\n\r\n  // loading \r\n  if (!self.preferences) {\r\n    return <Loading className=\"v-centered\" center />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {showFriendslist && socket ? <FriendsList socket={socket} sessionId={sessionId} closeFriendsList={() => setShowFriendslist(false)} /> : \"\"}\r\n      <header className=\"app-header\">\r\n        <h1>Common Steam Games</h1>\r\n      </header>\r\n      <div className=\"container\">\r\n        <GamesList\r\n          games={self.preferences ?? []}\r\n          onDragEnd={onDragEnd}\r\n          droppableId={`${self.personaname}'s Preferences`}\r\n          header={<UserHeader title=\"Your Preferences\" user={self} />}\r\n          className=\"col\"\r\n        />\r\n        <GamesList games={matchedGames} header={<h2 className=\"group-preferences-header\">Group Preferences</h2>} className=\"col\" />\r\n        <div className=\"col\">\r\n          <Invite sessionId={sessionId} className=\"no-br-bottom\" openFriendsList={() => setShowFriendslist(true)} />\r\n          {users.map((user, index) =>\r\n            <Collapsible\r\n              header={<UserHeader title={`${user.personaname}'s preferences`} user={user} className=\"no-br no-bg\" />}\r\n              key={`${index}-${user.steamId}`}\r\n            >\r\n              <GamesList games={user.preferences ?? []} key={index} className=\"no-br-top\" />\r\n            </Collapsible>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction calculatePreferences(users: User[]): MatchedGame[] {\r\n  const matchedGames: Map<number, MatchedGame> = new Map();\r\n  const maxGames = Math.max(...users.map(user => user.preferences ? user.preferences.length : 0));\r\n  users.forEach(user => {\r\n    if (user.preferences) {\r\n      user.preferences.forEach((game, index) => {\r\n        const weight = getWeight(index, maxGames);\r\n        let matchedGame: MatchedGame;\r\n        // Check if the game already exists. Otherwise add it to matchedGames.\r\n        if (matchedGames.has(game.appid)) {\r\n          matchedGame = matchedGames.get(game.appid)!;\r\n          matchedGame.weight += weight;\r\n          matchedGame.playtime_forever += game.playtime_forever / users.length;\r\n        } else {\r\n          matchedGame = {\r\n            appid: game.appid,\r\n            name: game.name,\r\n            img_icon_url: game.img_icon_url,\r\n            img_logo_url: game.img_logo_url,\r\n            has_community_visible_stats: game.has_community_visible_stats ?? undefined,\r\n            playtime_2weeks: game.playtime_2weeks ? (game.playtime_2weeks / users.length) : undefined,\r\n            playtime_forever: game.playtime_forever / users.length,\r\n            weight: weight\r\n          };\r\n        }\r\n        matchedGames.set(game.appid, matchedGame);\r\n      })\r\n    }\r\n  });\r\n  const result = Array.from(matchedGames.values());\r\n  result.sort((a, b) => {\r\n    return b.weight - a.weight;\r\n  });\r\n\r\n  return result\r\n}\r\n\r\nfunction getWeight(index: number, maxGames: number): number {\r\n  const weight = (maxGames - index) / maxGames;\r\n  return (!isNaN(weight) && weight >= 0) ? weight * weight : 0;\r\n}\r\n\r\nconst reorder = (games: Game[], startIndex: number, endIndex: number) => {\r\n  const result = Array.from(games);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n  return result;\r\n};\r\n\r\nexport default Matching;\r\n","import React, { useEffect } from 'react'\nimport \"../styles/error.css\"\n\nexport default function Error(props: {\n  error: ErrorType\n  removeError: () => void\n}) {\n  useEffect(() => {\n    const timeout = props.error.timeout;\n    let timer: NodeJS.Timeout | undefined;\n    if (timeout) {\n      timer = setTimeout(() => {\n        props.removeError();\n      }, timeout);\n    }\n    return () => {\n      if (timer) clearTimeout(timer);\n    };\n  }, [props]);\n\n  return (\n    <div className=\"error-popup\">\n      {props.error.msg}\n      <div className=\"error-close\" onClick={props.removeError}></div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Error from \"./Error\"\nimport \"../styles/error.css\"\n\nexport default function ErrorList(props: {\n  errors: ErrorType[],\n  setErrors: (err: ErrorType[]) => void\n}) {\n  const getRemoveErrorFnc = (error: ErrorType) => {\n    return () => props.setErrors(props.errors.filter(err => err !== error));\n  }\n\n  return (\n    <div className=\"error-popup-list\">\n      <div>\n        {props.errors.map((error, index) => <Error removeError={getRemoveErrorFnc(error)} error={error} key={index} />)}\n      </div>\n    </div>\n  )\n}\n","import { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport CreateSession from \"./components/CreateSession\";\nimport Footer from \"./components/Footer\";\nimport JoinSession from \"./components/JoinSession\";\nimport UnknownPage from \"./components/UnknownPage\";\nimport Matching from \"./components/Matching\";\nimport ErrorList from \"./components/ErrorList\"\nimport packageJSON from \"../package.json\"\nimport \"./styles/app.css\";\n\nexport default function App(this: any) {\n  const [steamId, setSteamId] = useState<string | undefined>(getSteamId());\n  const [joinSessionId, setJoinSessionId] = useState<string | undefined>(getSessionId());\n  const [errors, setErrors] = useState<ErrorType[]>([]);\n\n  const addError = (error: ErrorType) => {\n    setErrors(errors.concat(error));\n  }\n\n  const createNewSession = (steamId: string) => {\n    sessionStorage.setItem(\"steamId\", steamId);\n    sessionStorage.removeItem(\"sessionId\");\n\n    setSteamId(steamId);\n    setJoinSessionId(undefined);\n  }\n\n  const joinSession = (steamId: string, sessionId: string) => {\n    sessionStorage.setItem(\"steamId\", steamId);\n    sessionStorage.setItem(\"sessionId\", sessionId);\n\n    setSteamId(steamId);\n    setJoinSessionId(sessionId);\n  }\n\n  const switchToJoinPage = joinSessionId && window.location.pathname !== `${packageJSON.subUrl}/join`;\n  const matching = steamId ? <Matching steamId={steamId} sessionId={joinSessionId} addError={addError} /> : <Redirect to=\"/\" />\n\n  return (\n    <div className=\"app\">\n      <ErrorList errors={errors} setErrors={setErrors} />\n      <Router basename={packageJSON.subUrl}>\n        <Switch>\n          <Route path=\"/matching\" exact>\n            {matching}\n          </Route>\n          <Route path=\"/join\" exact>\n            <JoinSession onSubmit={joinSession} sessionId={joinSessionId} steamId={steamId} />\n          </Route>\n          <Route path=\"/create\" exact>\n            {switchToJoinPage ? <Redirect to=\"/join\" /> : <CreateSession onSubmit={createNewSession} steamId={steamId} />}\n          </Route>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/create\" />\n          </Route>\n          <Route path=\"/\">\n            <UnknownPage />\n          </Route>\n        </Switch>\n      </Router>\n      <Footer />\n      <div className=\"background\" />\n    </div>\n  )\n}\n\n/**\n * Checks if a session id was passed in the url or is cached in the sessionStorage\n * @returns sessionId (string) or undefined\n */\nfunction getSessionId(): string | undefined {\n  const urlParams = new URLSearchParams(window.location.search);\n  const encodedSessionId = urlParams.get(\"sessionId\");\n  if (encodedSessionId) {\n    const sessionId = decodeURIComponent(encodedSessionId)\n    sessionStorage.setItem(\"sessionId\", sessionId);\n    return sessionId;\n  }\n  const cachedSessionId = sessionStorage.getItem(\"sessionId\");\n  if (cachedSessionId) {\n    return cachedSessionId;\n  }\n  return undefined;\n}\n\n/**\n * Checks if a steam id was passed in the url or is cached in the sessionStorage\n * @returns steamId (string) or undefined\n */\nfunction getSteamId(): string | undefined {\n  const urlParams = new URLSearchParams(window.location.search);\n  const encodedSteamId = urlParams.get(\"steamId\");\n  if (encodedSteamId) {\n    const steamId = decodeURIComponent(encodedSteamId);\n    sessionStorage.setItem(\"steamId\", steamId);\n    return steamId;\n  }\n  const cachedSteamId = sessionStorage.getItem(\"steamId\");\n  if (cachedSteamId) {\n    return cachedSteamId;\n  }\n  return undefined;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}