{"version":3,"sources":["components/CreateSession.tsx","components/Footer.tsx","security/mail.js","components/JoinSession.tsx","components/UnknownPage.tsx","components/Collapsible.tsx","components/Tooltip.tsx","components/Button.tsx","components/UserCard.tsx","components/Game.tsx","components/DraggableGame.tsx","components/GamesList.tsx","components/Invite.tsx","components/Loading.tsx","components/UserHeader.tsx","components/GroupHeader.tsx","components/Friend.tsx","components/FriendsList.tsx","components/Switch.tsx","components/Settings.tsx","components/Matching.tsx","components/Error.tsx","components/ErrorList.tsx","App.tsx","index.tsx"],"names":["CreateSession","props","useState","steamId","setSteamId","history","useHistory","handleSubmit","event","a","preventDefault","onSubmit","push","className","htmlFor","type","name","id","onChange","target","value","defaultValue","placeholder","required","to","Footer","href","rel","title","onClick","encrypted","decrypted","i","length","charCodeAt","String","fromCharCode","charAt","window","open","toMail","src","packageJSON","subUrl","alt","height","width","JoinSession","sessionId","setSessionId","UnknownPage","Collapsible","collapsed","setCollapsed","hideContent","setHideContent","undefined","lastTimeout","setLastTimeout","content","children","clearTimeout","timeout","setTimeout","header","Tooltip","show","setShow","onMouseEnter","onMouseLeave","position","tooltip","Button","danger","UserCard","user","profileurl","avatarmedium","personaname","realname","Game","playtimeText","appid","playtime","Math","round","game","playtime_forever","Number","EPSILON","playtime2weeks","playtime_2weeks","isMatchedGame","weightPercentage","weight","num","toFixed","parseFloat","convertWeightToPercentage","getImage","img_icon_url","loading","isDnD","showOwners","Owners","owners","gameTitle","DnDHighlight","map","owner","index","avatar","hash","DraggableGame","draggableId","provided","ref","innerRef","draggableProps","dragHandleProps","GamesList","dndListRef","createRef","onlyCommonGames","useEffect","gameSearch","current","pos","depth","scrollHeight","getDepthForGame","search","match","similarity","games","forEach","commonAppIds","includes","compareTwoStrings","toLowerCase","console","log","searchGamePosition","scrollTo","top","behavior","droppableId","onDragEnd","droppableProps","filter","InnerList","React","memo","highlightDnd","setHighlightDnd","timeoutStart","timeoutEnd","list","Invite","invite","location","origin","encodeURIComponent","readOnly","onFocus","select","navigator","clipboard","writeText","openFriendsList","Loading","centerInner","center","UserHeader","showSubheader","onSearch","onSortByTotal","onSortByLastTwoWeeks","subheader","preferences","GroupHeader","gamesCount","commonGames","Friend","friend","FriendsList","friends","setFriends","setFilter","setList","listRef","socket","on","msg","emit","removeAllListeners","mapToJSXElement","filterSimilarity","sort","b","warn","closeFriendsList","Switch","checked","Settings","settings","setSettings","reorder","startIndex","endIndex","result","Array","from","splice","removed","getCommonAppIds","users","appOwners","maxOwners","findIndex","elem","Matching","setUsers","self","setSelf","matchedGames","setMatchedGames","preferencesChanged","setPreferencesChanged","setSocket","showFriendslist","setShowFriendslist","setCommonAppIds","setGameSearch","concat","error","err","addError","status","disconnect","replace","session","ownSteamId","you","newUsers","newSelf","find","data","changedUserIndex","query","io","reconnectionAttempts","initiateSocket","attempt","appIds","Map","maxGames","max","pref","matchedGame","isNaN","getWeight","has","get","img_logo_url","has_community_visible_stats","set","values","calculatePreferences","sortPreferences","sortBy","sortFunc","aPlaytime","bPlaytime","destination","source","Error","timer","removeError","ErrorList","getRemoveErrorFnc","setErrors","errors","App","encodedSteamId","URLSearchParams","decodeURIComponent","sessionStorage","setItem","cachedSteamId","getItem","getSteamId","encodedSessionId","cachedSessionId","getSessionId","joinSessionId","setJoinSessionId","switchToJoinPage","pathname","matching","basename","path","exact","canAutoJoin","removeItem","urlParams","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8afee59.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom';\n\nexport default function CreateSession(props: {\n  steamId?: string,\n  onSubmit: (steamId: string) => void,\n}) {\n  const [steamId, setSteamId] = useState<string>(props.steamId ?? \"\");\n  const history = useHistory();\n\n  const handleSteamIdChange = (event: any) => {\n    setSteamId(event.target.value);\n  }\n\n  const handleSubmit = async (event: any) => {\n    event.preventDefault();\n    props.onSubmit(steamId);\n    history.push(\"/matching\");\n  }\n\n  return (\n    <div className=\"user-forms\">\n      <div className=\"create-session\">\n        <h2>Create a new Session</h2>\n        <form onSubmit={handleSubmit}>\n          <label htmlFor=\"createSessionSteamId\">Steam ID or Profile URL:</label>\n          <div className=\"steamId-input input-margin\">\n            <span className=\"profile-url\">https://steamcommunity.com/id/</span>\n            <input\n              type=\"text\"\n              name=\"steamId\"\n              id=\"createSessionSteamId\"\n              onChange={handleSteamIdChange}\n              className=\"d-table-cell\"\n              defaultValue={steamId}\n              placeholder=\"Steam ID or Profile URL\"\n              required\n            />\n          </div>\n          <input type=\"submit\" value=\"Create New Session\" className=\"btn\" />\n        </form>\n        <p className=\"t-center\">\n          Or <Link to=\"/join\">join a existing session</Link>\n        </p>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport packageJSON from \"../../package.json\"\nimport toMail from \"../security/mail\"\nimport \"../styles/footer.css\"\n\nexport default function Footer() {\n  return (\n    <div className=\"footer\">\n      <div className=\"f-left\">\n        This project is not affiliated with Valve or Steam\n      </div>\n      <div className=\"f-right\">\n        <a\n          className=\"impressum\"\n          href=\"https://aliebald.github.io/impressum/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          title=\"Impressum gemäß § 5 TMG\"\n        >\n          Impressum\n        </a>\n        <div title=\"Send me a mail\" onClick={() => toMail(\"𝕔𝕠𝕟𝕥𝕒𝕔𝕥.𝕝𝕚𝕖𝕓𝕒𝕝𝕕@𝕘𝕞𝕒𝕚𝕝.𝕔𝕠𝕞\")}>\n          <img src={`${packageJSON.subUrl}/email.svg`} alt=\"contact\" height=\"20px\" width=\"20px\" className=\"contact\" />\n        </div>\n        <a\n          href=\"https://github.com/aliebald/common-steam-games\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          title=\"GitHub Repository\"\n        >\n          <img src={`${packageJSON.subUrl}/github.svg`} alt=\"github\" height=\"18px\" width=\"18px\" className=\"github\" />\n        </a>\n      </div>\n    </div>\n  )\n}\n","/**\n * Takes an \"encrypted\" mail address, converts it to a real mail address\n * and opens the mailto link if possible\n * @param {string} encrypted - encrypted mail address written in\n *   lower-case mathematical double struck letters (𝕒-𝕫) and \"normal\"\n *   characters (all characters with character codes under 122)\n * @returns {void}\n * @author Leonard Goldstein\n * @see {@link https://github.com/goldst/goldst.github.io/blob/7d7e3c3c5eb9563fe83a47f62460e4536b9a3159/js/safety/safety.js}\n */\nexport default function toMail(encrypted) {\n  let decrypted = \"\";\n  for (let i = 0; i < encrypted.length; i++) {\n    if (encrypted.charCodeAt(i) > 122) {\n      decrypted += String.fromCharCode(\n        encrypted.charCodeAt(i + 1) - 56561\n      );\n\n      i++;\n    } else {\n      decrypted += encrypted.charAt(i);\n    }\n  }\n  window.open(\"mailto:\" + decrypted, \"_self\");\n};\n","import React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom';\n\nexport default function JoinSession(props: {\n  sessionId?: string,\n  steamId?: string,\n  onSubmit: (steamId: string, sessionId: string) => void,\n  id?: string\n}) {\n  const [steamId, setSteamId] = useState<string>(props.steamId ?? \"\");\n  const [sessionId, setSessionId] = useState<string>(props.sessionId ?? \"\");\n  const history = useHistory();\n  const handleSteamIdChange = (event: any) => {\n    setSteamId(event.target.value);\n  }\n\n  const handleSessionIdChange = (event: any) => {\n    setSessionId(event.target.value);\n  }\n\n  const handleSubmit = async (event: any) => {\n    event.preventDefault();\n    props.onSubmit(steamId, sessionId);\n    history.push(\"/matching\");\n  }\n\n  return (\n    <div className=\"user-forms\">\n      <div className=\"join-session\">\n        <h2>Join a Session</h2>\n        <form className=\"d-table\" onSubmit={handleSubmit}>\n          <div className=\"d-table-row\">\n            <label htmlFor=\"joinSessionSteamId\" className=\"d-table-cell\">Steam ID or Profile URL:</label>\n            <div className=\"steamId-input input-margin\">\n              <span className=\"profile-url\">https://steamcommunity.com/id/</span>\n              <input\n                type=\"text\"\n                name=\"steamId\"\n                id=\"joinSessionSteamId\"\n                onChange={handleSteamIdChange}\n                className=\"d-table-cell\"\n                defaultValue={steamId}\n                placeholder=\"Steam ID or Profile URL\"\n                required\n              />\n            </div>\n          </div>\n          <div className=\"d-table-row\">\n            <label htmlFor=\"sessionId\" className=\"d-table-cell\">Session ID:&nbsp;</label>\n            <input type=\"text\"\n              name=\"sessionId\"\n              id=\"sessionId\"\n              onChange={handleSessionIdChange}\n              className=\"d-table-cell input-margin\"\n              defaultValue={sessionId}\n              placeholder=\"Session ID\"\n              required\n            />\n          </div>\n          <div className=\"d-table-row\">\n            <div className=\"d-table-cell\"></div>\n            <div className=\"d-table-cell\">\n              <input type=\"submit\" value=\"Join Session\" className=\"btn\" />\n            </div>\n          </div>\n        </form>\n        <p className=\"t-center\">\n          Or <Link to=\"/\">create a new session</Link>\n        </p>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport \"../styles/unknownPage.css\"\n\n/**\n * Simple page for 404 errors\n */\nexport default function UnknownPage() {\n  return (\n    <div className=\"unknown-page\">\n      <p>The page you are looking for was not found.</p>\n      <p>You can <Link to=\"/create\">create a new session</Link> or <Link to=\"/join\">join an existing session</Link>.</p>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\n\nexport default function Collapsible(props: {\n  header?: string | JSX.Element,\n  title?: string,\n  children?: JSX.Element\n}) {\n  const [collapsed, setCollapsed] = useState(true);\n  const [hideContent, setHideContent] = useState(true);\n  const [lastTimeout, setLastTimeout] = useState<NodeJS.Timeout | undefined>(undefined);\n\n  const toggle = () => {\n    // Abort last timeout to avoid setting hideContent true,\n    // if the content was collapsed and opened again immediately \n    if (lastTimeout) {\n      clearTimeout(lastTimeout);\n      setLastTimeout(undefined);\n    }\n\n    // Toggle collapsed state. Hide content after animation delay\n    if (collapsed) {\n      setHideContent(false);\n    } else {\n      const timeout = setTimeout(() => setHideContent(true), 500);\n      setLastTimeout(timeout);\n    }\n    setCollapsed(!collapsed);\n  }\n\n  const content = props.children ?? \"No Content\";\n  return (\n    <>\n      <button type=\"button\"\n        className=\"collapsible\"\n        onClick={toggle}\n        title={props.title}\n      >\n        {props.header ?? \"Open\"}\n        <i className={collapsed ? \"arrow-down\" : \"arrow-up\"}></i>\n      </button>\n      <div className={`content ${collapsed ? \"content-collapsed\" : \"\"}`}>\n        {hideContent ? <></> : content}\n      </div>\n    </>\n  )\n}\n","import React, { useState } from \"react\"\nimport \"../styles/tooltip.css\"\n\nexport default function Tooltip(props: {\n  children: JSX.Element,\n  tooltip: JSX.Element,\n  position: \"bottom\" | \"right\" | \"left\" | \"bottom-left\"\n}) {\n  const [show, setShow] = useState(false);\n\n  if (!show) {\n    return (\n      <div onMouseEnter={() => setShow(true)} onMouseLeave={() => setShow(false)}>\n        {props.children}\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"tooltip-wrapper\" onMouseEnter={() => setShow(true)} onMouseLeave={() => setShow(false)}>\n      <div className={`tooltip-popup ${props.position}`}>\n        {props.tooltip}\n      </div>\n      {props.children}\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function Button(props: {\n  className?: string,\n  onClick?: React.MouseEventHandler<HTMLButtonElement>,\n  danger?: boolean,\n  title?: string,\n  children?: JSX.Element | string\n}) {\n  const danger = props.danger ? \" danger\" : \"\"\n  return (\n    <button\n      className={`btn${danger} ${props.className ?? \"\"}`}\n      onClick={props.onClick}\n      title={props.title}\n    >\n      {props.children ?? \"\"}\n    </button>\n  )\n}\n","import React from \"react\"\nimport Button from \"./Button\"\nimport \"../styles/userCard.css\"\n\nexport default function UserCard(props: {\n  user: User,\n  className?: string\n}) {\n  const openSteamChat = () => {\n    window.open(`steam://friends/message/${props.user.steamId}`);\n  }\n\n  return (\n    <div className={`user-card ${props.className ?? \"\"}`}>\n      <a href={props.user.profileurl} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Steam profile\">\n        <img src={props.user.avatarmedium} alt=\"avatar\" height=\"64px\" width=\"64px\" />\n      </a>\n      <div className=\"user-details\">\n        <h3>{props.user.personaname}</h3>\n        <span><em>{props.user.realname}</em></span>\n        <br />\n      </div>\n      <Button onClick={openSteamChat}>\n        Chat\n      </Button>\n    </div>\n  )\n}\n","import React from 'react'\r\nimport Tooltip from './Tooltip'\r\nimport UserCard from './UserCard'\r\nimport '../styles/game.css'\r\n\r\n\r\nexport default function Game(props: {\r\n  game: Game | MatchedGame,\r\n  showOwners?: boolean,\r\n  isDnD?: boolean,\r\n  DnDHighlight?: boolean // Increases brightness of dnd icon for a few seconds after first render\r\n}) {\r\n  const playtime = Math.round(((props.game.playtime_forever / 60) + Number.EPSILON) * 100) / 100\r\n  const playtime2weeks = props.game.playtime_2weeks ? Math.round(((props.game.playtime_2weeks / 60) + Number.EPSILON) * 100) / 100 : 0\r\n  const isMatchedGame = \"weight\" in (props.game as MatchedGame)\r\n\r\n  let playtimeText: string;\r\n  let weightPercentage = \"\";\r\n  if (isMatchedGame) {\r\n    weightPercentage = convertWeightToPercentage((props.game as MatchedGame).weight);\r\n    playtimeText = `Average Playtime: ${playtime}h`;\r\n  } else {\r\n    playtimeText = playtime2weeks > 0 ? `Playtime: ${playtime}h / ${playtime2weeks}h` : `Playtime: ${playtime}h`\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <a\r\n        className=\"img-link\"\r\n        href={getStorePage(props.game.appid)}\r\n        title={`${props.game.name} steam page`}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <img\r\n          src={getImage(props.game.appid, props.game.img_icon_url)}\r\n          width=\"32\"\r\n          height=\"32\"\r\n          alt=\"icon\"\r\n          loading=\"lazy\"\r\n        />\r\n      </a>\r\n      <div className={isMatchedGame || props.isDnD ? \"game-info no-br\" : \"game-info\"}>\r\n        <div className=\"title\">{props.game.name}</div>\r\n        <div className=\"playtime\">{playtimeText}</div>\r\n      </div>\r\n      {isMatchedGame ?\r\n        <div className=\"match-info\">\r\n          {props.showOwners ? <Owners owners={(props.game as MatchedGame).owners} gameTitle={props.game.name} /> : <></>}\r\n          <div className=\"weight\">Match:&nbsp;{weightPercentage}</div>\r\n        </div>\r\n        : <></>}\r\n      {props.isDnD ? <div className=\"dnd-icon\">\r\n        <img src=\"dnd_icon.svg\" alt=\"\" width=\"17\" height=\"32\" className={props.DnDHighlight ? \"highlight\" : \"\"} />\r\n      </div> : <></>}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Owners(props: { owners: User[], gameTitle: string }) {\r\n  return (\r\n    <>\r\n      {props.owners.map((owner, index) =>\r\n        <Tooltip position=\"bottom-left\" tooltip={<UserCard user={owner} />} key={index}>\r\n          <img\r\n            src={owner.avatar}\r\n            alt=\"\"\r\n            height=\"16px\"\r\n            width=\"16px\"\r\n            className=\"owner\"\r\n            loading=\"lazy\"\r\n          />\r\n        </Tooltip>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction getImage(appid: number | string, hash: number | string): string {\r\n  return `https://media.steampowered.com/steamcommunity/public/images/apps/${appid}/${hash}.jpg`;\r\n}\r\n\r\nfunction getStorePage(appid: number | string): string {\r\n  return `https://store.steampowered.com/app/${appid}`;\r\n}\r\n\r\nfunction convertWeightToPercentage(weight: number): string {\r\n  // Get weight as rounded percentage with 2 trailing decimals\r\n  const num = (Math.round(weight * 10000) / 100).toFixed(2);\r\n  // remove trailing zeros using parseFloat\r\n  return `${parseFloat(num)}%`;\r\n}\r\n","import React from 'react'\nimport { Draggable } from 'react-beautiful-dnd'\nimport Game from './Game'\n\n\nexport default function DraggableGame(props: {\n  game: Game,\n  index: number,\n  className?: string,\n  DnDHighlight?: boolean\n}) {\n  return (\n    <Draggable draggableId={`${props.game.appid}`} index={props.index}>\n      {provided => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          className={props.className}\n        >\n          <Game game={props.game} isDnD DnDHighlight={props.DnDHighlight} />\n        </div>\n      )}\n    </Draggable>\n\n  )\n}\n","import { DragDropContext, Droppable, DropResult, ResponderProvided } from \"react-beautiful-dnd\";\r\nimport React, { createRef, RefObject, useEffect, useState } from \"react\"\r\nimport { compareTwoStrings } from \"string-similarity\";\r\nimport DraggableGame from \"./DraggableGame\";\r\nimport Game from \"./Game\";\r\n\r\n\r\nexport default function GamesList(props: {\r\n  games: Game[] | MatchedGame[],\r\n  onlyCommonGames?: boolean,\r\n  commonAppIds: number[],\r\n  droppableId?: string, // If this is given, the output list will be a drag & drop list\r\n  onDragEnd?: (result: DropResult, provided: ResponderProvided) => void,\r\n  header?: JSX.Element,\r\n  gameSearch?: string,\r\n  className?: string\r\n}) {\r\n  const header = props.header ?? \"\";\r\n  const dndListRef: RefObject<HTMLDivElement> = createRef();\r\n  const onlyCommonGames = props.onlyCommonGames ?? false;\r\n\r\n  useEffect(() => {\r\n    /** Finds the index of the game in games with the highest similarity with a search query */\r\n    const searchGamePosition = (search: string): number => {\r\n      let match = {\r\n        similarity: 0,\r\n        index: 0,\r\n        name: \"\"\r\n      };\r\n      props.games.forEach((game, index) => {\r\n        if (!props.onlyCommonGames || props.commonAppIds.includes(game.appid)) {\r\n          const similarity = compareTwoStrings(game.name.toLowerCase(), search.toLowerCase());\r\n          if (similarity > match.similarity) {\r\n            match = {\r\n              similarity: similarity,\r\n              index: index,\r\n              name: game.name\r\n            }\r\n          }\r\n        }\r\n      });\r\n      console.log(`Best match for game search (\"${search}\"): ${match.name}. Similarity: ${match.similarity}`);\r\n      return match.index;\r\n    }\r\n\r\n    /** Finds the depth in px of the game with the given index. Used for scrollTo() */\r\n    const getDepthForGame = (index: number) => {\r\n      if (!dndListRef.current) {\r\n        return 0;\r\n      }\r\n      let depth = 0;\r\n      for (let i = 0; i < index; i++) {\r\n        depth += dndListRef.current.children[0].children[i].scrollHeight;\r\n      }\r\n      return depth;\r\n    }\r\n\r\n    if (props.gameSearch && props.gameSearch.length > 1 && dndListRef.current) {\r\n      const index = searchGamePosition(props.gameSearch);\r\n      const pos = getDepthForGame(index);\r\n      dndListRef.current.scrollTo({ top: pos, behavior: \"smooth\" });\r\n    }\r\n  }, [dndListRef, props.games, props.gameSearch, props.commonAppIds, props.onlyCommonGames])\r\n\r\n  // Return games as drag & drop list\r\n  if (props.droppableId && props.onDragEnd) {\r\n    return (\r\n      <div className={`games-list ${props.className ?? \"\"}`}>\r\n        <DragDropContext onDragEnd={props.onDragEnd}>\r\n          {header}\r\n          <div className=\"scroll-container\" ref={dndListRef}>\r\n            <Droppable droppableId={props.droppableId}>\r\n              {provided => (\r\n                <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                  <InnerList\r\n                    games={props.games}\r\n                    onlyCommonGames={onlyCommonGames}\r\n                    commonAppIds={props.commonAppIds}\r\n                  />\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n        </DragDropContext>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // Return games as static list if droppableId or onDragEnd is not defined in props\r\n  const games = onlyCommonGames ? props.games.filter(game => props.commonAppIds.includes(game.appid)) : props.games;\r\n  return (\r\n    <div className={`games-list ${props.className ?? \"\"}`}>\r\n      {header}\r\n      <div className=\"scroll-container\">\r\n        {games.map((game, index) => <Game game={game} key={index} showOwners={!onlyCommonGames} />)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// do not re-render if the games list reference has not changed\r\nconst InnerList = React.memo(function InnerList(props: { games: Game[], commonAppIds: number[], onlyCommonGames: boolean }) {\r\n  const [highlightDnd, setHighlightDnd] = useState(false);\r\n\r\n  // Increases brightness of dnd icon for a few seconds after first render\r\n  useEffect(() => {\r\n    const timeoutStart = setTimeout(() => {\r\n      setHighlightDnd(true);\r\n    }, 1000);\r\n\r\n    const timeoutEnd = setTimeout(() => {\r\n      setHighlightDnd(false);\r\n    }, 6000);\r\n\r\n    return () => {\r\n      clearTimeout(timeoutStart);\r\n      clearTimeout(timeoutEnd);\r\n    }\r\n  }, []);\r\n\r\n  const list = props.games.map((game: Game, index: number) => {\r\n    if (!props.onlyCommonGames || props.commonAppIds.includes(game.appid)) {\r\n      return <DraggableGame key={game.appid} game={game} index={index} DnDHighlight={highlightDnd} />\r\n    } else {\r\n      return <DraggableGame key={game.appid} game={game} index={index} className=\"d-none\" DnDHighlight={highlightDnd} />\r\n    }\r\n  })\r\n  return <>{list}</>\r\n});\r\n","import React from \"react\"\nimport packageJSON from \"../../package.json\"\nimport Button from \"./Button\";\nimport \"../styles/invite.css\"\n\nexport default function Invite(props: {\n  sessionId: string,\n  className?: string,\n  openFriendsList: () => void;\n}) {\n  const invite = `${window.location.origin}${packageJSON.subUrl}/join?sessionId=${encodeURIComponent(props.sessionId)}`;\n  const copyInvite = () => {\n    navigator.clipboard.writeText(invite);\n  }\n  const handleFocus = (event: any) => {\n    event.target.select()\n  }\n\n  return (\n    <div className={`invite-box ${props.className ?? \"\"}`}>\n      <label>Invite your friends</label>\n      <div className=\"invite-row\">\n        <input className=\"invite-input\"\n          type=\"text\"\n          value={invite}\n          readOnly\n          onFocus={handleFocus}\n          title=\"Invite link. Click 'Copy Invite' to copy this link\"\n        />\n        <Button onClick={copyInvite} title=\"Copy invite link\">\n          Copy&nbsp;Invite\n        </Button>\n        <Button\n          onClick={props.openFriendsList}\n          title={\"Open your friends list and create personalized invites. \"\n            + \"This allows your friends to directly join you without looking up their steamId.\"}\n        >\n          Open&nbsp;Friends&nbsp;List\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport \"../styles/loading.css\"\n\nexport default function Loading(props: {\n  className?: string,\n  center?: boolean\n}) {\n  // Loading animation from https://loading.io/css/\n  const centerInner = props.center ? \" v-centered\" : \"\"\n  const content = (\n    <div className={`lds-roller${centerInner} ${props.className ?? \"\"}`}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  )\n\n  if (props.center) {\n    return <div className=\"flex-center\">{content}</div>;\n  }\n\n  return content;\n}\n","import React from \"react\"\r\nimport Button from \"./Button\"\r\nimport \"../styles/headers.css\"\r\n\r\nexport default function UserHeader(props: {\r\n  title: string,\r\n  user: User,\r\n  className?: string,\r\n  onSearch?: (filter: string) => void,\r\n  onSortByTotal?: () => void,\r\n  onSortByLastTwoWeeks?: () => void\r\n}) {\r\n  const showSubheader = typeof props.onSearch !== \"undefined\"\r\n    && typeof props.onSortByTotal !== \"undefined\"\r\n    && typeof props.onSortByLastTwoWeeks !== \"undefined\";\r\n\r\n  const handleSearchInput = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (typeof props.onSearch !== \"undefined\") {\r\n      props.onSearch(event.target.value);\r\n    }\r\n  }\r\n\r\n  const subheader = (\r\n    <div className=\"sub-header\">\r\n      <input type=\"text\"\r\n        placeholder=\"Search Game\"\r\n        onChange={handleSearchInput}\r\n        title=\"Search for a game in your games\"\r\n      />\r\n      <span title=\"Sorts your games according to your total playtime or playtime in the last two weeks\">\r\n        Sort&nbsp;by:\r\n      </span>\r\n      <Button onClick={props.onSortByLastTwoWeeks} title=\"Sorts your games according to your playtime in the last two weeks\">\r\n        Last&nbsp;2&nbsp;Weeks\r\n      </Button>\r\n      <Button onClick={props.onSortByTotal} title=\"Sorts your games according to your total playtime\">\r\n        Total\r\n      </Button>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <div className={`user-header ${showSubheader ? \"has-subheader\" : \"\"} ${props.className ?? \"\"}`}>\r\n        <a href={props.user.profileurl} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Steam profile\">\r\n          <img\r\n            src={props.user.avatarmedium}\r\n            width=\"45\"\r\n            height=\"45\"\r\n            alt=\"avatar\"\r\n          />\r\n        </a>\r\n        <div className=\"user-details\">\r\n          <h2>{props.title}</h2>\r\n          {props.user.preferences ? <div>{props.user.preferences.length}&nbsp;Games</div> : \"\"}\r\n        </div>\r\n      </div>\r\n      {showSubheader ? subheader : <></>}\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\"\nimport \"../styles/headers.css\"\n\nexport default function GroupHeader(props: {\n  title: string,\n  gamesCount: number,\n  commonGames: boolean,\n  className?: string\n}) {\n  return (\n    <div className={`group-header ${props.className ?? \"\"}`}>\n      <div className=\"group-details\">\n        <h2>{props.title}</h2>\n        <div>{props.gamesCount}&nbsp;{props.commonGames ? \"Common Games\" : \"Games\"}</div>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport packageJSON from \"../../package.json\"\nimport Button from \"./Button\";\n\nimport \"../styles/friend.css\"\n\nexport default function Friend(props: {\n  friend: Friend,\n  sessionId: string\n}) {\n  const friend = props.friend;\n  const personaname = (friend.personaname ?? friend.realname) ?? \"\";\n  const invite = `${window.location.origin}${packageJSON.subUrl}/join?sessionId=${encodeURIComponent(props.sessionId)}&steamId=${props.friend.steamId}`;\n  const copyInvite = () => {\n    navigator.clipboard.writeText(invite);\n  }\n  const openSteamChat = () => {\n    window.open(`steam://friends/message/${friend.steamId}`)\n  }\n\n  return (\n    <div className=\"friend\">\n      <div className=\"friend-info\">\n        <a href={friend.profileurl} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Steam profile\">\n          <img\n            src={friend.avatarmedium}\n            width=\"45\"\n            height=\"45\"\n            alt=\"avatar\"\n          />\n        </a>\n        <div className=\"friend-personal\">\n          <div>{friend.personaname ?? \"\"}</div>\n          <div>{friend.realname ? <span>(<em>{friend.realname}</em>)</span> : \"\"}</div>\n        </div>\n      </div>\n      <div className=\"buttons\">\n        <Button\n          onClick={openSteamChat}\n          title={`Opens the steam chat with ${personaname}, if steam is installed.`}\n        >\n          Steam&nbsp;Chat\n        </Button>\n        <Button\n          onClick={copyInvite}\n          title={`Copies a personalized invite for ${personaname}. This allows ${personaname} to join without entering a steamId`}\n        >\n          Copy&nbsp;Invite\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React, { RefObject, useEffect, useState } from \"react\"\r\nimport { Socket } from \"socket.io-client\";\r\nimport Friend from \"./Friend\";\r\nimport Loading from \"./Loading\";\r\nimport { compareTwoStrings } from \"string-similarity\";\r\nimport \"../styles/friendslist.css\"\r\nimport Button from \"./Button\";\r\n\r\nexport default function FriendsList(props: {\r\n  socket: Socket,\r\n  sessionId: string,\r\n  closeFriendsList: () => void;\r\n}) {\r\n  const [friends, setFriends] = useState<Friend[]>([]);\r\n  const [filter, setFilter] = useState<string>(\"\");\r\n  const [list, setList] = useState<JSX.Element[]>([]);\r\n  const listRef: RefObject<HTMLDivElement> = React.createRef();\r\n\r\n  useEffect(() => {\r\n    // set listener and request data\r\n    props.socket.on(\"friendsList\", (msg: any) => {\r\n      console.log(\"friendsList\", msg);\r\n      setFriends(msg as Friend[]);\r\n    });\r\n    props.socket.emit(\"getFriendsList\");\r\n\r\n    return () => {\r\n      props.socket.removeAllListeners(\"friendslist\");\r\n    }\r\n  }, [props.socket])\r\n\r\n  // Updates Friendslist when friends are loaded or the search is used\r\n  useEffect(() => {\r\n    const addSimilarity = (friend: Friend): Friend => {\r\n      let similarity = compareTwoStrings(friend.personaname, filter);\r\n      if (friend.realname) {\r\n        similarity += compareTwoStrings(friend.realname, filter);\r\n        similarity /= 2;\r\n      }\r\n      return { ...friend, filterSimilarity: similarity };\r\n    }\r\n\r\n    const sortBySimilarity = (a: Friend, b: Friend) => {\r\n      if (a.filterSimilarity === undefined || b.filterSimilarity === undefined) {\r\n        console.warn(\"filterSimilarity is not defined\");\r\n        return 0;\r\n      }\r\n      return b.filterSimilarity - a.filterSimilarity;\r\n    }\r\n\r\n    const mapToJSXElement = (friend: Friend) => (\r\n      <Friend friend={friend} key={friend.steamId} sessionId={props.sessionId} />\r\n    );\r\n\r\n    if (filter.length < 2) {\r\n      setList(friends.map(mapToJSXElement));\r\n    } else {\r\n      // Apply filter\r\n      setList(friends.map(addSimilarity).sort(sortBySimilarity).map(mapToJSXElement));\r\n    }\r\n  }, [filter, friends, props.sessionId])\r\n\r\n  const handleFilterChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    console.log(event.target.value);\r\n    setFilter(event.target.value);\r\n    if (listRef.current) listRef.current.scrollTo({ top: 0, behavior: 'smooth' });\r\n  }\r\n\r\n  return (\r\n    <div className=\"friendslist\">\r\n      <div className=\"blur-bg\" onClick={props.closeFriendsList}></div>\r\n      <div className=\"friends\">\r\n        <div className=\"friendslist-header\">\r\n          <input className=\"friend-search\" type=\"text\" onChange={handleFilterChange} placeholder=\"Search Friends\" />\r\n          <Button onClick={props.closeFriendsList} danger>&nbsp;Close&nbsp;Friends&nbsp;</Button>\r\n        </div>\r\n        <div className=\"list\" ref={listRef}>\r\n          {friends.length === 0 ? <Loading center /> : list}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\nimport \"../styles/switch.css\"\n\nexport default function Switch(props: {\n  onChange: (onlyCommonGames: boolean) => void,\n  checked?: boolean,\n  className?: string\n}) {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    props.onChange(event.target.checked);\n  }\n\n  const content = (\n    <div className=\"switch\">\n      <input type=\"checkbox\" onChange={handleChange} checked={props.checked} />\n      <span className=\"slider\"></span>\n    </div>\n  )\n\n  if (props.className) {\n    return <div className={props.className}>{content}</div>;\n  }\n  return content;\n}\n","import React from \"react\"\nimport Switch from \"./Switch\"\nimport \"../styles/settings.css\"\n\nexport default function Settings(props: {\n  settings: Settings,\n  setSettings: (settings: Settings) => void\n}) {\n  const setOnlyCommonGames = (onlyCommonGames: boolean) => {\n    const settings = { ...props.settings };\n    settings.onlyCommonGames = onlyCommonGames;\n    props.setSettings(settings);\n  }\n\n  return (\n    <div className=\"settings\">\n      <label>Only&nbsp;Common&nbsp;Games\n        <Switch className=\"padding-switch\" onChange={setOnlyCommonGames} checked={props.settings.onlyCommonGames} />\n      </label>\n    </div>\n  )\n}\n","import { useEffect, useState } from \"react\";\r\nimport { DropResult } from \"react-beautiful-dnd\";\r\nimport { io, Socket } from \"socket.io-client\";\r\nimport { useHistory } from \"react-router\";\r\nimport Collapsible from \"./Collapsible\";\r\nimport GamesList from \"./GamesList\";\r\nimport Invite from \"./Invite\";\r\nimport Loading from \"./Loading\";\r\nimport UserHeader from \"./UserHeader\";\r\nimport GroupHeader from \"./GroupHeader\";\r\nimport FriendsList from \"./FriendsList\";\r\nimport Settings from \"./Settings\";\r\n\r\nfunction initiateSocket(steamId: string, sessionId?: string) {\r\n  let query;\r\n  if (sessionId) {\r\n    query = { steamId: steamId, sessionId: sessionId };\r\n  } else {\r\n    query = { steamId: steamId };\r\n  }\r\n  const url = process.env.NODE_ENV === \"production\" ? \"https://common-steam-games.herokuapp.com/\" : \"http://localhost:3030\";\r\n  return io(url, {\r\n    query: query,\r\n    reconnectionAttempts: 4\r\n  });\r\n}\r\n\r\nfunction Matching(props: {\r\n  steamId: string,\r\n  sessionId?: string,\r\n  addError: (error: ErrorType) => void\r\n}) {\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [self, setSelf] = useState<User>({ steamId: props.steamId });\r\n  const [matchedGames, setMatchedGames] = useState<MatchedGame[]>([]);\r\n  const [sessionId, setSessionId] = useState<string>(\"\");\r\n  const [preferencesChanged, setPreferencesChanged] = useState(false);\r\n  const [socket, setSocket] = useState<Socket | undefined>(undefined);\r\n  const [showFriendslist, setShowFriendslist] = useState<boolean>(false);\r\n  const [settings, setSettings] = useState<Settings>({ onlyCommonGames: true });\r\n  const [commonAppIds, setCommonAppIds] = useState<number[]>([]);\r\n  const [gameSearch, setGameSearch] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  /** updates settings (state) and sends updateSettings event to backend */\r\n  const updateSettings = (settings: Settings) => {\r\n    if (socket) {\r\n      console.log(\"Sending settings\");\r\n      socket.emit(\"updateSettings\", settings);\r\n    }\r\n    setSettings(settings);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setCommonAppIds(getCommonAppIds(users.concat(self)));\r\n  }, [users, self])\r\n\r\n  useEffect(() => {\r\n    const handleSession = (msg: any) => {\r\n      console.log(\"Received session:\", msg);\r\n      if (!msg) return;\r\n      if (users.length > 0) {\r\n        console.warn(\"Received session but already is part of a session\");\r\n        return;\r\n      }\r\n\r\n      const session = msg as Session;\r\n      const ownSteamId = session.you ?? self.steamId;\r\n      const newUsers = session.users.filter(user => user.steamId !== ownSteamId);\r\n      const newSelf = session.users.find(user => user.steamId === ownSteamId);\r\n      if (!newSelf) {\r\n        props.addError({ status: 400, msg: \"Failed to connect to session. Did not find self.\" });\r\n        if (socket) socket.disconnect();\r\n        history.replace(\"/create\");\r\n        return;\r\n      }\r\n\r\n      setSessionId(session.sessionId);\r\n      setSelf(newSelf);\r\n      setUsers(newUsers);\r\n      if (session.settings) {\r\n        setSettings(session.settings);\r\n      }\r\n    }\r\n\r\n    const handleUserJoined = (msg: any) => {\r\n      console.log(\"Received handleUserJoined:\", msg, \"users:\", users);\r\n      const newUsers = [...users];\r\n      newUsers.push(msg as User);\r\n      setUsers(newUsers);\r\n    }\r\n\r\n    const handleUserDisconnect = (msg: any) => {\r\n      console.log(\"Received handleUserDisconnect:\", msg, \"users:\", users);\r\n      const newUsers = users.filter(user => user.steamId !== msg as string);\r\n      setUsers(newUsers);\r\n    }\r\n\r\n    const handleUpdateSettings = (msg: any) => {\r\n      console.log(\"Received settings:\", msg);\r\n      setSettings(msg as Settings);\r\n    }\r\n\r\n    const handleUpdatePreferences = (msg: any) => {\r\n      console.log(\"Received updatePreferences:\", msg);\r\n      const data = msg as PreferencesUpdate;\r\n      // TODO check data\r\n\r\n      const newUsers = [...users];\r\n      const changedUserIndex = newUsers.findIndex(user => user.steamId === data.steamId);\r\n      if (changedUserIndex !== -1) {\r\n        console.log(`Updating preferences for ${newUsers[changedUserIndex].personaname} (${data.steamId})`, changedUserIndex);\r\n        newUsers[changedUserIndex].preferences = data.preferences;\r\n        setUsers(newUsers);\r\n      } else {\r\n        console.log(`Tried to update preferences for ${data.steamId} but did not find user`);\r\n      }\r\n    }\r\n\r\n    const handleError = (error: any) => {\r\n      const err = error as ErrorType;\r\n      err.timeout = 15000;\r\n      props.addError(err);\r\n      if (err.status === 550) {\r\n        setShowFriendslist(false);\r\n        return;\r\n      }\r\n      if (socket) socket.disconnect();\r\n      history.replace(\"/create\");\r\n    }\r\n\r\n    if (socket) {\r\n      socket.removeAllListeners(\"error\");\r\n      socket.removeAllListeners(\"session\");\r\n      socket.removeAllListeners(\"userJoined\");\r\n      socket.removeAllListeners(\"userDisconnect\");\r\n      socket.removeAllListeners(\"updateSettings\");\r\n      socket.removeAllListeners(\"updatePreferences\");\r\n\r\n      socket.on(\"error\", handleError);\r\n      socket.on(\"session\", handleSession);\r\n      socket.on(\"userJoined\", handleUserJoined);\r\n      socket.on(\"userDisconnect\", handleUserDisconnect);\r\n      socket.on(\"updateSettings\", handleUpdateSettings);\r\n      socket.on(\"updatePreferences\", handleUpdatePreferences);\r\n    }\r\n  }, [self.steamId, users, socket, props, history]);\r\n\r\n  useEffect(() => {\r\n    const socket = initiateSocket(props.steamId, props.sessionId);\r\n    setSocket(socket);\r\n\r\n    socket.io.on(\"reconnect_failed\", () => {\r\n      console.log(\"Failed to reconnect\");\r\n      props.addError({ status: 500, msg: \"Lost connection to server\", timeout: 15000 });\r\n      history.push(\"/create\");\r\n    });\r\n    socket.io.on(\"reconnect_attempt\", (attempt) => {\r\n      const msg = `Lost connection to server, attempting to reconnect. Attempt (${attempt}/${socket.io.reconnectionAttempts()})`\r\n      console.log(msg);\r\n      props.addError({ status: 500, msg: msg, timeout: 6000 });\r\n    });\r\n\r\n    return () => {\r\n      console.log(\"#### disconnecting ###\");\r\n      if (socket) socket.disconnect();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.sessionId, props.steamId]);\r\n\r\n  // Update group preferences\r\n  useEffect(() => {\r\n    console.log(\"calculatePreferences\");\r\n    const appIds = settings.onlyCommonGames ? commonAppIds : [];\r\n    setMatchedGames(calculatePreferences(users.concat(self), appIds));\r\n  }, [users, self, settings.onlyCommonGames, commonAppIds]);\r\n\r\n  // Send preferences to backend when changed\r\n  useEffect(() => {\r\n    if (!preferencesChanged || !self.preferences) return;\r\n    if (!socket) {\r\n      console.error(\"Socket is not defined\");\r\n      return;\r\n    }\r\n    console.log(\"Sending preferences\");\r\n    socket.emit(\"updatePreferences\", self.preferences);\r\n    setPreferencesChanged(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [self.preferences, preferencesChanged])\r\n\r\n  const onDragEnd = (result: DropResult): void => {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n    const newSelf: User = { ...self } as User;\r\n    newSelf.preferences = reorder(\r\n      (self as User).preferences ?? [],\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n    if (gameSearch.length > 0) {\r\n      // Reset game search to avoid unwanted scrolling after changing preferences.\r\n      // Does not update value in UserHeader so the user can build upon the old search query.\r\n      setGameSearch(\"\");\r\n    }\r\n    setSelf(newSelf);\r\n    setPreferencesChanged(true);\r\n  }\r\n\r\n  const sortPreferences = (sortBy: \"total\" | \"recent\") => {\r\n    // select the correct sort function dependant on the sortBy argument\r\n    let sortFunc: (a: Game, b: Game) => number;\r\n    if (sortBy === \"total\") {\r\n      sortFunc = (a: Game, b: Game) => b.playtime_forever - a.playtime_forever\r\n    } else {\r\n      sortFunc = (a: Game, b: Game) => {\r\n        const aPlaytime = a.playtime_2weeks ?? 0;\r\n        const bPlaytime = b.playtime_2weeks ?? 0;\r\n        if (aPlaytime === bPlaytime) {\r\n          // Fallback if playtime in the last two weeks is equal\r\n          return b.playtime_forever - a.playtime_forever;\r\n        }\r\n        return bPlaytime - aPlaytime;\r\n      }\r\n    }\r\n    // Sort preferences using sortFunc\r\n    const newSelf: User = { ...self };\r\n    if (newSelf.preferences) {\r\n      newSelf.preferences = newSelf.preferences.sort(sortFunc);\r\n      setSelf(newSelf);\r\n      setPreferencesChanged(true);\r\n    }\r\n  }\r\n\r\n  // loading \r\n  if (!self.preferences) {\r\n    return <Loading className=\"v-centered\" center />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {showFriendslist && socket ? <FriendsList socket={socket} sessionId={sessionId} closeFriendsList={() => setShowFriendslist(false)} /> : \"\"}\r\n      <header className=\"app-header\">\r\n        <h1 className=\"title\">Common Steam Games</h1>\r\n        <Settings settings={settings} setSettings={updateSettings} />\r\n      </header>\r\n      <div className=\"container\">\r\n        <GamesList\r\n          games={self.preferences ?? []}\r\n          onlyCommonGames={settings.onlyCommonGames}\r\n          commonAppIds={commonAppIds}\r\n          onDragEnd={onDragEnd}\r\n          droppableId={`${self.personaname}'s Preferences`}\r\n          gameSearch={gameSearch}\r\n          header={\r\n            <UserHeader\r\n              title=\"Your Preferences\"\r\n              user={self}\r\n              onSearch={setGameSearch}\r\n              onSortByTotal={() => sortPreferences(\"total\")}\r\n              onSortByLastTwoWeeks={() => sortPreferences(\"recent\")}\r\n            />\r\n          }\r\n          className=\"col\"\r\n        />\r\n        <GamesList\r\n          games={matchedGames}\r\n          onlyCommonGames={settings.onlyCommonGames}\r\n          commonAppIds={commonAppIds}\r\n          header={<GroupHeader title=\"Group Preferences\" gamesCount={matchedGames.length} commonGames={settings.onlyCommonGames} />}\r\n          className=\"col\"\r\n        />\r\n        <div className=\"col mb-0\">\r\n          <Invite sessionId={sessionId} className=\"no-br-bottom\" openFriendsList={() => setShowFriendslist(true)} />\r\n          {users.map((user, index) =>\r\n            <Collapsible\r\n              header={<UserHeader title={`${user.personaname}'s preferences`} user={user} className=\"no-br no-bg\" />}\r\n              key={`${index}-${user.steamId}`}\r\n              title={`Show ${user.personaname ?? user.realname}'s' preferences`}\r\n            >\r\n              <GamesList\r\n                games={user.preferences ?? []}\r\n                onlyCommonGames={settings.onlyCommonGames}\r\n                commonAppIds={commonAppIds}\r\n                key={index}\r\n                className=\"no-br-top\"\r\n              />\r\n            </Collapsible>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction calculatePreferences(users: User[], commonAppIds: number[]): MatchedGame[] {\r\n  const matchedGames: Map<number, MatchedGame> = new Map();\r\n  const maxGames = commonAppIds.length > 0 ? commonAppIds.length : (\r\n    Math.max(...users.map(user => user.preferences ? user.preferences.length : 0)));\r\n\r\n  users.forEach(user => {\r\n    if (user.preferences) {\r\n      const preferences = commonAppIds.length > 0 ? (\r\n        user.preferences.filter(pref => commonAppIds.includes(pref.appid))\r\n      ) : user.preferences;\r\n\r\n      preferences.forEach((game, index) => {\r\n        const weight = getWeight(index, maxGames - 1);\r\n        let matchedGame: MatchedGame;\r\n        // Check if the game already exists. Otherwise add it to matchedGames.\r\n        if (matchedGames.has(game.appid)) {\r\n          matchedGame = matchedGames.get(game.appid)!;\r\n          matchedGame.weight += weight / users.length;\r\n          matchedGame.playtime_forever += game.playtime_forever / users.length;\r\n          if (matchedGame.owners) {\r\n            matchedGame.owners.push(user)\r\n          }\r\n        } else {\r\n          matchedGame = {\r\n            appid: game.appid,\r\n            name: game.name,\r\n            img_icon_url: game.img_icon_url,\r\n            img_logo_url: game.img_logo_url,\r\n            has_community_visible_stats: game.has_community_visible_stats ?? undefined,\r\n            playtime_2weeks: game.playtime_2weeks ? (game.playtime_2weeks / users.length) : undefined,\r\n            playtime_forever: game.playtime_forever / users.length,\r\n            weight: weight / users.length,\r\n            owners: [user]\r\n          };\r\n        }\r\n        matchedGames.set(game.appid, matchedGame);\r\n      });\r\n    }\r\n  });\r\n  const result = Array.from(matchedGames.values());\r\n  result.sort((a, b) => b.weight - a.weight);\r\n\r\n  return result\r\n}\r\n\r\nfunction getWeight(index: number, maxGames: number): number {\r\n  const weight = (maxGames - index) / maxGames;\r\n  return (!isNaN(weight) && weight >= 0) ? weight * weight : 0;\r\n}\r\n\r\nconst reorder = (games: Game[], startIndex: number, endIndex: number) => {\r\n  const result = Array.from(games);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n  return result;\r\n};\r\n\r\n/** Gets a list with appids for games owned by all users (incl. self) */\r\nconst getCommonAppIds = (users: User[]) => {\r\n  const appOwners: { appid: number, owners: number }[] = [];\r\n  let maxOwners = users.length;\r\n  for (const user of users) {\r\n    if (!user.preferences) {\r\n      maxOwners--;\r\n      continue;\r\n    }\r\n    for (const game of user.preferences) {\r\n      const index = appOwners.findIndex(elem => elem.appid === game.appid);\r\n      if (index >= 0) {\r\n        appOwners[index].owners++;\r\n      } else {\r\n        appOwners.push({ appid: game.appid, owners: 1 });\r\n      }\r\n    }\r\n  }\r\n  const ids = appOwners.filter(elem => elem.owners >= maxOwners).map(elem => elem.appid);\r\n  return ids;\r\n}\r\n\r\nexport default Matching;\r\n","import React, { useEffect } from 'react'\nimport \"../styles/error.css\"\n\nexport default function Error(props: {\n  error: ErrorType\n  removeError: () => void\n}) {\n  useEffect(() => {\n    const timeout = props.error.timeout;\n    let timer: NodeJS.Timeout | undefined;\n    if (timeout) {\n      timer = setTimeout(() => {\n        props.removeError();\n      }, timeout);\n    }\n    return () => {\n      if (timer) clearTimeout(timer);\n    };\n  }, [props]);\n\n  return (\n    <div className=\"error-popup\">\n      {props.error.msg}\n      <div className=\"error-close\" onClick={props.removeError}></div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Error from \"./Error\"\nimport \"../styles/error.css\"\n\nexport default function ErrorList(props: {\n  errors: ErrorType[],\n  setErrors: (err: ErrorType[]) => void\n}) {\n  const getRemoveErrorFnc = (error: ErrorType) => {\n    return () => props.setErrors(props.errors.filter(err => err !== error));\n  }\n\n  return (\n    <div className=\"error-popup-list\">\n      <div>\n        {props.errors.map((error, index) => <Error removeError={getRemoveErrorFnc(error)} error={error} key={index} />)}\n      </div>\n    </div>\n  )\n}\n","import { useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport CreateSession from \"./components/CreateSession\";\r\nimport Footer from \"./components/Footer\";\r\nimport JoinSession from \"./components/JoinSession\";\r\nimport UnknownPage from \"./components/UnknownPage\";\r\nimport Matching from \"./components/Matching\";\r\nimport ErrorList from \"./components/ErrorList\"\r\nimport packageJSON from \"../package.json\"\r\nimport \"./styles/app.css\";\r\n\r\nexport default function App(this: any) {\r\n  const [steamId, setSteamId] = useState<string | undefined>(getSteamId());\r\n  const [joinSessionId, setJoinSessionId] = useState<string | undefined>(getSessionId());\r\n  const [errors, setErrors] = useState<ErrorType[]>([]);\r\n\r\n  const addError = (error: ErrorType) => {\r\n    setErrors(errors.concat(error));\r\n  }\r\n\r\n  const createNewSession = (steamId: string) => {\r\n    sessionStorage.setItem(\"steamId\", steamId);\r\n    sessionStorage.removeItem(\"sessionId\");\r\n\r\n    setSteamId(steamId);\r\n    setJoinSessionId(undefined);\r\n  }\r\n\r\n  const joinSession = (steamId: string, sessionId: string) => {\r\n    sessionStorage.setItem(\"steamId\", steamId);\r\n    sessionStorage.setItem(\"sessionId\", sessionId);\r\n\r\n    setSteamId(steamId);\r\n    setJoinSessionId(sessionId);\r\n  }\r\n\r\n  const switchToJoinPage = joinSessionId && window.location.pathname !== `${packageJSON.subUrl}/join`;\r\n  const matching = steamId ? <Matching steamId={steamId} sessionId={joinSessionId} addError={addError} /> : <Redirect to=\"/\" />\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <ErrorList errors={errors} setErrors={setErrors} />\r\n      <Router basename={packageJSON.subUrl}>\r\n        <Switch>\r\n          <Route path=\"/matching\" exact>\r\n            {matching}\r\n          </Route>\r\n          <Route path=\"/join\" exact>\r\n            {canAutoJoin() ? <Redirect to=\"/matching\" push /> :\r\n              <JoinSession onSubmit={joinSession} sessionId={joinSessionId} steamId={steamId} />}\r\n          </Route>\r\n          <Route path=\"/create\" exact>\r\n            {switchToJoinPage ? <Redirect to=\"/join\" /> : <CreateSession onSubmit={createNewSession} steamId={steamId} />}\r\n          </Route>\r\n          <Route path=\"/\" exact>\r\n            <Redirect to=\"/create\" />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <UnknownPage />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n      <Footer />\r\n      <div className=\"background\" />\r\n    </div>\r\n  )\r\n}\r\n\r\n/**\r\n * Checks if a session id was passed in the url or is cached in the sessionStorage\r\n * @returns sessionId (string) or undefined\r\n */\r\nfunction getSessionId(): string | undefined {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const encodedSessionId = urlParams.get(\"sessionId\");\r\n  if (encodedSessionId) {\r\n    const sessionId = decodeURIComponent(encodedSessionId)\r\n    sessionStorage.setItem(\"sessionId\", sessionId);\r\n    return sessionId;\r\n  }\r\n  const cachedSessionId = sessionStorage.getItem(\"sessionId\");\r\n  if (cachedSessionId) {\r\n    return cachedSessionId;\r\n  }\r\n  return undefined;\r\n}\r\n\r\n/**\r\n * Checks if a steam id was passed in the url or is cached in the sessionStorage\r\n * @returns steamId (string) or undefined\r\n */\r\nfunction getSteamId(): string | undefined {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const encodedSteamId = urlParams.get(\"steamId\");\r\n  if (encodedSteamId) {\r\n    const steamId = decodeURIComponent(encodedSteamId);\r\n    sessionStorage.setItem(\"steamId\", steamId);\r\n    return steamId;\r\n  }\r\n  const cachedSteamId = sessionStorage.getItem(\"steamId\");\r\n  if (cachedSteamId) {\r\n    return cachedSteamId;\r\n  }\r\n  return undefined;\r\n}\r\n\r\nconst canAutoJoin = () => {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  return urlParams.has(\"steamId\") && urlParams.has(\"sessionId\");\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}